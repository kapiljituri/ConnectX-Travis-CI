Start testing: Feb 23 18:43 PST
----------------------------------------------------------
1/60 Testing: gmock-actions_test
1/60 Test: gmock-actions_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock-actions_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock-actions_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gmock_main.cc
[==========] Running 69 tests from 22 test cases.
[----------] Global test environment set-up.
[----------] 2 tests from BuiltInDefaultValueDeathTest
[ RUN      ] BuiltInDefaultValueDeathTest.IsUndefinedForReferences
[       OK ] BuiltInDefaultValueDeathTest.IsUndefinedForReferences (212 ms)
[ RUN      ] BuiltInDefaultValueDeathTest.IsUndefinedForNonDefaultConstructibleType
[       OK ] BuiltInDefaultValueDeathTest.IsUndefinedForNonDefaultConstructibleType (106 ms)
[----------] 2 tests from BuiltInDefaultValueDeathTest (318 ms total)

[----------] 1 test from DefaultValueDeathTest
[ RUN      ] DefaultValueDeathTest.GetReturnsBuiltInDefaultValueWhenUnset
[       OK ] DefaultValueDeathTest.GetReturnsBuiltInDefaultValueWhenUnset (106 ms)
[----------] 1 test from DefaultValueDeathTest (106 ms total)

[----------] 1 test from DefaultValueOfReferenceDeathTest
[ RUN      ] DefaultValueOfReferenceDeathTest.GetReturnsBuiltInDefaultValueWhenUnset
[       OK ] DefaultValueOfReferenceDeathTest.GetReturnsBuiltInDefaultValueWhenUnset (211 ms)
[----------] 1 test from DefaultValueOfReferenceDeathTest (211 ms total)

[----------] 2 tests from DoDefaultDeathTest
[ RUN      ] DoDefaultDeathTest.DiesForUnknowType
[       OK ] DoDefaultDeathTest.DiesForUnknowType (0 ms)
[ RUN      ] DoDefaultDeathTest.DiesIfUsedInCompositeAction
[       OK ] DoDefaultDeathTest.DiesIfUsedInCompositeAction (107 ms)
[----------] 2 tests from DoDefaultDeathTest (107 ms total)

[----------] 10 tests from BuiltInDefaultValueTest
[ RUN      ] BuiltInDefaultValueTest.IsNullForPointerTypes
[       OK ] BuiltInDefaultValueTest.IsNullForPointerTypes (0 ms)
[ RUN      ] BuiltInDefaultValueTest.ExistsForPointerTypes
[       OK ] BuiltInDefaultValueTest.ExistsForPointerTypes (0 ms)
[ RUN      ] BuiltInDefaultValueTest.IsZeroForNumericTypes
[       OK ] BuiltInDefaultValueTest.IsZeroForNumericTypes (0 ms)
[ RUN      ] BuiltInDefaultValueTest.ExistsForNumericTypes
[       OK ] BuiltInDefaultValueTest.ExistsForNumericTypes (0 ms)
[ RUN      ] BuiltInDefaultValueTest.IsFalseForBool
[       OK ] BuiltInDefaultValueTest.IsFalseForBool (0 ms)
[ RUN      ] BuiltInDefaultValueTest.BoolExists
[       OK ] BuiltInDefaultValueTest.BoolExists (0 ms)
[ RUN      ] BuiltInDefaultValueTest.IsEmptyStringForString
[       OK ] BuiltInDefaultValueTest.IsEmptyStringForString (0 ms)
[ RUN      ] BuiltInDefaultValueTest.ExistsForString
[       OK ] BuiltInDefaultValueTest.ExistsForString (0 ms)
[ RUN      ] BuiltInDefaultValueTest.WorksForConstTypes
[       OK ] BuiltInDefaultValueTest.WorksForConstTypes (0 ms)
[ RUN      ] BuiltInDefaultValueTest.DoesNotExistForNonDefaultConstructibleType
[       OK ] BuiltInDefaultValueTest.DoesNotExistForNonDefaultConstructibleType (0 ms)
[----------] 10 tests from BuiltInDefaultValueTest (0 ms total)

[----------] 3 tests from DefaultValueTest
[ RUN      ] DefaultValueTest.IsInitiallyUnset
[       OK ] DefaultValueTest.IsInitiallyUnset (0 ms)
[ RUN      ] DefaultValueTest.CanBeSetAndUnset
[       OK ] DefaultValueTest.CanBeSetAndUnset (0 ms)
[ RUN      ] DefaultValueTest.GetWorksForVoid
[       OK ] DefaultValueTest.GetWorksForVoid (0 ms)
[----------] 3 tests from DefaultValueTest (0 ms total)

[----------] 3 tests from DefaultValueOfReferenceTest
[ RUN      ] DefaultValueOfReferenceTest.IsInitiallyUnset
[       OK ] DefaultValueOfReferenceTest.IsInitiallyUnset (0 ms)
[ RUN      ] DefaultValueOfReferenceTest.IsInitiallyNotExisting
[       OK ] DefaultValueOfReferenceTest.IsInitiallyNotExisting (0 ms)
[ RUN      ] DefaultValueOfReferenceTest.CanBeSetAndUnset
[       OK ] DefaultValueOfReferenceTest.CanBeSetAndUnset (0 ms)
[----------] 3 tests from DefaultValueOfReferenceTest (0 ms total)

[----------] 2 tests from ActionInterfaceTest
[ RUN      ] ActionInterfaceTest.CanBeImplementedByDefiningPerform
[       OK ] ActionInterfaceTest.CanBeImplementedByDefiningPerform (0 ms)
[ RUN      ] ActionInterfaceTest.MakeAction
[       OK ] ActionInterfaceTest.MakeAction (0 ms)
[----------] 2 tests from ActionInterfaceTest (0 ms total)

[----------] 4 tests from ActionTest
[ RUN      ] ActionTest.CanBeConstructedFromActionInterface
[       OK ] ActionTest.CanBeConstructedFromActionInterface (0 ms)
[ RUN      ] ActionTest.DelegatesWorkToActionInterface
[       OK ] ActionTest.DelegatesWorkToActionInterface (0 ms)
[ RUN      ] ActionTest.IsCopyable
[       OK ] ActionTest.IsCopyable (0 ms)
[ RUN      ] ActionTest.CanBeConvertedToOtherActionType
[       OK ] ActionTest.CanBeConvertedToOtherActionType (0 ms)
[----------] 4 tests from ActionTest (0 ms total)

[----------] 2 tests from MakePolymorphicActionTest
[ RUN      ] MakePolymorphicActionTest.ConstructsActionFromImpl
[       OK ] MakePolymorphicActionTest.ConstructsActionFromImpl (0 ms)
[ RUN      ] MakePolymorphicActionTest.WorksWhenPerformHasOneTemplateParameter
[       OK ] MakePolymorphicActionTest.WorksWhenPerformHasOneTemplateParameter (0 ms)
[----------] 2 tests from MakePolymorphicActionTest (0 ms total)

[----------] 7 tests from ReturnTest
[ RUN      ] ReturnTest.WorksForVoid
[       OK ] ReturnTest.WorksForVoid (0 ms)
[ RUN      ] ReturnTest.ReturnsGivenValue
[       OK ] ReturnTest.ReturnsGivenValue (0 ms)
[ RUN      ] ReturnTest.AcceptsStringLiteral
[       OK ] ReturnTest.AcceptsStringLiteral (0 ms)
[ RUN      ] ReturnTest.SupportsWrapperReturnType
[       OK ] ReturnTest.SupportsWrapperReturnType (0 ms)
[ RUN      ] ReturnTest.IsCovariant
[       OK ] ReturnTest.IsCovariant (0 ms)
[ RUN      ] ReturnTest.ConvertsArgumentWhenConverted
[       OK ] ReturnTest.ConvertsArgumentWhenConverted (0 ms)
[ RUN      ] ReturnTest.CanConvertArgumentUsingNonConstTypeCastOperator
[       OK ] ReturnTest.CanConvertArgumentUsingNonConstTypeCastOperator (0 ms)
[----------] 7 tests from ReturnTest (0 ms total)

[----------] 1 test from ReturnNullTest
[ RUN      ] ReturnNullTest.WorksInPointerReturningFunction
[       OK ] ReturnNullTest.WorksInPointerReturningFunction (0 ms)
[----------] 1 test from ReturnNullTest (0 ms total)

[----------] 2 tests from ReturnRefTest
[ RUN      ] ReturnRefTest.WorksForReference
[       OK ] ReturnRefTest.WorksForReference (0 ms)
[ RUN      ] ReturnRefTest.IsCovariant
[       OK ] ReturnRefTest.IsCovariant (0 ms)
[----------] 2 tests from ReturnRefTest (0 ms total)

[----------] 2 tests from ReturnRefOfCopyTest
[ RUN      ] ReturnRefOfCopyTest.WorksForReference
[       OK ] ReturnRefOfCopyTest.WorksForReference (0 ms)
[ RUN      ] ReturnRefOfCopyTest.IsCovariant
[       OK ] ReturnRefOfCopyTest.IsCovariant (0 ms)
[----------] 2 tests from ReturnRefOfCopyTest (0 ms total)

[----------] 4 tests from DoDefaultTest
[ RUN      ] DoDefaultTest.ReturnsBuiltInDefaultValueByDefault
[       OK ] DoDefaultTest.ReturnsBuiltInDefaultValueByDefault (0 ms)
[ RUN      ] DoDefaultTest.ReturnsUserSpecifiedPerTypeDefaultValueWhenThereIsOne
[       OK ] DoDefaultTest.ReturnsUserSpecifiedPerTypeDefaultValueWhenThereIsOne (0 ms)
[ RUN      ] DoDefaultTest.DoesWhatOnCallSpecifies
[       OK ] DoDefaultTest.DoesWhatOnCallSpecifies (0 ms)
[ RUN      ] DoDefaultTest.CannotBeUsedInOnCall
[       OK ] DoDefaultTest.CannotBeUsedInOnCall (0 ms)
[----------] 4 tests from DoDefaultTest (0 ms total)

[----------] 5 tests from SetArgPointeeTest
[ RUN      ] SetArgPointeeTest.SetsTheNthPointee
[       OK ] SetArgPointeeTest.SetsTheNthPointee (0 ms)
[ RUN      ] SetArgPointeeTest.AcceptsStringLiteral
[       OK ] SetArgPointeeTest.AcceptsStringLiteral (0 ms)
[ RUN      ] SetArgPointeeTest.AcceptsWideStringLiteral
[       OK ] SetArgPointeeTest.AcceptsWideStringLiteral (0 ms)
[ RUN      ] SetArgPointeeTest.AcceptsCharPointer
[       OK ] SetArgPointeeTest.AcceptsCharPointer (0 ms)
[ RUN      ] SetArgPointeeTest.AcceptsWideCharPointer
[       OK ] SetArgPointeeTest.AcceptsWideCharPointer (0 ms)
[----------] 5 tests from SetArgPointeeTest (0 ms total)

[----------] 1 test from SetArgumentPointeeTest
[ RUN      ] SetArgumentPointeeTest.SetsTheNthPointee
[       OK ] SetArgumentPointeeTest.SetsTheNthPointee (0 ms)
[----------] 1 test from SetArgumentPointeeTest (0 ms total)

[----------] 3 tests from InvokeWithoutArgsTest
[ RUN      ] InvokeWithoutArgsTest.Function
[       OK ] InvokeWithoutArgsTest.Function (0 ms)
[ RUN      ] InvokeWithoutArgsTest.Functor
[       OK ] InvokeWithoutArgsTest.Functor (0 ms)
[ RUN      ] InvokeWithoutArgsTest.Method
[       OK ] InvokeWithoutArgsTest.Method (0 ms)
[----------] 3 tests from InvokeWithoutArgsTest (0 ms total)

[----------] 3 tests from IgnoreResultTest
[ RUN      ] IgnoreResultTest.PolymorphicAction
[       OK ] IgnoreResultTest.PolymorphicAction (0 ms)
[ RUN      ] IgnoreResultTest.MonomorphicAction
[       OK ] IgnoreResultTest.MonomorphicAction (0 ms)
[ RUN      ] IgnoreResultTest.ActionReturningClass
[       OK ] IgnoreResultTest.ActionReturningClass (0 ms)
[----------] 3 tests from IgnoreResultTest (0 ms total)

[----------] 3 tests from AssignTest
[ RUN      ] AssignTest.Int
[       OK ] AssignTest.Int (0 ms)
[ RUN      ] AssignTest.String
[       OK ] AssignTest.String (0 ms)
[ RUN      ] AssignTest.CompatibleTypes
[       OK ] AssignTest.CompatibleTypes (0 ms)
[----------] 3 tests from AssignTest (0 ms total)

[----------] 3 tests from SetErrnoAndReturnTest
[ RUN      ] SetErrnoAndReturnTest.Int
[       OK ] SetErrnoAndReturnTest.Int (0 ms)
[ RUN      ] SetErrnoAndReturnTest.Ptr
[       OK ] SetErrnoAndReturnTest.Ptr (0 ms)
[ RUN      ] SetErrnoAndReturnTest.CompatibleTypes
[       OK ] SetErrnoAndReturnTest.CompatibleTypes (0 ms)
[----------] 3 tests from SetErrnoAndReturnTest (0 ms total)

[----------] 5 tests from ByRefTest
[ RUN      ] ByRefTest.IsCopyable
[       OK ] ByRefTest.IsCopyable (0 ms)
[ RUN      ] ByRefTest.ConstValue
[       OK ] ByRefTest.ConstValue (0 ms)
[ RUN      ] ByRefTest.NonConstValue
[       OK ] ByRefTest.NonConstValue (0 ms)
[ RUN      ] ByRefTest.ExplicitType
[       OK ] ByRefTest.ExplicitType (0 ms)
[ RUN      ] ByRefTest.PrintsCorrectly
[       OK ] ByRefTest.PrintsCorrectly (0 ms)
[----------] 5 tests from ByRefTest (0 ms total)

[----------] Global test environment tear-down
[==========] 69 tests from 22 test cases ran. (742 ms total)
[  PASSED  ] 69 tests.
<end of output>
Test time =   0.74 sec
----------------------------------------------------------
Test Passed.
"gmock-actions_test" end time: Feb 23 18:43 PST
"gmock-actions_test" time elapsed: 00:00:00
----------------------------------------------------------

2/60 Testing: gmock-cardinalities_test
2/60 Test: gmock-cardinalities_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock-cardinalities_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock-cardinalities_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gmock_main.cc
[==========] Running 27 tests from 8 test cases.
[----------] Global test environment set-up.
[----------] 4 tests from CardinalityTest
[ RUN      ] CardinalityTest.IsDefaultConstructable
[       OK ] CardinalityTest.IsDefaultConstructable (0 ms)
[ RUN      ] CardinalityTest.IsCopyable
[       OK ] CardinalityTest.IsCopyable (0 ms)
[ RUN      ] CardinalityTest.IsOverSaturatedByCallCountWorks
[       OK ] CardinalityTest.IsOverSaturatedByCallCountWorks (0 ms)
[ RUN      ] CardinalityTest.CanDescribeActualCallCount
[       OK ] CardinalityTest.CanDescribeActualCallCount (0 ms)
[----------] 4 tests from CardinalityTest (0 ms total)

[----------] 1 test from AnyNumber
[ RUN      ] AnyNumber.Works
[       OK ] AnyNumber.Works (0 ms)
[----------] 1 test from AnyNumber (0 ms total)

[----------] 1 test from AnyNumberTest
[ RUN      ] AnyNumberTest.HasCorrectBounds
[       OK ] AnyNumberTest.HasCorrectBounds (0 ms)
[----------] 1 test from AnyNumberTest (0 ms total)

[----------] 4 tests from AtLeastTest
[ RUN      ] AtLeastTest.OnNegativeNumber
[       OK ] AtLeastTest.OnNegativeNumber (0 ms)
[ RUN      ] AtLeastTest.OnZero
[       OK ] AtLeastTest.OnZero (0 ms)
[ RUN      ] AtLeastTest.OnPositiveNumber
[       OK ] AtLeastTest.OnPositiveNumber (0 ms)
[ RUN      ] AtLeastTest.HasCorrectBounds
[       OK ] AtLeastTest.HasCorrectBounds (0 ms)
[----------] 4 tests from AtLeastTest (0 ms total)

[----------] 4 tests from AtMostTest
[ RUN      ] AtMostTest.OnNegativeNumber
[       OK ] AtMostTest.OnNegativeNumber (0 ms)
[ RUN      ] AtMostTest.OnZero
[       OK ] AtMostTest.OnZero (0 ms)
[ RUN      ] AtMostTest.OnPositiveNumber
[       OK ] AtMostTest.OnPositiveNumber (0 ms)
[ RUN      ] AtMostTest.HasCorrectBounds
[       OK ] AtMostTest.HasCorrectBounds (0 ms)
[----------] 4 tests from AtMostTest (0 ms total)

[----------] 8 tests from BetweenTest
[ RUN      ] BetweenTest.OnNegativeStart
[       OK ] BetweenTest.OnNegativeStart (0 ms)
[ RUN      ] BetweenTest.OnNegativeEnd
[       OK ] BetweenTest.OnNegativeEnd (0 ms)
[ RUN      ] BetweenTest.OnStartBiggerThanEnd
[       OK ] BetweenTest.OnStartBiggerThanEnd (0 ms)
[ RUN      ] BetweenTest.OnZeroStartAndZeroEnd
[       OK ] BetweenTest.OnZeroStartAndZeroEnd (0 ms)
[ RUN      ] BetweenTest.OnZeroStartAndNonZeroEnd
[       OK ] BetweenTest.OnZeroStartAndNonZeroEnd (0 ms)
[ RUN      ] BetweenTest.OnSameStartAndEnd
[       OK ] BetweenTest.OnSameStartAndEnd (0 ms)
[ RUN      ] BetweenTest.OnDifferentStartAndEnd
[       OK ] BetweenTest.OnDifferentStartAndEnd (0 ms)
[ RUN      ] BetweenTest.HasCorrectBounds
[       OK ] BetweenTest.HasCorrectBounds (0 ms)
[----------] 8 tests from BetweenTest (0 ms total)

[----------] 4 tests from ExactlyTest
[ RUN      ] ExactlyTest.OnNegativeNumber
[       OK ] ExactlyTest.OnNegativeNumber (0 ms)
[ RUN      ] ExactlyTest.OnZero
[       OK ] ExactlyTest.OnZero (0 ms)
[ RUN      ] ExactlyTest.OnPositiveNumber
[       OK ] ExactlyTest.OnPositiveNumber (0 ms)
[ RUN      ] ExactlyTest.HasCorrectBounds
[       OK ] ExactlyTest.HasCorrectBounds (0 ms)
[----------] 4 tests from ExactlyTest (0 ms total)

[----------] 1 test from MakeCardinalityTest
[ RUN      ] MakeCardinalityTest.ConstructsCardinalityFromInterface
[       OK ] MakeCardinalityTest.ConstructsCardinalityFromInterface (0 ms)
[----------] 1 test from MakeCardinalityTest (0 ms total)

[----------] Global test environment tear-down
[==========] 27 tests from 8 test cases ran. (0 ms total)
[  PASSED  ] 27 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gmock-cardinalities_test" end time: Feb 23 18:43 PST
"gmock-cardinalities_test" time elapsed: 00:00:00
----------------------------------------------------------

3/60 Testing: gmock_ex_test
3/60 Test: gmock_ex_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock_ex_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock_ex_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gmock_main.cc
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from DefaultValueTest
[ RUN      ] DefaultValueTest.ThrowsRuntimeErrorWhenNoDefaultValue
[       OK ] DefaultValueTest.ThrowsRuntimeErrorWhenNoDefaultValue (0 ms)
[----------] 1 test from DefaultValueTest (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gmock_ex_test" end time: Feb 23 18:43 PST
"gmock_ex_test" time elapsed: 00:00:00
----------------------------------------------------------

4/60 Testing: gmock-generated-actions_test
4/60 Test: gmock-generated-actions_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock-generated-actions_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock-generated-actions_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gmock_main.cc
[==========] Running 77 tests from 8 test cases.
[----------] Global test environment set-up.
[----------] 14 tests from InvokeArgumentTest
[ RUN      ] InvokeArgumentTest.Function0
[       OK ] InvokeArgumentTest.Function0 (0 ms)
[ RUN      ] InvokeArgumentTest.Functor1
[       OK ] InvokeArgumentTest.Functor1 (0 ms)
[ RUN      ] InvokeArgumentTest.Function5
[       OK ] InvokeArgumentTest.Function5 (0 ms)
[ RUN      ] InvokeArgumentTest.Functor5
[       OK ] InvokeArgumentTest.Functor5 (0 ms)
[ RUN      ] InvokeArgumentTest.Function6
[       OK ] InvokeArgumentTest.Function6 (0 ms)
[ RUN      ] InvokeArgumentTest.Functor6
[       OK ] InvokeArgumentTest.Functor6 (0 ms)
[ RUN      ] InvokeArgumentTest.Function7
[       OK ] InvokeArgumentTest.Function7 (0 ms)
[ RUN      ] InvokeArgumentTest.Function8
[       OK ] InvokeArgumentTest.Function8 (0 ms)
[ RUN      ] InvokeArgumentTest.Function9
[       OK ] InvokeArgumentTest.Function9 (0 ms)
[ RUN      ] InvokeArgumentTest.Function10
[       OK ] InvokeArgumentTest.Function10 (0 ms)
[ RUN      ] InvokeArgumentTest.ByPointerFunction
[       OK ] InvokeArgumentTest.ByPointerFunction (0 ms)
[ RUN      ] InvokeArgumentTest.FunctionWithCStringLiteral
[       OK ] InvokeArgumentTest.FunctionWithCStringLiteral (0 ms)
[ RUN      ] InvokeArgumentTest.ByConstReferenceFunction
[       OK ] InvokeArgumentTest.ByConstReferenceFunction (0 ms)
[ RUN      ] InvokeArgumentTest.ByExplicitConstReferenceFunction
[       OK ] InvokeArgumentTest.ByExplicitConstReferenceFunction (0 ms)
[----------] 14 tests from InvokeArgumentTest (0 ms total)

[----------] 16 tests from WithArgsTest
[ RUN      ] WithArgsTest.OneArg
[       OK ] WithArgsTest.OneArg (0 ms)
[ RUN      ] WithArgsTest.TwoArgs
[       OK ] WithArgsTest.TwoArgs (0 ms)
[ RUN      ] WithArgsTest.ThreeArgs
[       OK ] WithArgsTest.ThreeArgs (0 ms)
[ RUN      ] WithArgsTest.FourArgs
[       OK ] WithArgsTest.FourArgs (0 ms)
[ RUN      ] WithArgsTest.FiveArgs
[       OK ] WithArgsTest.FiveArgs (0 ms)
[ RUN      ] WithArgsTest.SixArgs
[       OK ] WithArgsTest.SixArgs (0 ms)
[ RUN      ] WithArgsTest.SevenArgs
[       OK ] WithArgsTest.SevenArgs (0 ms)
[ RUN      ] WithArgsTest.EightArgs
[       OK ] WithArgsTest.EightArgs (0 ms)
[ RUN      ] WithArgsTest.NineArgs
[       OK ] WithArgsTest.NineArgs (0 ms)
[ RUN      ] WithArgsTest.TenArgs
[       OK ] WithArgsTest.TenArgs (0 ms)
[ RUN      ] WithArgsTest.NonInvokeAction
[       OK ] WithArgsTest.NonInvokeAction (0 ms)
[ RUN      ] WithArgsTest.Identity
[       OK ] WithArgsTest.Identity (0 ms)
[ RUN      ] WithArgsTest.RepeatedArguments
[       OK ] WithArgsTest.RepeatedArguments (0 ms)
[ RUN      ] WithArgsTest.ReversedArgumentOrder
[       OK ] WithArgsTest.ReversedArgumentOrder (0 ms)
[ RUN      ] WithArgsTest.ArgsOfCompatibleTypes
[       OK ] WithArgsTest.ArgsOfCompatibleTypes (0 ms)
[ RUN      ] WithArgsTest.VoidAction
[       OK ] WithArgsTest.VoidAction (0 ms)
[----------] 16 tests from WithArgsTest (0 ms total)

[----------] 9 tests from DoAllTest
[ RUN      ] DoAllTest.TwoActions
[       OK ] DoAllTest.TwoActions (0 ms)
[ RUN      ] DoAllTest.ThreeActions
[       OK ] DoAllTest.ThreeActions (0 ms)
[ RUN      ] DoAllTest.FourActions
[       OK ] DoAllTest.FourActions (0 ms)
[ RUN      ] DoAllTest.FiveActions
[       OK ] DoAllTest.FiveActions (0 ms)
[ RUN      ] DoAllTest.SixActions
[       OK ] DoAllTest.SixActions (0 ms)
[ RUN      ] DoAllTest.SevenActions
[       OK ] DoAllTest.SevenActions (0 ms)
[ RUN      ] DoAllTest.EightActions
[       OK ] DoAllTest.EightActions (0 ms)
[ RUN      ] DoAllTest.NineActions
[       OK ] DoAllTest.NineActions (0 ms)
[ RUN      ] DoAllTest.TenActions
[       OK ] DoAllTest.TenActions (0 ms)
[----------] 9 tests from DoAllTest (1 ms total)

[----------] 11 tests from ActionMacroTest
[ RUN      ] ActionMacroTest.WorksWhenNotReferencingArguments
[       OK ] ActionMacroTest.WorksWhenNotReferencingArguments (0 ms)
[ RUN      ] ActionMacroTest.WorksWhenReturningVoid
[       OK ] ActionMacroTest.WorksWhenReturningVoid (0 ms)
[ RUN      ] ActionMacroTest.CanReferenceArgumentType
[       OK ] ActionMacroTest.CanReferenceArgumentType (0 ms)
[ RUN      ] ActionMacroTest.CanReferenceArgumentTuple
[       OK ] ActionMacroTest.CanReferenceArgumentTuple (0 ms)
[ RUN      ] ActionMacroTest.CanReferenceMockFunctionType
[       OK ] ActionMacroTest.CanReferenceMockFunctionType (0 ms)
[ RUN      ] ActionMacroTest.CanReferenceMockFunctionReturnType
[       OK ] ActionMacroTest.CanReferenceMockFunctionReturnType (0 ms)
[ RUN      ] ActionMacroTest.WorksForConstReferenceArg
[       OK ] ActionMacroTest.WorksForConstReferenceArg (0 ms)
[ RUN      ] ActionMacroTest.WorksForNonConstReferenceArg
[       OK ] ActionMacroTest.WorksForNonConstReferenceArg (0 ms)
[ RUN      ] ActionMacroTest.WorksInNamespace
[       OK ] ActionMacroTest.WorksInNamespace (0 ms)
[ RUN      ] ActionMacroTest.WorksForDifferentArgumentNumbers
[       OK ] ActionMacroTest.WorksForDifferentArgumentNumbers (0 ms)
[ RUN      ] ActionMacroTest.CanDefineOverloadedActions
[       OK ] ActionMacroTest.CanDefineOverloadedActions (0 ms)
[----------] 11 tests from ActionMacroTest (0 ms total)

[----------] 3 tests from ActionPMacroTest
[ RUN      ] ActionPMacroTest.DefinesParameterizedAction
[       OK ] ActionPMacroTest.DefinesParameterizedAction (0 ms)
[ RUN      ] ActionPMacroTest.CanReferenceArgumentAndParameterTypes
[       OK ] ActionPMacroTest.CanReferenceArgumentAndParameterTypes (0 ms)
[ RUN      ] ActionPMacroTest.WorksInCompatibleMockFunction
[       OK ] ActionPMacroTest.WorksInCompatibleMockFunction (0 ms)
[----------] 3 tests from ActionPMacroTest (0 ms total)

[----------] 12 tests from ActionPnMacroTest
[ RUN      ] ActionPnMacroTest.WorksFor3Parameters
[       OK ] ActionPnMacroTest.WorksFor3Parameters (0 ms)
[ RUN      ] ActionPnMacroTest.WorksFor4Parameters
[       OK ] ActionPnMacroTest.WorksFor4Parameters (0 ms)
[ RUN      ] ActionPnMacroTest.WorksFor5Parameters
[       OK ] ActionPnMacroTest.WorksFor5Parameters (0 ms)
[ RUN      ] ActionPnMacroTest.WorksFor6Parameters
[       OK ] ActionPnMacroTest.WorksFor6Parameters (0 ms)
[ RUN      ] ActionPnMacroTest.WorksFor7Parameters
[       OK ] ActionPnMacroTest.WorksFor7Parameters (0 ms)
[ RUN      ] ActionPnMacroTest.WorksFor8Parameters
[       OK ] ActionPnMacroTest.WorksFor8Parameters (0 ms)
[ RUN      ] ActionPnMacroTest.WorksFor9Parameters
[       OK ] ActionPnMacroTest.WorksFor9Parameters (0 ms)
[ RUN      ] ActionPnMacroTest.WorksFor10Parameters
[       OK ] ActionPnMacroTest.WorksFor10Parameters (0 ms)
[ RUN      ] ActionPnMacroTest.SimpleTypePromotion
[       OK ] ActionPnMacroTest.SimpleTypePromotion (0 ms)
[ RUN      ] ActionPnMacroTest.CanPartiallyRestrictParameterTypes
[       OK ] ActionPnMacroTest.CanPartiallyRestrictParameterTypes (0 ms)
[ RUN      ] ActionPnMacroTest.TypesAreCorrect
[       OK ] ActionPnMacroTest.TypesAreCorrect (0 ms)
[ RUN      ] ActionPnMacroTest.CanExplicitlyInstantiateWithReferenceTypes
[       OK ] ActionPnMacroTest.CanExplicitlyInstantiateWithReferenceTypes (0 ms)
[----------] 12 tests from ActionPnMacroTest (0 ms total)

[----------] 5 tests from ReturnNewTest
[ RUN      ] ReturnNewTest.NoArgs
[       OK ] ReturnNewTest.NoArgs (0 ms)
[ RUN      ] ReturnNewTest.Unary
[       OK ] ReturnNewTest.Unary (0 ms)
[ RUN      ] ReturnNewTest.UnaryWorksWhenMockMethodHasArgs
[       OK ] ReturnNewTest.UnaryWorksWhenMockMethodHasArgs (0 ms)
[ RUN      ] ReturnNewTest.UnaryWorksWhenMockMethodReturnsPointerToConst
[       OK ] ReturnNewTest.UnaryWorksWhenMockMethodReturnsPointerToConst (0 ms)
[ RUN      ] ReturnNewTest.ConstructorThatTakes10Arguments
[       OK ] ReturnNewTest.ConstructorThatTakes10Arguments (0 ms)
[----------] 5 tests from ReturnNewTest (0 ms total)

[----------] 7 tests from ActionTemplateTest
[ RUN      ] ActionTemplateTest.WorksWithoutValueParam
[       OK ] ActionTemplateTest.WorksWithoutValueParam (0 ms)
[ RUN      ] ActionTemplateTest.WorksWithValueParams
[       OK ] ActionTemplateTest.WorksWithValueParams (0 ms)
[ RUN      ] ActionTemplateTest.WorksForIntegralTemplateParams
[       OK ] ActionTemplateTest.WorksForIntegralTemplateParams (0 ms)
[ RUN      ] ActionTemplateTest.WorksForTemplateTemplateParameters
[       OK ] ActionTemplateTest.WorksForTemplateTemplateParameters (0 ms)
[ RUN      ] ActionTemplateTest.WorksFor10TemplateParameters
[       OK ] ActionTemplateTest.WorksFor10TemplateParameters (0 ms)
[ RUN      ] ActionTemplateTest.WorksFor10ValueParameters
[       OK ] ActionTemplateTest.WorksFor10ValueParameters (0 ms)
[ RUN      ] ActionTemplateTest.CanBeOverloadedOnNumberOfValueParameters
[       OK ] ActionTemplateTest.CanBeOverloadedOnNumberOfValueParameters (0 ms)
[----------] 7 tests from ActionTemplateTest (0 ms total)

[----------] Global test environment tear-down
[==========] 77 tests from 8 test cases ran. (1 ms total)
[  PASSED  ] 77 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gmock-generated-actions_test" end time: Feb 23 18:43 PST
"gmock-generated-actions_test" time elapsed: 00:00:00
----------------------------------------------------------

5/60 Testing: gmock-generated-function-mockers_test
5/60 Test: gmock-generated-function-mockers_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock-generated-function-mockers_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock-generated-function-mockers_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gmock_main.cc
[==========] Running 22 tests from 5 test cases.
[----------] Global test environment set-up.
[----------] 12 tests from FunctionMockerTest
[ RUN      ] FunctionMockerTest.MocksVoidFunction
[       OK ] FunctionMockerTest.MocksVoidFunction (0 ms)
[ RUN      ] FunctionMockerTest.MocksNullaryFunction
[       OK ] FunctionMockerTest.MocksNullaryFunction (0 ms)
[ RUN      ] FunctionMockerTest.MocksUnaryFunction

GMOCK WARNING:
/home/kapil/630/a6/googletest/googlemock/test/gmock-generated-function-mockers_test.cc:208: Too few actions specified in EXPECT_CALL(mock_foo_, Unary(Eq(2)))...
Expected to be called twice, but has only 1 WillOnce().
GMOCK WARNING:
/home/kapil/630/a6/googletest/googlemock/test/gmock-generated-function-mockers_test.cc:208: Actions ran out in EXPECT_CALL(mock_foo_, Unary(Eq(2)))...
Called 2 times, but only 1 WillOnce() is specified - returning default value.
Stack trace:
[       OK ] FunctionMockerTest.MocksUnaryFunction (0 ms)
[ RUN      ] FunctionMockerTest.MocksBinaryFunction
[       OK ] FunctionMockerTest.MocksBinaryFunction (0 ms)
[ RUN      ] FunctionMockerTest.MocksDecimalFunction
[       OK ] FunctionMockerTest.MocksDecimalFunction (1 ms)
[ RUN      ] FunctionMockerTest.MocksFunctionWithNonConstReferenceArgument
[       OK ] FunctionMockerTest.MocksFunctionWithNonConstReferenceArgument (0 ms)
[ RUN      ] FunctionMockerTest.MocksFunctionWithConstReferenceArgument
[       OK ] FunctionMockerTest.MocksFunctionWithConstReferenceArgument (0 ms)
[ RUN      ] FunctionMockerTest.MocksFunctionWithConstArgument
[       OK ] FunctionMockerTest.MocksFunctionWithConstArgument (0 ms)
[ RUN      ] FunctionMockerTest.MocksFunctionsOverloadedOnArgumentNumber
[       OK ] FunctionMockerTest.MocksFunctionsOverloadedOnArgumentNumber (0 ms)
[ RUN      ] FunctionMockerTest.MocksFunctionsOverloadedOnArgumentType
[       OK ] FunctionMockerTest.MocksFunctionsOverloadedOnArgumentType (0 ms)
[ RUN      ] FunctionMockerTest.MocksFunctionsOverloadedOnConstnessOfThis
[       OK ] FunctionMockerTest.MocksFunctionsOverloadedOnConstnessOfThis (0 ms)
[ RUN      ] FunctionMockerTest.MocksReturnTypeWithComma
[       OK ] FunctionMockerTest.MocksReturnTypeWithComma (0 ms)
[----------] 12 tests from FunctionMockerTest (1 ms total)

[----------] 1 test from ExpectCallTest
[ RUN      ] ExpectCallTest.UnmentionedFunctionCanBeCalledAnyNumberOfTimes

GMOCK WARNING:
Uninteresting mock function call - returning directly.
    Function call: DoB()
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - returning directly.
    Function call: DoB()
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - returning directly.
    Function call: DoB()
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
[       OK ] ExpectCallTest.UnmentionedFunctionCanBeCalledAnyNumberOfTimes (0 ms)
[----------] 1 test from ExpectCallTest (0 ms total)

[----------] 2 tests from TemplateMockTest
[ RUN      ] TemplateMockTest.Works
[       OK ] TemplateMockTest.Works (0 ms)
[ RUN      ] TemplateMockTest.MethodWithCommaInReturnTypeWorks
[       OK ] TemplateMockTest.MethodWithCommaInReturnTypeWorks (0 ms)
[----------] 2 tests from TemplateMockTest (0 ms total)

[----------] 2 tests from OverloadedMockMethodTest
[ RUN      ] OverloadedMockMethodTest.CanOverloadOnArgNumberInMacroBody
[       OK ] OverloadedMockMethodTest.CanOverloadOnArgNumberInMacroBody (0 ms)
[ RUN      ] OverloadedMockMethodTest.CanOverloadOnConstnessInMacroBody
[       OK ] OverloadedMockMethodTest.CanOverloadOnConstnessInMacroBody (0 ms)
[----------] 2 tests from OverloadedMockMethodTest (0 ms total)

[----------] 5 tests from MockFunctionTest
[ RUN      ] MockFunctionTest.WorksForVoidNullary
[       OK ] MockFunctionTest.WorksForVoidNullary (0 ms)
[ RUN      ] MockFunctionTest.WorksForNonVoidNullary
[       OK ] MockFunctionTest.WorksForNonVoidNullary (0 ms)
[ RUN      ] MockFunctionTest.WorksForVoidUnary
[       OK ] MockFunctionTest.WorksForVoidUnary (0 ms)
[ RUN      ] MockFunctionTest.WorksForNonVoidBinary
[       OK ] MockFunctionTest.WorksForNonVoidBinary (0 ms)
[ RUN      ] MockFunctionTest.WorksFor10Arguments
[       OK ] MockFunctionTest.WorksFor10Arguments (1 ms)
[----------] 5 tests from MockFunctionTest (1 ms total)

[----------] Global test environment tear-down
[==========] 22 tests from 5 test cases ran. (2 ms total)
[  PASSED  ] 22 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gmock-generated-function-mockers_test" end time: Feb 23 18:43 PST
"gmock-generated-function-mockers_test" time elapsed: 00:00:00
----------------------------------------------------------

6/60 Testing: gmock-generated-internal-utils_test
6/60 Test: gmock-generated-internal-utils_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock-generated-internal-utils_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock-generated-internal-utils_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gmock_main.cc
[==========] Running 8 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 4 tests from MatcherTupleTest
[ RUN      ] MatcherTupleTest.ForSize0
[       OK ] MatcherTupleTest.ForSize0 (0 ms)
[ RUN      ] MatcherTupleTest.ForSize1
[       OK ] MatcherTupleTest.ForSize1 (0 ms)
[ RUN      ] MatcherTupleTest.ForSize2
[       OK ] MatcherTupleTest.ForSize2 (0 ms)
[ RUN      ] MatcherTupleTest.ForSize5
[       OK ] MatcherTupleTest.ForSize5 (0 ms)
[----------] 4 tests from MatcherTupleTest (0 ms total)

[----------] 4 tests from FunctionTest
[ RUN      ] FunctionTest.Nullary
[       OK ] FunctionTest.Nullary (0 ms)
[ RUN      ] FunctionTest.Unary
[       OK ] FunctionTest.Unary (0 ms)
[ RUN      ] FunctionTest.Binary
[       OK ] FunctionTest.Binary (0 ms)
[ RUN      ] FunctionTest.LongArgumentList
[       OK ] FunctionTest.LongArgumentList (0 ms)
[----------] 4 tests from FunctionTest (0 ms total)

[----------] Global test environment tear-down
[==========] 8 tests from 2 test cases ran. (0 ms total)
[  PASSED  ] 8 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gmock-generated-internal-utils_test" end time: Feb 23 18:43 PST
"gmock-generated-internal-utils_test" time elapsed: 00:00:00
----------------------------------------------------------

7/60 Testing: gmock-generated-matchers_test
7/60 Test: gmock-generated-matchers_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock-generated-matchers_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock-generated-matchers_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gmock_main.cc
[==========] Running 89 tests from 9 test cases.
[----------] Global test environment set-up.
[----------] 15 tests from ArgsTest
[ RUN      ] ArgsTest.AcceptsZeroTemplateArg
[       OK ] ArgsTest.AcceptsZeroTemplateArg (0 ms)
[ RUN      ] ArgsTest.AcceptsOneTemplateArg
[       OK ] ArgsTest.AcceptsOneTemplateArg (0 ms)
[ RUN      ] ArgsTest.AcceptsTwoTemplateArgs
[       OK ] ArgsTest.AcceptsTwoTemplateArgs (0 ms)
[ RUN      ] ArgsTest.AcceptsRepeatedTemplateArgs
[       OK ] ArgsTest.AcceptsRepeatedTemplateArgs (0 ms)
[ RUN      ] ArgsTest.AcceptsDecreasingTemplateArgs
[       OK ] ArgsTest.AcceptsDecreasingTemplateArgs (0 ms)
[ RUN      ] ArgsTest.AcceptsMoreTemplateArgsThanArityOfOriginalTuple
[       OK ] ArgsTest.AcceptsMoreTemplateArgsThanArityOfOriginalTuple (0 ms)
[ RUN      ] ArgsTest.CanBeNested
[       OK ] ArgsTest.CanBeNested (0 ms)
[ RUN      ] ArgsTest.CanMatchTupleByValue
[       OK ] ArgsTest.CanMatchTupleByValue (0 ms)
[ RUN      ] ArgsTest.CanMatchTupleByReference
[       OK ] ArgsTest.CanMatchTupleByReference (0 ms)
[ RUN      ] ArgsTest.AcceptsTenTemplateArgs
[       OK ] ArgsTest.AcceptsTenTemplateArgs (0 ms)
[ RUN      ] ArgsTest.DescirbesSelfCorrectly
[       OK ] ArgsTest.DescirbesSelfCorrectly (0 ms)
[ RUN      ] ArgsTest.DescirbesNestedArgsCorrectly
[       OK ] ArgsTest.DescirbesNestedArgsCorrectly (0 ms)
[ RUN      ] ArgsTest.DescribesNegationCorrectly
[       OK ] ArgsTest.DescribesNegationCorrectly (0 ms)
[ RUN      ] ArgsTest.ExplainsMatchResultWithoutInnerExplanation
[       OK ] ArgsTest.ExplainsMatchResultWithoutInnerExplanation (0 ms)
[ RUN      ] ArgsTest.ExplainsMatchResultWithInnerExplanation
[       OK ] ArgsTest.ExplainsMatchResultWithInnerExplanation (0 ms)
[----------] 15 tests from ArgsTest (0 ms total)

[----------] 30 tests from ElementsAreTest
[ RUN      ] ElementsAreTest.CanDescribeExpectingNoElement
[       OK ] ElementsAreTest.CanDescribeExpectingNoElement (0 ms)
[ RUN      ] ElementsAreTest.CanDescribeExpectingOneElement
[       OK ] ElementsAreTest.CanDescribeExpectingOneElement (0 ms)
[ RUN      ] ElementsAreTest.CanDescribeExpectingManyElements
[       OK ] ElementsAreTest.CanDescribeExpectingManyElements (0 ms)
[ RUN      ] ElementsAreTest.CanDescribeNegationOfExpectingNoElement
[       OK ] ElementsAreTest.CanDescribeNegationOfExpectingNoElement (0 ms)
[ RUN      ] ElementsAreTest.CanDescribeNegationOfExpectingOneElment
[       OK ] ElementsAreTest.CanDescribeNegationOfExpectingOneElment (0 ms)
[ RUN      ] ElementsAreTest.CanDescribeNegationOfExpectingManyElements
[       OK ] ElementsAreTest.CanDescribeNegationOfExpectingManyElements (0 ms)
[ RUN      ] ElementsAreTest.DoesNotExplainTrivialMatch
[       OK ] ElementsAreTest.DoesNotExplainTrivialMatch (0 ms)
[ RUN      ] ElementsAreTest.ExplainsNonTrivialMatch
[       OK ] ElementsAreTest.ExplainsNonTrivialMatch (1 ms)
[ RUN      ] ElementsAreTest.CanExplainMismatchWrongSize
[       OK ] ElementsAreTest.CanExplainMismatchWrongSize (0 ms)
[ RUN      ] ElementsAreTest.CanExplainMismatchRightSize
[       OK ] ElementsAreTest.CanExplainMismatchRightSize (0 ms)
[ RUN      ] ElementsAreTest.MatchesOneElementVector
[       OK ] ElementsAreTest.MatchesOneElementVector (0 ms)
[ RUN      ] ElementsAreTest.MatchesOneElementList
[       OK ] ElementsAreTest.MatchesOneElementList (0 ms)
[ RUN      ] ElementsAreTest.MatchesThreeElementVector
[       OK ] ElementsAreTest.MatchesThreeElementVector (0 ms)
[ RUN      ] ElementsAreTest.MatchesOneElementEqMatcher
[       OK ] ElementsAreTest.MatchesOneElementEqMatcher (0 ms)
[ RUN      ] ElementsAreTest.MatchesOneElementAnyMatcher
[       OK ] ElementsAreTest.MatchesOneElementAnyMatcher (0 ms)
[ RUN      ] ElementsAreTest.MatchesOneElementValue
[       OK ] ElementsAreTest.MatchesOneElementValue (0 ms)
[ RUN      ] ElementsAreTest.MatchesThreeElementsMixedMatchers
[       OK ] ElementsAreTest.MatchesThreeElementsMixedMatchers (0 ms)
[ RUN      ] ElementsAreTest.MatchesTenElementVector
[       OK ] ElementsAreTest.MatchesTenElementVector (0 ms)
[ RUN      ] ElementsAreTest.DoesNotMatchWrongSize
[       OK ] ElementsAreTest.DoesNotMatchWrongSize (0 ms)
[ RUN      ] ElementsAreTest.DoesNotMatchWrongValue
[       OK ] ElementsAreTest.DoesNotMatchWrongValue (0 ms)
[ RUN      ] ElementsAreTest.DoesNotMatchWrongOrder
[       OK ] ElementsAreTest.DoesNotMatchWrongOrder (0 ms)
[ RUN      ] ElementsAreTest.WorksForNestedContainer
[       OK ] ElementsAreTest.WorksForNestedContainer (0 ms)
[ RUN      ] ElementsAreTest.WorksWithByRefElementMatchers
[       OK ] ElementsAreTest.WorksWithByRefElementMatchers (0 ms)
[ RUN      ] ElementsAreTest.WorksWithContainerPointerUsingPointee
[       OK ] ElementsAreTest.WorksWithContainerPointerUsingPointee (0 ms)
[ RUN      ] ElementsAreTest.WorksWithNativeArrayPassedByReference
[       OK ] ElementsAreTest.WorksWithNativeArrayPassedByReference (0 ms)
[ RUN      ] ElementsAreTest.WorksWithNativeArrayPassedAsPointerAndSize
[       OK ] ElementsAreTest.WorksWithNativeArrayPassedAsPointerAndSize (0 ms)
[ RUN      ] ElementsAreTest.WorksWithTwoDimensionalNativeArray
[       OK ] ElementsAreTest.WorksWithTwoDimensionalNativeArray (0 ms)
[ RUN      ] ElementsAreTest.AcceptsStringLiteral
[       OK ] ElementsAreTest.AcceptsStringLiteral (0 ms)
[ RUN      ] ElementsAreTest.AcceptsArrayWithUnknownSize
[       OK ] ElementsAreTest.AcceptsArrayWithUnknownSize (0 ms)
[ RUN      ] ElementsAreTest.MakesCopyOfArguments
[       OK ] ElementsAreTest.MakesCopyOfArguments (0 ms)
[----------] 30 tests from ElementsAreTest (1 ms total)

[----------] 9 tests from ElementsAreArrayTest
[ RUN      ] ElementsAreArrayTest.CanBeCreatedWithValueArray
[       OK ] ElementsAreArrayTest.CanBeCreatedWithValueArray (0 ms)
[ RUN      ] ElementsAreArrayTest.CanBeCreatedWithArraySize
[       OK ] ElementsAreArrayTest.CanBeCreatedWithArraySize (0 ms)
[ RUN      ] ElementsAreArrayTest.CanBeCreatedWithoutArraySize
[       OK ] ElementsAreArrayTest.CanBeCreatedWithoutArraySize (0 ms)
[ RUN      ] ElementsAreArrayTest.CanBeCreatedWithMatcherArray
[       OK ] ElementsAreArrayTest.CanBeCreatedWithMatcherArray (1 ms)
[ RUN      ] ElementsAreArrayTest.CanBeCreatedWithVector
[       OK ] ElementsAreArrayTest.CanBeCreatedWithVector (0 ms)
[ RUN      ] ElementsAreArrayTest.CanBeCreatedWithMatcherVector
[       OK ] ElementsAreArrayTest.CanBeCreatedWithMatcherVector (0 ms)
[ RUN      ] ElementsAreArrayTest.CanBeCreatedWithIteratorRange
[       OK ] ElementsAreArrayTest.CanBeCreatedWithIteratorRange (0 ms)
[ RUN      ] ElementsAreArrayTest.WorksWithNativeArray
[       OK ] ElementsAreArrayTest.WorksWithNativeArray (0 ms)
[ RUN      ] ElementsAreArrayTest.SourceLifeSpan
[       OK ] ElementsAreArrayTest.SourceLifeSpan (0 ms)
[----------] 9 tests from ElementsAreArrayTest (1 ms total)

[----------] 6 tests from MatcherMacroTest
[ RUN      ] MatcherMacroTest.Works
[       OK ] MatcherMacroTest.Works (0 ms)
[ RUN      ] MatcherMacroTest.DescriptionCanReferenceNegationAndParameters
[       OK ] MatcherMacroTest.DescriptionCanReferenceNegationAndParameters (0 ms)
[ RUN      ] MatcherMacroTest.CanExplainMatchResult
[       OK ] MatcherMacroTest.CanExplainMatchResult (0 ms)
[ RUN      ] MatcherMacroTest.CanReferenceArgType
[       OK ] MatcherMacroTest.CanReferenceArgType (0 ms)
[ RUN      ] MatcherMacroTest.WorksInNamespace
[       OK ] MatcherMacroTest.WorksInNamespace (0 ms)
[ RUN      ] MatcherMacroTest.CanBeComposedUsingValue
[       OK ] MatcherMacroTest.CanBeComposedUsingValue (0 ms)
[----------] 6 tests from MatcherMacroTest (0 ms total)

[----------] 3 tests from MatcherPMacroTest
[ RUN      ] MatcherPMacroTest.Works
[       OK ] MatcherPMacroTest.Works (0 ms)
[ RUN      ] MatcherPMacroTest.GeneratesCorrectDescription
[       OK ] MatcherPMacroTest.GeneratesCorrectDescription (0 ms)
[ RUN      ] MatcherPMacroTest.WorksWhenExplicitlyInstantiatedWithReference
[       OK ] MatcherPMacroTest.WorksWhenExplicitlyInstantiatedWithReference (0 ms)
[----------] 3 tests from MatcherPMacroTest (0 ms total)

[----------] 9 tests from MatcherPnMacroTest
[ RUN      ] MatcherPnMacroTest.CanReferenceParamTypes
[       OK ] MatcherPnMacroTest.CanReferenceParamTypes (0 ms)
[ RUN      ] MatcherPnMacroTest.WorksWhenExplicitlyInstantiatedWithReferences
[       OK ] MatcherPnMacroTest.WorksWhenExplicitlyInstantiatedWithReferences (0 ms)
[ RUN      ] MatcherPnMacroTest.GeneratesCorretDescriptionWhenExplicitlyInstantiatedWithReferences
[       OK ] MatcherPnMacroTest.GeneratesCorretDescriptionWhenExplicitlyInstantiatedWithReferences (0 ms)
[ RUN      ] MatcherPnMacroTest.Works
[       OK ] MatcherPnMacroTest.Works (0 ms)
[ RUN      ] MatcherPnMacroTest.CanBeOverloadedOnNumberOfParameters
[       OK ] MatcherPnMacroTest.CanBeOverloadedOnNumberOfParameters (0 ms)
[ RUN      ] MatcherPnMacroTest.WorksForDifferentParameterTypes
[       OK ] MatcherPnMacroTest.WorksForDifferentParameterTypes (0 ms)
[ RUN      ] MatcherPnMacroTest.SimpleTypePromotion
[       OK ] MatcherPnMacroTest.SimpleTypePromotion (0 ms)
[ RUN      ] MatcherPnMacroTest.TypesAreCorrect
[       OK ] MatcherPnMacroTest.TypesAreCorrect (0 ms)
[ RUN      ] MatcherPnMacroTest.CanUseMatcherTypedParameterInValue
[       OK ] MatcherPnMacroTest.CanUseMatcherTypedParameterInValue (0 ms)
[----------] 9 tests from MatcherPnMacroTest (0 ms total)

[----------] 13 tests from ContainsTest
[ RUN      ] ContainsTest.ListMatchesWhenElementIsInContainer
[       OK ] ContainsTest.ListMatchesWhenElementIsInContainer (0 ms)
[ RUN      ] ContainsTest.ListDoesNotMatchWhenElementIsNotInContainer
[       OK ] ContainsTest.ListDoesNotMatchWhenElementIsNotInContainer (0 ms)
[ RUN      ] ContainsTest.SetMatchesWhenElementIsInContainer
[       OK ] ContainsTest.SetMatchesWhenElementIsInContainer (0 ms)
[ RUN      ] ContainsTest.SetDoesNotMatchWhenElementIsNotInContainer
[       OK ] ContainsTest.SetDoesNotMatchWhenElementIsNotInContainer (0 ms)
[ RUN      ] ContainsTest.ExplainsMatchResultCorrectly
[       OK ] ContainsTest.ExplainsMatchResultCorrectly (0 ms)
[ RUN      ] ContainsTest.DescribesItselfCorrectly
[       OK ] ContainsTest.DescribesItselfCorrectly (0 ms)
[ RUN      ] ContainsTest.MapMatchesWhenElementIsInContainer
[       OK ] ContainsTest.MapMatchesWhenElementIsInContainer (1 ms)
[ RUN      ] ContainsTest.MapDoesNotMatchWhenElementIsNotInContainer
[       OK ] ContainsTest.MapDoesNotMatchWhenElementIsNotInContainer (0 ms)
[ RUN      ] ContainsTest.ArrayMatchesWhenElementIsInContainer
[       OK ] ContainsTest.ArrayMatchesWhenElementIsInContainer (0 ms)
[ RUN      ] ContainsTest.ArrayDoesNotMatchWhenElementIsNotInContainer
[       OK ] ContainsTest.ArrayDoesNotMatchWhenElementIsNotInContainer (0 ms)
[ RUN      ] ContainsTest.AcceptsMatcher
[       OK ] ContainsTest.AcceptsMatcher (0 ms)
[ RUN      ] ContainsTest.WorksForNativeArrayAsTuple
[       OK ] ContainsTest.WorksForNativeArrayAsTuple (0 ms)
[ RUN      ] ContainsTest.WorksForTwoDimensionalNativeArray
[       OK ] ContainsTest.WorksForTwoDimensionalNativeArray (0 ms)
[----------] 13 tests from ContainsTest (1 ms total)

[----------] 2 tests from AllOfTest
[ RUN      ] AllOfTest.HugeMatcher
[       OK ] AllOfTest.HugeMatcher (0 ms)
[ RUN      ] AllOfTest.DoesNotCallAllOfUnqualified
[       OK ] AllOfTest.DoesNotCallAllOfUnqualified (0 ms)
[----------] 2 tests from AllOfTest (0 ms total)

[----------] 2 tests from AnyOfTest
[ RUN      ] AnyOfTest.HugeMatcher
[       OK ] AnyOfTest.HugeMatcher (0 ms)
[ RUN      ] AnyOfTest.DoesNotCallAnyOfUnqualified
[       OK ] AnyOfTest.DoesNotCallAnyOfUnqualified (0 ms)
[----------] 2 tests from AnyOfTest (0 ms total)

[----------] Global test environment tear-down
[==========] 89 tests from 9 test cases ran. (3 ms total)
[  PASSED  ] 89 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gmock-generated-matchers_test" end time: Feb 23 18:43 PST
"gmock-generated-matchers_test" time elapsed: 00:00:00
----------------------------------------------------------

8/60 Testing: gmock-internal-utils_test
8/60 Test: gmock-internal-utils_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock-internal-utils_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock-internal-utils_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gmock_main.cc
[==========] Running 55 tests from 14 test cases.
[----------] Global test environment set-up.
[----------] 5 tests from ConvertIdentifierNameToWordsTest
[ RUN      ] ConvertIdentifierNameToWordsTest.WorksWhenNameContainsNoWord
[       OK ] ConvertIdentifierNameToWordsTest.WorksWhenNameContainsNoWord (0 ms)
[ RUN      ] ConvertIdentifierNameToWordsTest.WorksWhenNameContainsDigits
[       OK ] ConvertIdentifierNameToWordsTest.WorksWhenNameContainsDigits (0 ms)
[ RUN      ] ConvertIdentifierNameToWordsTest.WorksWhenNameContainsCamelCaseWords
[       OK ] ConvertIdentifierNameToWordsTest.WorksWhenNameContainsCamelCaseWords (0 ms)
[ RUN      ] ConvertIdentifierNameToWordsTest.WorksWhenNameContains_SeparatedWords
[       OK ] ConvertIdentifierNameToWordsTest.WorksWhenNameContains_SeparatedWords (0 ms)
[ RUN      ] ConvertIdentifierNameToWordsTest.WorksWhenNameIsMixture
[       OK ] ConvertIdentifierNameToWordsTest.WorksWhenNameIsMixture (0 ms)
[----------] 5 tests from ConvertIdentifierNameToWordsTest (0 ms total)

[----------] 2 tests from PointeeOfTest
[ RUN      ] PointeeOfTest.WorksForSmartPointers
[       OK ] PointeeOfTest.WorksForSmartPointers (0 ms)
[ RUN      ] PointeeOfTest.WorksForRawPointers
[       OK ] PointeeOfTest.WorksForRawPointers (0 ms)
[----------] 2 tests from PointeeOfTest (0 ms total)

[----------] 2 tests from GetRawPointerTest
[ RUN      ] GetRawPointerTest.WorksForSmartPointers
[       OK ] GetRawPointerTest.WorksForSmartPointers (0 ms)
[ RUN      ] GetRawPointerTest.WorksForRawPointers
[       OK ] GetRawPointerTest.WorksForRawPointers (0 ms)
[----------] 2 tests from GetRawPointerTest (0 ms total)

[----------] 4 tests from KindOfTest
[ RUN      ] KindOfTest.Bool
[       OK ] KindOfTest.Bool (0 ms)
[ RUN      ] KindOfTest.Integer
[       OK ] KindOfTest.Integer (0 ms)
[ RUN      ] KindOfTest.FloatingPoint
[       OK ] KindOfTest.FloatingPoint (0 ms)
[ RUN      ] KindOfTest.Other
[       OK ] KindOfTest.Other (0 ms)
[----------] 4 tests from KindOfTest (0 ms total)

[----------] 9 tests from LosslessArithmeticConvertibleTest
[ RUN      ] LosslessArithmeticConvertibleTest.BoolToBool
[       OK ] LosslessArithmeticConvertibleTest.BoolToBool (0 ms)
[ RUN      ] LosslessArithmeticConvertibleTest.BoolToInteger
[       OK ] LosslessArithmeticConvertibleTest.BoolToInteger (0 ms)
[ RUN      ] LosslessArithmeticConvertibleTest.BoolToFloatingPoint
[       OK ] LosslessArithmeticConvertibleTest.BoolToFloatingPoint (0 ms)
[ RUN      ] LosslessArithmeticConvertibleTest.IntegerToBool
[       OK ] LosslessArithmeticConvertibleTest.IntegerToBool (0 ms)
[ RUN      ] LosslessArithmeticConvertibleTest.IntegerToInteger
[       OK ] LosslessArithmeticConvertibleTest.IntegerToInteger (0 ms)
[ RUN      ] LosslessArithmeticConvertibleTest.IntegerToFloatingPoint
[       OK ] LosslessArithmeticConvertibleTest.IntegerToFloatingPoint (0 ms)
[ RUN      ] LosslessArithmeticConvertibleTest.FloatingPointToBool
[       OK ] LosslessArithmeticConvertibleTest.FloatingPointToBool (0 ms)
[ RUN      ] LosslessArithmeticConvertibleTest.FloatingPointToInteger
[       OK ] LosslessArithmeticConvertibleTest.FloatingPointToInteger (0 ms)
[ RUN      ] LosslessArithmeticConvertibleTest.FloatingPointToFloatingPoint
[       OK ] LosslessArithmeticConvertibleTest.FloatingPointToFloatingPoint (0 ms)
[----------] 9 tests from LosslessArithmeticConvertibleTest (0 ms total)

[----------] 4 tests from TupleMatchesTest
[ RUN      ] TupleMatchesTest.WorksForSize0
[       OK ] TupleMatchesTest.WorksForSize0 (0 ms)
[ RUN      ] TupleMatchesTest.WorksForSize1
[       OK ] TupleMatchesTest.WorksForSize1 (0 ms)
[ RUN      ] TupleMatchesTest.WorksForSize2
[       OK ] TupleMatchesTest.WorksForSize2 (0 ms)
[ RUN      ] TupleMatchesTest.WorksForSize5
[       OK ] TupleMatchesTest.WorksForSize5 (0 ms)
[----------] 4 tests from TupleMatchesTest (0 ms total)

[----------] 2 tests from AssertTest
[ RUN      ] AssertTest.SucceedsOnTrue
[       OK ] AssertTest.SucceedsOnTrue (0 ms)
[ RUN      ] AssertTest.FailsFatallyOnFalse
[       OK ] AssertTest.FailsFatallyOnFalse (211 ms)
[----------] 2 tests from AssertTest (211 ms total)

[----------] 2 tests from ExpectTest
[ RUN      ] ExpectTest.SucceedsOnTrue
[       OK ] ExpectTest.SucceedsOnTrue (0 ms)
[ RUN      ] ExpectTest.FailsNonfatallyOnFalse
[       OK ] ExpectTest.FailsNonfatallyOnFalse (0 ms)
[----------] 2 tests from ExpectTest (0 ms total)

[----------] 3 tests from LogIsVisibleTest
[ RUN      ] LogIsVisibleTest.AlwaysReturnsTrueIfVerbosityIsInfo
[       OK ] LogIsVisibleTest.AlwaysReturnsTrueIfVerbosityIsInfo (0 ms)
[ RUN      ] LogIsVisibleTest.AlwaysReturnsFalseIfVerbosityIsError
[       OK ] LogIsVisibleTest.AlwaysReturnsFalseIfVerbosityIsError (0 ms)
[ RUN      ] LogIsVisibleTest.WorksWhenVerbosityIsWarning
[       OK ] LogIsVisibleTest.WorksWhenVerbosityIsWarning (0 ms)
[----------] 3 tests from LogIsVisibleTest (0 ms total)

[----------] 6 tests from LogTest
[ RUN      ] LogTest.NoStackTraceWhenStackFramesToSkipIsNegative
[       OK ] LogTest.NoStackTraceWhenStackFramesToSkipIsNegative (0 ms)
[ RUN      ] LogTest.NoSkippingStackFrameInOptMode
[       OK ] LogTest.NoSkippingStackFrameInOptMode (0 ms)
[ RUN      ] LogTest.AllLogsArePrintedWhenVerbosityIsInfo
[       OK ] LogTest.AllLogsArePrintedWhenVerbosityIsInfo (1 ms)
[ RUN      ] LogTest.OnlyWarningsArePrintedWhenVerbosityIsWarning
[       OK ] LogTest.OnlyWarningsArePrintedWhenVerbosityIsWarning (0 ms)
[ RUN      ] LogTest.NoLogsArePrintedWhenVerbosityIsError
[       OK ] LogTest.NoLogsArePrintedWhenVerbosityIsError (0 ms)
[ RUN      ] LogTest.OnlyWarningsArePrintedWhenVerbosityIsInvalid
[       OK ] LogTest.OnlyWarningsArePrintedWhenVerbosityIsInvalid (0 ms)
[----------] 6 tests from LogTest (1 ms total)

[----------] 6 tests from TypeTraitsTest
[ RUN      ] TypeTraitsTest.true_type
[       OK ] TypeTraitsTest.true_type (0 ms)
[ RUN      ] TypeTraitsTest.false_type
[       OK ] TypeTraitsTest.false_type (0 ms)
[ RUN      ] TypeTraitsTest.is_reference
[       OK ] TypeTraitsTest.is_reference (0 ms)
[ RUN      ] TypeTraitsTest.is_pointer
[       OK ] TypeTraitsTest.is_pointer (0 ms)
[ RUN      ] TypeTraitsTest.type_equals
[       OK ] TypeTraitsTest.type_equals (0 ms)
[ RUN      ] TypeTraitsTest.remove_reference
[       OK ] TypeTraitsTest.remove_reference (0 ms)
[----------] 6 tests from TypeTraitsTest (0 ms total)

[----------] 3 tests from ExpectCallTest
[ RUN      ] ExpectCallTest.LogsWhenVerbosityIsInfo
[       OK ] ExpectCallTest.LogsWhenVerbosityIsInfo (0 ms)
[ RUN      ] ExpectCallTest.DoesNotLogWhenVerbosityIsWarning
[       OK ] ExpectCallTest.DoesNotLogWhenVerbosityIsWarning (0 ms)
[ RUN      ] ExpectCallTest.DoesNotLogWhenVerbosityIsError
[       OK ] ExpectCallTest.DoesNotLogWhenVerbosityIsError (0 ms)
[----------] 3 tests from ExpectCallTest (0 ms total)

[----------] 4 tests from OnCallTest
[ RUN      ] OnCallTest.LogsWhenVerbosityIsInfo
[       OK ] OnCallTest.LogsWhenVerbosityIsInfo (1 ms)
[ RUN      ] OnCallTest.DoesNotLogWhenVerbosityIsWarning
[       OK ] OnCallTest.DoesNotLogWhenVerbosityIsWarning (0 ms)
[ RUN      ] OnCallTest.DoesNotLogWhenVerbosityIsError
[       OK ] OnCallTest.DoesNotLogWhenVerbosityIsError (0 ms)
[ RUN      ] OnCallTest.LogsAnythingArgument
[       OK ] OnCallTest.LogsAnythingArgument (0 ms)
[----------] 4 tests from OnCallTest (1 ms total)

[----------] 3 tests from StlContainerViewTest
[ RUN      ] StlContainerViewTest.WorksForStlContainer
[       OK ] StlContainerViewTest.WorksForStlContainer (0 ms)
[ RUN      ] StlContainerViewTest.WorksForStaticNativeArray
[       OK ] StlContainerViewTest.WorksForStaticNativeArray (0 ms)
[ RUN      ] StlContainerViewTest.WorksForDynamicNativeArray
[       OK ] StlContainerViewTest.WorksForDynamicNativeArray (0 ms)
[----------] 3 tests from StlContainerViewTest (0 ms total)

[----------] Global test environment tear-down
[==========] 55 tests from 14 test cases ran. (213 ms total)
[  PASSED  ] 55 tests.
<end of output>
Test time =   0.21 sec
----------------------------------------------------------
Test Passed.
"gmock-internal-utils_test" end time: Feb 23 18:43 PST
"gmock-internal-utils_test" time elapsed: 00:00:00
----------------------------------------------------------

9/60 Testing: gmock-matchers_test
9/60 Test: gmock-matchers_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock-matchers_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock-matchers_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gmock_main.cc
[==========] Running 394 tests from 97 test cases.
[----------] Global test environment set-up.
[----------] 1 test from ResultOfDeathTest
[ RUN      ] ResultOfDeathTest.DiesOnNullFunctionPointers
[       OK ] ResultOfDeathTest.DiesOnNullFunctionPointers (109 ms)
[----------] 1 test from ResultOfDeathTest (109 ms total)

[----------] 3 tests from MatchResultListenerTest
[ RUN      ] MatchResultListenerTest.StreamingWorks
[       OK ] MatchResultListenerTest.StreamingWorks (0 ms)
[ RUN      ] MatchResultListenerTest.CanAccessUnderlyingStream
[       OK ] MatchResultListenerTest.CanAccessUnderlyingStream (0 ms)
[ RUN      ] MatchResultListenerTest.IsInterestedWorks
[       OK ] MatchResultListenerTest.IsInterestedWorks (0 ms)
[----------] 3 tests from MatchResultListenerTest (0 ms total)

[----------] 2 tests from MatcherInterfaceTest
[ RUN      ] MatcherInterfaceTest.CanBeImplementedUsingPublishedAPI
[       OK ] MatcherInterfaceTest.CanBeImplementedUsingPublishedAPI (0 ms)
[ RUN      ] MatcherInterfaceTest.CanBeImplementedUsingNewAPI
[       OK ] MatcherInterfaceTest.CanBeImplementedUsingNewAPI (0 ms)
[----------] 2 tests from MatcherInterfaceTest (0 ms total)

[----------] 7 tests from MatcherTest
[ RUN      ] MatcherTest.CanBeDefaultConstructed
[       OK ] MatcherTest.CanBeDefaultConstructed (0 ms)
[ RUN      ] MatcherTest.CanBeConstructedFromMatcherInterface
[       OK ] MatcherTest.CanBeConstructedFromMatcherInterface (0 ms)
[ RUN      ] MatcherTest.CanBeImplicitlyConstructedFromValue
[       OK ] MatcherTest.CanBeImplicitlyConstructedFromValue (0 ms)
[ RUN      ] MatcherTest.CanBeImplicitlyConstructedFromNULL
[       OK ] MatcherTest.CanBeImplicitlyConstructedFromNULL (0 ms)
[ RUN      ] MatcherTest.IsCopyable
[       OK ] MatcherTest.IsCopyable (0 ms)
[ RUN      ] MatcherTest.CanDescribeItself
[       OK ] MatcherTest.CanDescribeItself (0 ms)
[ RUN      ] MatcherTest.MatchAndExplain
[       OK ] MatcherTest.MatchAndExplain (0 ms)
[----------] 7 tests from MatcherTest (0 ms total)

[----------] 2 tests from StringMatcherTest
[ RUN      ] StringMatcherTest.CanBeImplicitlyConstructedFromCStringLiteral
[       OK ] StringMatcherTest.CanBeImplicitlyConstructedFromCStringLiteral (0 ms)
[ RUN      ] StringMatcherTest.CanBeImplicitlyConstructedFromString
[       OK ] StringMatcherTest.CanBeImplicitlyConstructedFromString (0 ms)
[----------] 2 tests from StringMatcherTest (0 ms total)

[----------] 1 test from MakeMatcherTest
[ RUN      ] MakeMatcherTest.ConstructsMatcherFromMatcherInterface
[       OK ] MakeMatcherTest.ConstructsMatcherFromMatcherInterface (0 ms)
[----------] 1 test from MakeMatcherTest (0 ms total)

[----------] 2 tests from MakePolymorphicMatcherTest
[ RUN      ] MakePolymorphicMatcherTest.ConstructsMatcherUsingOldAPI
[       OK ] MakePolymorphicMatcherTest.ConstructsMatcherUsingOldAPI (0 ms)
[ RUN      ] MakePolymorphicMatcherTest.ConstructsMatcherUsingNewAPI
[       OK ] MakePolymorphicMatcherTest.ConstructsMatcherUsingNewAPI (0 ms)
[----------] 2 tests from MakePolymorphicMatcherTest (0 ms total)

[----------] 10 tests from MatcherCastTest
[ RUN      ] MatcherCastTest.FromPolymorphicMatcher
[       OK ] MatcherCastTest.FromPolymorphicMatcher (0 ms)
[ RUN      ] MatcherCastTest.FromCompatibleType
[       OK ] MatcherCastTest.FromCompatibleType (0 ms)
[ RUN      ] MatcherCastTest.FromConstReferenceToNonReference
[       OK ] MatcherCastTest.FromConstReferenceToNonReference (0 ms)
[ RUN      ] MatcherCastTest.FromReferenceToNonReference
[       OK ] MatcherCastTest.FromReferenceToNonReference (0 ms)
[ RUN      ] MatcherCastTest.FromNonReferenceToConstReference
[       OK ] MatcherCastTest.FromNonReferenceToConstReference (0 ms)
[ RUN      ] MatcherCastTest.FromNonReferenceToReference
[       OK ] MatcherCastTest.FromNonReferenceToReference (0 ms)
[ RUN      ] MatcherCastTest.FromSameType
[       OK ] MatcherCastTest.FromSameType (0 ms)
[ RUN      ] MatcherCastTest.ConversionConstructorIsUsed
[       OK ] MatcherCastTest.ConversionConstructorIsUsed (0 ms)
[ RUN      ] MatcherCastTest.FromConvertibleFromAny
[       OK ] MatcherCastTest.FromConvertibleFromAny (0 ms)
[ RUN      ] MatcherCastTest.ValueIsNotCopied
[       OK ] MatcherCastTest.ValueIsNotCopied (0 ms)
[----------] 10 tests from MatcherCastTest (0 ms total)

[----------] 10 tests from SafeMatcherCastTest
[ RUN      ] SafeMatcherCastTest.FromPolymorphicMatcher
[       OK ] SafeMatcherCastTest.FromPolymorphicMatcher (0 ms)
[ RUN      ] SafeMatcherCastTest.FromLosslesslyConvertibleArithmeticType
[       OK ] SafeMatcherCastTest.FromLosslesslyConvertibleArithmeticType (0 ms)
[ RUN      ] SafeMatcherCastTest.FromBaseClass
[       OK ] SafeMatcherCastTest.FromBaseClass (0 ms)
[ RUN      ] SafeMatcherCastTest.FromConstReferenceToReference
[       OK ] SafeMatcherCastTest.FromConstReferenceToReference (0 ms)
[ RUN      ] SafeMatcherCastTest.FromNonReferenceToConstReference
[       OK ] SafeMatcherCastTest.FromNonReferenceToConstReference (0 ms)
[ RUN      ] SafeMatcherCastTest.FromNonReferenceToReference
[       OK ] SafeMatcherCastTest.FromNonReferenceToReference (0 ms)
[ RUN      ] SafeMatcherCastTest.FromSameType
[       OK ] SafeMatcherCastTest.FromSameType (0 ms)
[ RUN      ] SafeMatcherCastTest.ConversionConstructorIsUsed
[       OK ] SafeMatcherCastTest.ConversionConstructorIsUsed (0 ms)
[ RUN      ] SafeMatcherCastTest.FromConvertibleFromAny
[       OK ] SafeMatcherCastTest.FromConvertibleFromAny (0 ms)
[ RUN      ] SafeMatcherCastTest.ValueIsNotCopied
[       OK ] SafeMatcherCastTest.ValueIsNotCopied (0 ms)
[----------] 10 tests from SafeMatcherCastTest (0 ms total)

[----------] 2 tests from ExpectThat
[ RUN      ] ExpectThat.TakesLiterals
[       OK ] ExpectThat.TakesLiterals (0 ms)
[ RUN      ] ExpectThat.TakesFunctions
[       OK ] ExpectThat.TakesFunctions (0 ms)
[----------] 2 tests from ExpectThat (0 ms total)

[----------] 3 tests from ATest
[ RUN      ] ATest.MatchesAnyValue
[       OK ] ATest.MatchesAnyValue (0 ms)
[ RUN      ] ATest.WorksForDerivedClass
[       OK ] ATest.WorksForDerivedClass (0 ms)
[ RUN      ] ATest.CanDescribeSelf
[       OK ] ATest.CanDescribeSelf (0 ms)
[----------] 3 tests from ATest (0 ms total)

[----------] 2 tests from AnTest
[ RUN      ] AnTest.MatchesAnyValue
[       OK ] AnTest.MatchesAnyValue (0 ms)
[ RUN      ] AnTest.CanDescribeSelf
[       OK ] AnTest.CanDescribeSelf (0 ms)
[----------] 2 tests from AnTest (0 ms total)

[----------] 2 tests from UnderscoreTest
[ RUN      ] UnderscoreTest.MatchesAnyValue
[       OK ] UnderscoreTest.MatchesAnyValue (0 ms)
[ RUN      ] UnderscoreTest.CanDescribeSelf
[       OK ] UnderscoreTest.CanDescribeSelf (0 ms)
[----------] 2 tests from UnderscoreTest (0 ms total)

[----------] 3 tests from EqTest
[ RUN      ] EqTest.MatchesEqualValue
[       OK ] EqTest.MatchesEqualValue (0 ms)
[ RUN      ] EqTest.CanDescribeSelf
[       OK ] EqTest.CanDescribeSelf (0 ms)
[ RUN      ] EqTest.IsPolymorphic
[       OK ] EqTest.IsPolymorphic (0 ms)
[----------] 3 tests from EqTest (1 ms total)

[----------] 3 tests from TypedEqTest
[ RUN      ] TypedEqTest.ChecksEqualityForGivenType
[       OK ] TypedEqTest.ChecksEqualityForGivenType (0 ms)
[ RUN      ] TypedEqTest.CanDescribeSelf
[       OK ] TypedEqTest.CanDescribeSelf (0 ms)
[ RUN      ] TypedEqTest.HasSpecifiedType
[       OK ] TypedEqTest.HasSpecifiedType (0 ms)
[----------] 3 tests from TypedEqTest (0 ms total)

[----------] 2 tests from GeTest
[ RUN      ] GeTest.ImplementsGreaterThanOrEqual
[       OK ] GeTest.ImplementsGreaterThanOrEqual (0 ms)
[ RUN      ] GeTest.CanDescribeSelf
[       OK ] GeTest.CanDescribeSelf (0 ms)
[----------] 2 tests from GeTest (0 ms total)

[----------] 2 tests from GtTest
[ RUN      ] GtTest.ImplementsGreaterThan
[       OK ] GtTest.ImplementsGreaterThan (0 ms)
[ RUN      ] GtTest.CanDescribeSelf
[       OK ] GtTest.CanDescribeSelf (0 ms)
[----------] 2 tests from GtTest (0 ms total)

[----------] 2 tests from LeTest
[ RUN      ] LeTest.ImplementsLessThanOrEqual
[       OK ] LeTest.ImplementsLessThanOrEqual (0 ms)
[ RUN      ] LeTest.CanDescribeSelf
[       OK ] LeTest.CanDescribeSelf (0 ms)
[----------] 2 tests from LeTest (0 ms total)

[----------] 2 tests from LtTest
[ RUN      ] LtTest.ImplementsLessThan
[       OK ] LtTest.ImplementsLessThan (0 ms)
[ RUN      ] LtTest.CanDescribeSelf
[       OK ] LtTest.CanDescribeSelf (0 ms)
[----------] 2 tests from LtTest (0 ms total)

[----------] 2 tests from NeTest
[ RUN      ] NeTest.ImplementsNotEqual
[       OK ] NeTest.ImplementsNotEqual (0 ms)
[ RUN      ] NeTest.CanDescribeSelf
[       OK ] NeTest.CanDescribeSelf (0 ms)
[----------] 2 tests from NeTest (0 ms total)

[----------] 4 tests from IsNullTest
[ RUN      ] IsNullTest.MatchesNullPointer
[       OK ] IsNullTest.MatchesNullPointer (0 ms)
[ RUN      ] IsNullTest.LinkedPtr
[       OK ] IsNullTest.LinkedPtr (0 ms)
[ RUN      ] IsNullTest.ReferenceToConstLinkedPtr
[       OK ] IsNullTest.ReferenceToConstLinkedPtr (0 ms)
[ RUN      ] IsNullTest.CanDescribeSelf
[       OK ] IsNullTest.CanDescribeSelf (0 ms)
[----------] 4 tests from IsNullTest (0 ms total)

[----------] 4 tests from NotNullTest
[ RUN      ] NotNullTest.MatchesNonNullPointer
[       OK ] NotNullTest.MatchesNonNullPointer (0 ms)
[ RUN      ] NotNullTest.LinkedPtr
[       OK ] NotNullTest.LinkedPtr (0 ms)
[ RUN      ] NotNullTest.ReferenceToConstLinkedPtr
[       OK ] NotNullTest.ReferenceToConstLinkedPtr (0 ms)
[ RUN      ] NotNullTest.CanDescribeSelf
[       OK ] NotNullTest.CanDescribeSelf (0 ms)
[----------] 4 tests from NotNullTest (0 ms total)

[----------] 5 tests from RefTest
[ RUN      ] RefTest.MatchesSameVariable
[       OK ] RefTest.MatchesSameVariable (0 ms)
[ RUN      ] RefTest.CanDescribeSelf
[       OK ] RefTest.CanDescribeSelf (0 ms)
[ RUN      ] RefTest.CanBeUsedAsMatcherForConstReference
[       OK ] RefTest.CanBeUsedAsMatcherForConstReference (0 ms)
[ RUN      ] RefTest.IsCovariant
[       OK ] RefTest.IsCovariant (0 ms)
[ RUN      ] RefTest.ExplainsResult
[       OK ] RefTest.ExplainsResult (0 ms)
[----------] 5 tests from RefTest (0 ms total)

[----------] 2 tests from StrEqTest
[ RUN      ] StrEqTest.MatchesEqualString
[       OK ] StrEqTest.MatchesEqualString (0 ms)
[ RUN      ] StrEqTest.CanDescribeSelf
[       OK ] StrEqTest.CanDescribeSelf (0 ms)
[----------] 2 tests from StrEqTest (0 ms total)

[----------] 2 tests from StrNeTest
[ RUN      ] StrNeTest.MatchesUnequalString
[       OK ] StrNeTest.MatchesUnequalString (0 ms)
[ RUN      ] StrNeTest.CanDescribeSelf
[       OK ] StrNeTest.CanDescribeSelf (0 ms)
[----------] 2 tests from StrNeTest (0 ms total)

[----------] 3 tests from StrCaseEqTest
[ RUN      ] StrCaseEqTest.MatchesEqualStringIgnoringCase
[       OK ] StrCaseEqTest.MatchesEqualStringIgnoringCase (0 ms)
[ RUN      ] StrCaseEqTest.MatchesEqualStringWith0IgnoringCase
[       OK ] StrCaseEqTest.MatchesEqualStringWith0IgnoringCase (0 ms)
[ RUN      ] StrCaseEqTest.CanDescribeSelf
[       OK ] StrCaseEqTest.CanDescribeSelf (0 ms)
[----------] 3 tests from StrCaseEqTest (0 ms total)

[----------] 2 tests from StrCaseNeTest
[ RUN      ] StrCaseNeTest.MatchesUnequalStringIgnoringCase
[       OK ] StrCaseNeTest.MatchesUnequalStringIgnoringCase (0 ms)
[ RUN      ] StrCaseNeTest.CanDescribeSelf
[       OK ] StrCaseNeTest.CanDescribeSelf (0 ms)
[----------] 2 tests from StrCaseNeTest (0 ms total)

[----------] 3 tests from HasSubstrTest
[ RUN      ] HasSubstrTest.WorksForStringClasses
[       OK ] HasSubstrTest.WorksForStringClasses (0 ms)
[ RUN      ] HasSubstrTest.WorksForCStrings
[       OK ] HasSubstrTest.WorksForCStrings (0 ms)
[ RUN      ] HasSubstrTest.CanDescribeSelf
[       OK ] HasSubstrTest.CanDescribeSelf (0 ms)
[----------] 3 tests from HasSubstrTest (0 ms total)

[----------] 6 tests from KeyTest
[ RUN      ] KeyTest.CanDescribeSelf
[       OK ] KeyTest.CanDescribeSelf (0 ms)
[ RUN      ] KeyTest.ExplainsResult
[       OK ] KeyTest.ExplainsResult (0 ms)
[ RUN      ] KeyTest.MatchesCorrectly
[       OK ] KeyTest.MatchesCorrectly (0 ms)
[ RUN      ] KeyTest.SafelyCastsInnerMatcher
[       OK ] KeyTest.SafelyCastsInnerMatcher (0 ms)
[ RUN      ] KeyTest.InsideContainsUsingMap
[       OK ] KeyTest.InsideContainsUsingMap (0 ms)
[ RUN      ] KeyTest.InsideContainsUsingMultimap
[       OK ] KeyTest.InsideContainsUsingMultimap (0 ms)
[----------] 6 tests from KeyTest (0 ms total)

[----------] 6 tests from PairTest
[ RUN      ] PairTest.Typing
[       OK ] PairTest.Typing (0 ms)
[ RUN      ] PairTest.CanDescribeSelf
[       OK ] PairTest.CanDescribeSelf (0 ms)
[ RUN      ] PairTest.CanExplainMatchResultTo
[       OK ] PairTest.CanExplainMatchResultTo (1 ms)
[ RUN      ] PairTest.MatchesCorrectly
[       OK ] PairTest.MatchesCorrectly (0 ms)
[ RUN      ] PairTest.SafelyCastsInnerMatchers
[       OK ] PairTest.SafelyCastsInnerMatchers (0 ms)
[ RUN      ] PairTest.InsideContainsUsingMap
[       OK ] PairTest.InsideContainsUsingMap (0 ms)
[----------] 6 tests from PairTest (1 ms total)

[----------] 2 tests from StartsWithTest
[ RUN      ] StartsWithTest.MatchesStringWithGivenPrefix
[       OK ] StartsWithTest.MatchesStringWithGivenPrefix (0 ms)
[ RUN      ] StartsWithTest.CanDescribeSelf
[       OK ] StartsWithTest.CanDescribeSelf (0 ms)
[----------] 2 tests from StartsWithTest (0 ms total)

[----------] 2 tests from EndsWithTest
[ RUN      ] EndsWithTest.MatchesStringWithGivenSuffix
[       OK ] EndsWithTest.MatchesStringWithGivenSuffix (0 ms)
[ RUN      ] EndsWithTest.CanDescribeSelf
[       OK ] EndsWithTest.CanDescribeSelf (0 ms)
[----------] 2 tests from EndsWithTest (0 ms total)

[----------] 2 tests from MatchesRegexTest
[ RUN      ] MatchesRegexTest.MatchesStringMatchingGivenRegex
[       OK ] MatchesRegexTest.MatchesStringMatchingGivenRegex (0 ms)
[ RUN      ] MatchesRegexTest.CanDescribeSelf
[       OK ] MatchesRegexTest.CanDescribeSelf (0 ms)
[----------] 2 tests from MatchesRegexTest (0 ms total)

[----------] 2 tests from ContainsRegexTest
[ RUN      ] ContainsRegexTest.MatchesStringContainingGivenRegex
[       OK ] ContainsRegexTest.MatchesStringContainingGivenRegex (0 ms)
[ RUN      ] ContainsRegexTest.CanDescribeSelf
[       OK ] ContainsRegexTest.CanDescribeSelf (0 ms)
[----------] 2 tests from ContainsRegexTest (0 ms total)

[----------] 2 tests from StdWideStrEqTest
[ RUN      ] StdWideStrEqTest.MatchesEqual
[       OK ] StdWideStrEqTest.MatchesEqual (0 ms)
[ RUN      ] StdWideStrEqTest.CanDescribeSelf
[       OK ] StdWideStrEqTest.CanDescribeSelf (0 ms)
[----------] 2 tests from StdWideStrEqTest (0 ms total)

[----------] 2 tests from StdWideStrNeTest
[ RUN      ] StdWideStrNeTest.MatchesUnequalString
[       OK ] StdWideStrNeTest.MatchesUnequalString (0 ms)
[ RUN      ] StdWideStrNeTest.CanDescribeSelf
[       OK ] StdWideStrNeTest.CanDescribeSelf (0 ms)
[----------] 2 tests from StdWideStrNeTest (0 ms total)

[----------] 3 tests from StdWideStrCaseEqTest
[ RUN      ] StdWideStrCaseEqTest.MatchesEqualStringIgnoringCase
[       OK ] StdWideStrCaseEqTest.MatchesEqualStringIgnoringCase (0 ms)
[ RUN      ] StdWideStrCaseEqTest.MatchesEqualStringWith0IgnoringCase
[       OK ] StdWideStrCaseEqTest.MatchesEqualStringWith0IgnoringCase (0 ms)
[ RUN      ] StdWideStrCaseEqTest.CanDescribeSelf
[       OK ] StdWideStrCaseEqTest.CanDescribeSelf (0 ms)
[----------] 3 tests from StdWideStrCaseEqTest (0 ms total)

[----------] 2 tests from StdWideStrCaseNeTest
[ RUN      ] StdWideStrCaseNeTest.MatchesUnequalStringIgnoringCase
[       OK ] StdWideStrCaseNeTest.MatchesUnequalStringIgnoringCase (0 ms)
[ RUN      ] StdWideStrCaseNeTest.CanDescribeSelf
[       OK ] StdWideStrCaseNeTest.CanDescribeSelf (0 ms)
[----------] 2 tests from StdWideStrCaseNeTest (0 ms total)

[----------] 3 tests from StdWideHasSubstrTest
[ RUN      ] StdWideHasSubstrTest.WorksForStringClasses
[       OK ] StdWideHasSubstrTest.WorksForStringClasses (0 ms)
[ RUN      ] StdWideHasSubstrTest.WorksForCStrings
[       OK ] StdWideHasSubstrTest.WorksForCStrings (0 ms)
[ RUN      ] StdWideHasSubstrTest.CanDescribeSelf
[       OK ] StdWideHasSubstrTest.CanDescribeSelf (0 ms)
[----------] 3 tests from StdWideHasSubstrTest (0 ms total)

[----------] 2 tests from StdWideStartsWithTest
[ RUN      ] StdWideStartsWithTest.MatchesStringWithGivenPrefix
[       OK ] StdWideStartsWithTest.MatchesStringWithGivenPrefix (0 ms)
[ RUN      ] StdWideStartsWithTest.CanDescribeSelf
[       OK ] StdWideStartsWithTest.CanDescribeSelf (0 ms)
[----------] 2 tests from StdWideStartsWithTest (0 ms total)

[----------] 2 tests from StdWideEndsWithTest
[ RUN      ] StdWideEndsWithTest.MatchesStringWithGivenSuffix
[       OK ] StdWideEndsWithTest.MatchesStringWithGivenSuffix (0 ms)
[ RUN      ] StdWideEndsWithTest.CanDescribeSelf
[       OK ] StdWideEndsWithTest.CanDescribeSelf (0 ms)
[----------] 2 tests from StdWideEndsWithTest (0 ms total)

[----------] 2 tests from Eq2Test
[ RUN      ] Eq2Test.MatchesEqualArguments
[       OK ] Eq2Test.MatchesEqualArguments (0 ms)
[ RUN      ] Eq2Test.CanDescribeSelf
[       OK ] Eq2Test.CanDescribeSelf (0 ms)
[----------] 2 tests from Eq2Test (0 ms total)

[----------] 2 tests from Ge2Test
[ RUN      ] Ge2Test.MatchesGreaterThanOrEqualArguments
[       OK ] Ge2Test.MatchesGreaterThanOrEqualArguments (0 ms)
[ RUN      ] Ge2Test.CanDescribeSelf
[       OK ] Ge2Test.CanDescribeSelf (0 ms)
[----------] 2 tests from Ge2Test (0 ms total)

[----------] 2 tests from Gt2Test
[ RUN      ] Gt2Test.MatchesGreaterThanArguments
[       OK ] Gt2Test.MatchesGreaterThanArguments (0 ms)
[ RUN      ] Gt2Test.CanDescribeSelf
[       OK ] Gt2Test.CanDescribeSelf (0 ms)
[----------] 2 tests from Gt2Test (0 ms total)

[----------] 2 tests from Le2Test
[ RUN      ] Le2Test.MatchesLessThanOrEqualArguments
[       OK ] Le2Test.MatchesLessThanOrEqualArguments (0 ms)
[ RUN      ] Le2Test.CanDescribeSelf
[       OK ] Le2Test.CanDescribeSelf (1 ms)
[----------] 2 tests from Le2Test (1 ms total)

[----------] 2 tests from Lt2Test
[ RUN      ] Lt2Test.MatchesLessThanArguments
[       OK ] Lt2Test.MatchesLessThanArguments (0 ms)
[ RUN      ] Lt2Test.CanDescribeSelf
[       OK ] Lt2Test.CanDescribeSelf (0 ms)
[----------] 2 tests from Lt2Test (0 ms total)

[----------] 2 tests from Ne2Test
[ RUN      ] Ne2Test.MatchesUnequalArguments
[       OK ] Ne2Test.MatchesUnequalArguments (0 ms)
[ RUN      ] Ne2Test.CanDescribeSelf
[       OK ] Ne2Test.CanDescribeSelf (0 ms)
[----------] 2 tests from Ne2Test (0 ms total)

[----------] 3 tests from NotTest
[ RUN      ] NotTest.NegatesMatcher
[       OK ] NotTest.NegatesMatcher (0 ms)
[ RUN      ] NotTest.CanDescribeSelf
[       OK ] NotTest.CanDescribeSelf (0 ms)
[ RUN      ] NotTest.NotMatcherSafelyCastsMonomorphicMatchers
[       OK ] NotTest.NotMatcherSafelyCastsMonomorphicMatchers (0 ms)
[----------] 3 tests from NotTest (0 ms total)

[----------] 5 tests from AllOfTest
[ RUN      ] AllOfTest.MatchesWhenAllMatch
[       OK ] AllOfTest.MatchesWhenAllMatch (0 ms)
[ RUN      ] AllOfTest.CanDescribeSelf
[       OK ] AllOfTest.CanDescribeSelf (0 ms)
[ RUN      ] AllOfTest.CanDescribeNegation
[       OK ] AllOfTest.CanDescribeNegation (0 ms)
[ RUN      ] AllOfTest.AllOfMatcherSafelyCastsMonomorphicMatchers
[       OK ] AllOfTest.AllOfMatcherSafelyCastsMonomorphicMatchers (0 ms)
[ RUN      ] AllOfTest.ExplainsResult
[       OK ] AllOfTest.ExplainsResult (0 ms)
[----------] 5 tests from AllOfTest (0 ms total)

[----------] 5 tests from AnyOfTest
[ RUN      ] AnyOfTest.MatchesWhenAnyMatches
[       OK ] AnyOfTest.MatchesWhenAnyMatches (1 ms)
[ RUN      ] AnyOfTest.CanDescribeSelf
[       OK ] AnyOfTest.CanDescribeSelf (0 ms)
[ RUN      ] AnyOfTest.CanDescribeNegation
[       OK ] AnyOfTest.CanDescribeNegation (0 ms)
[ RUN      ] AnyOfTest.AnyOfMatcherSafelyCastsMonomorphicMatchers
[       OK ] AnyOfTest.AnyOfMatcherSafelyCastsMonomorphicMatchers (0 ms)
[ RUN      ] AnyOfTest.ExplainsResult
[       OK ] AnyOfTest.ExplainsResult (0 ms)
[----------] 5 tests from AnyOfTest (1 ms total)

[----------] 5 tests from TrulyTest
[ RUN      ] TrulyTest.MatchesWhatSatisfiesThePredicate
[       OK ] TrulyTest.MatchesWhatSatisfiesThePredicate (0 ms)
[ RUN      ] TrulyTest.CanBeUsedWithFunctor
[       OK ] TrulyTest.CanBeUsedWithFunctor (0 ms)
[ RUN      ] TrulyTest.PredicateCanReturnAClassConvertibleToBool
[       OK ] TrulyTest.PredicateCanReturnAClassConvertibleToBool (0 ms)
[ RUN      ] TrulyTest.CanDescribeSelf
[       OK ] TrulyTest.CanDescribeSelf (0 ms)
[ RUN      ] TrulyTest.WorksForByRefArguments
[       OK ] TrulyTest.WorksForByRefArguments (0 ms)
[----------] 5 tests from TrulyTest (0 ms total)

[----------] 3 tests from MatchesTest
[ RUN      ] MatchesTest.IsSatisfiedByWhatMatchesTheMatcher
[       OK ] MatchesTest.IsSatisfiedByWhatMatchesTheMatcher (0 ms)
[ RUN      ] MatchesTest.WorksOnByRefArguments
[       OK ] MatchesTest.WorksOnByRefArguments (0 ms)
[ RUN      ] MatchesTest.WorksWithMatcherOnNonRefType
[       OK ] MatchesTest.WorksWithMatcherOnNonRefType (0 ms)
[----------] 3 tests from MatchesTest (0 ms total)

[----------] 2 tests from ValueTest
[ RUN      ] ValueTest.WorksWithPolymorphicMatcher
[       OK ] ValueTest.WorksWithPolymorphicMatcher (0 ms)
[ RUN      ] ValueTest.WorksWithMonomorphicMatcher
[       OK ] ValueTest.WorksWithMonomorphicMatcher (0 ms)
[----------] 2 tests from ValueTest (0 ms total)

[----------] 8 tests from ExplainMatchResultTest
[ RUN      ] ExplainMatchResultTest.WorksWithPolymorphicMatcher
[       OK ] ExplainMatchResultTest.WorksWithPolymorphicMatcher (0 ms)
[ RUN      ] ExplainMatchResultTest.WorksWithMonomorphicMatcher
[       OK ] ExplainMatchResultTest.WorksWithMonomorphicMatcher (0 ms)
[ RUN      ] ExplainMatchResultTest.WorksInsideMATCHER
[       OK ] ExplainMatchResultTest.WorksInsideMATCHER (0 ms)
[ RUN      ] ExplainMatchResultTest.AllOf_False_False
[       OK ] ExplainMatchResultTest.AllOf_False_False (0 ms)
[ RUN      ] ExplainMatchResultTest.AllOf_False_True
[       OK ] ExplainMatchResultTest.AllOf_False_True (0 ms)
[ RUN      ] ExplainMatchResultTest.AllOf_True_False
[       OK ] ExplainMatchResultTest.AllOf_True_False (0 ms)
[ RUN      ] ExplainMatchResultTest.AllOf_True_True
[       OK ] ExplainMatchResultTest.AllOf_True_True (0 ms)
[ RUN      ] ExplainMatchResultTest.AllOf_True_True_2
[       OK ] ExplainMatchResultTest.AllOf_True_True_2 (0 ms)
[----------] 8 tests from ExplainMatchResultTest (0 ms total)

[----------] 3 tests from AllArgsTest
[ RUN      ] AllArgsTest.WorksForTuple
[       OK ] AllArgsTest.WorksForTuple (0 ms)
[ RUN      ] AllArgsTest.WorksForNonTuple
[       OK ] AllArgsTest.WorksForNonTuple (0 ms)
[ RUN      ] AllArgsTest.WorksInWithClause
[       OK ] AllArgsTest.WorksInWithClause (0 ms)
[----------] 3 tests from AllArgsTest (0 ms total)

[----------] 4 tests from MatcherAssertionTest
[ RUN      ] MatcherAssertionTest.WorksWhenMatcherIsSatisfied
[       OK ] MatcherAssertionTest.WorksWhenMatcherIsSatisfied (0 ms)
[ RUN      ] MatcherAssertionTest.WorksWhenMatcherIsNotSatisfied
[       OK ] MatcherAssertionTest.WorksWhenMatcherIsNotSatisfied (0 ms)
[ RUN      ] MatcherAssertionTest.WorksForByRefArguments
[       OK ] MatcherAssertionTest.WorksForByRefArguments (0 ms)
[ RUN      ] MatcherAssertionTest.WorksForMonomorphicMatcher
[       OK ] MatcherAssertionTest.WorksForMonomorphicMatcher (1 ms)
[----------] 4 tests from MatcherAssertionTest (1 ms total)

[----------] 6 tests from FloatTest
[ RUN      ] FloatTest.FloatEqApproximatelyMatchesFloats
[       OK ] FloatTest.FloatEqApproximatelyMatchesFloats (0 ms)
[ RUN      ] FloatTest.NanSensitiveFloatEqApproximatelyMatchesFloats
[       OK ] FloatTest.NanSensitiveFloatEqApproximatelyMatchesFloats (0 ms)
[ RUN      ] FloatTest.FloatEqCannotMatchNaN
[       OK ] FloatTest.FloatEqCannotMatchNaN (0 ms)
[ RUN      ] FloatTest.NanSensitiveFloatEqCanMatchNaN
[       OK ] FloatTest.NanSensitiveFloatEqCanMatchNaN (0 ms)
[ RUN      ] FloatTest.FloatEqCanDescribeSelf
[       OK ] FloatTest.FloatEqCanDescribeSelf (0 ms)
[ RUN      ] FloatTest.NanSensitiveFloatEqCanDescribeSelf
[       OK ] FloatTest.NanSensitiveFloatEqCanDescribeSelf (0 ms)
[----------] 6 tests from FloatTest (0 ms total)

[----------] 6 tests from FloatNearTest
[ RUN      ] FloatNearTest.FloatNearMatches
[       OK ] FloatNearTest.FloatNearMatches (0 ms)
[ RUN      ] FloatNearTest.NanSensitiveFloatNearApproximatelyMatchesFloats
[       OK ] FloatNearTest.NanSensitiveFloatNearApproximatelyMatchesFloats (0 ms)
[ RUN      ] FloatNearTest.FloatNearCanDescribeSelf
[       OK ] FloatNearTest.FloatNearCanDescribeSelf (0 ms)
[ RUN      ] FloatNearTest.NanSensitiveFloatNearCanDescribeSelf
[       OK ] FloatNearTest.NanSensitiveFloatNearCanDescribeSelf (0 ms)
[ RUN      ] FloatNearTest.FloatNearCannotMatchNaN
[       OK ] FloatNearTest.FloatNearCannotMatchNaN (0 ms)
[ RUN      ] FloatNearTest.NanSensitiveFloatNearCanMatchNaN
[       OK ] FloatNearTest.NanSensitiveFloatNearCanMatchNaN (0 ms)
[----------] 6 tests from FloatNearTest (0 ms total)

[----------] 6 tests from DoubleTest
[ RUN      ] DoubleTest.DoubleEqApproximatelyMatchesDoubles
[       OK ] DoubleTest.DoubleEqApproximatelyMatchesDoubles (0 ms)
[ RUN      ] DoubleTest.NanSensitiveDoubleEqApproximatelyMatchesDoubles
[       OK ] DoubleTest.NanSensitiveDoubleEqApproximatelyMatchesDoubles (0 ms)
[ RUN      ] DoubleTest.DoubleEqCannotMatchNaN
[       OK ] DoubleTest.DoubleEqCannotMatchNaN (0 ms)
[ RUN      ] DoubleTest.NanSensitiveDoubleEqCanMatchNaN
[       OK ] DoubleTest.NanSensitiveDoubleEqCanMatchNaN (0 ms)
[ RUN      ] DoubleTest.DoubleEqCanDescribeSelf
[       OK ] DoubleTest.DoubleEqCanDescribeSelf (0 ms)
[ RUN      ] DoubleTest.NanSensitiveDoubleEqCanDescribeSelf
[       OK ] DoubleTest.NanSensitiveDoubleEqCanDescribeSelf (0 ms)
[----------] 6 tests from DoubleTest (0 ms total)

[----------] 7 tests from DoubleNearTest
[ RUN      ] DoubleNearTest.DoubleNearMatches
[       OK ] DoubleNearTest.DoubleNearMatches (0 ms)
[ RUN      ] DoubleNearTest.NanSensitiveDoubleNearApproximatelyMatchesDoubles
[       OK ] DoubleNearTest.NanSensitiveDoubleNearApproximatelyMatchesDoubles (0 ms)
[ RUN      ] DoubleNearTest.DoubleNearCanDescribeSelf
[       OK ] DoubleNearTest.DoubleNearCanDescribeSelf (0 ms)
[ RUN      ] DoubleNearTest.ExplainsResultWhenMatchFails
[       OK ] DoubleNearTest.ExplainsResultWhenMatchFails (0 ms)
[ RUN      ] DoubleNearTest.NanSensitiveDoubleNearCanDescribeSelf
[       OK ] DoubleNearTest.NanSensitiveDoubleNearCanDescribeSelf (0 ms)
[ RUN      ] DoubleNearTest.DoubleNearCannotMatchNaN
[       OK ] DoubleNearTest.DoubleNearCannotMatchNaN (0 ms)
[ RUN      ] DoubleNearTest.NanSensitiveDoubleNearCanMatchNaN
[       OK ] DoubleNearTest.NanSensitiveDoubleNearCanMatchNaN (0 ms)
[----------] 7 tests from DoubleNearTest (0 ms total)

[----------] 10 tests from PointeeTest
[ RUN      ] PointeeTest.RawPointer
[       OK ] PointeeTest.RawPointer (0 ms)
[ RUN      ] PointeeTest.RawPointerToConst
[       OK ] PointeeTest.RawPointerToConst (0 ms)
[ RUN      ] PointeeTest.ReferenceToConstRawPointer
[       OK ] PointeeTest.ReferenceToConstRawPointer (0 ms)
[ RUN      ] PointeeTest.ReferenceToNonConstRawPointer
[       OK ] PointeeTest.ReferenceToNonConstRawPointer (0 ms)
[ RUN      ] PointeeTest.WorksWithConstPropagatingPointers
[       OK ] PointeeTest.WorksWithConstPropagatingPointers (0 ms)
[ RUN      ] PointeeTest.NeverMatchesNull
[       OK ] PointeeTest.NeverMatchesNull (0 ms)
[ RUN      ] PointeeTest.MatchesAgainstAValue
[       OK ] PointeeTest.MatchesAgainstAValue (0 ms)
[ RUN      ] PointeeTest.CanDescribeSelf
[       OK ] PointeeTest.CanDescribeSelf (0 ms)
[ RUN      ] PointeeTest.CanExplainMatchResult
[       OK ] PointeeTest.CanExplainMatchResult (0 ms)
[ RUN      ] PointeeTest.AlwaysExplainsPointee
[       OK ] PointeeTest.AlwaysExplainsPointee (0 ms)
[----------] 10 tests from PointeeTest (0 ms total)

[----------] 8 tests from WhenDynamicCastToTest
[ RUN      ] WhenDynamicCastToTest.SameType
[       OK ] WhenDynamicCastToTest.SameType (0 ms)
[ RUN      ] WhenDynamicCastToTest.WrongTypes
[       OK ] WhenDynamicCastToTest.WrongTypes (0 ms)
[ RUN      ] WhenDynamicCastToTest.AlreadyNull
[       OK ] WhenDynamicCastToTest.AlreadyNull (0 ms)
[ RUN      ] WhenDynamicCastToTest.AmbiguousCast
[       OK ] WhenDynamicCastToTest.AmbiguousCast (0 ms)
[ RUN      ] WhenDynamicCastToTest.Describe
[       OK ] WhenDynamicCastToTest.Describe (0 ms)
[ RUN      ] WhenDynamicCastToTest.Explain
[       OK ] WhenDynamicCastToTest.Explain (0 ms)
[ RUN      ] WhenDynamicCastToTest.GoodReference
[       OK ] WhenDynamicCastToTest.GoodReference (0 ms)
[ RUN      ] WhenDynamicCastToTest.BadReference
[       OK ] WhenDynamicCastToTest.BadReference (0 ms)
[----------] 8 tests from WhenDynamicCastToTest (0 ms total)

[----------] 9 tests from FieldTest
[ RUN      ] FieldTest.WorksForNonConstField
[       OK ] FieldTest.WorksForNonConstField (0 ms)
[ RUN      ] FieldTest.WorksForConstField
[       OK ] FieldTest.WorksForConstField (0 ms)
[ RUN      ] FieldTest.WorksForUncopyableField
[       OK ] FieldTest.WorksForUncopyableField (1 ms)
[ RUN      ] FieldTest.WorksForPointerField
[       OK ] FieldTest.WorksForPointerField (0 ms)
[ RUN      ] FieldTest.WorksForByRefArgument
[       OK ] FieldTest.WorksForByRefArgument (0 ms)
[ RUN      ] FieldTest.WorksForArgumentOfSubType
[       OK ] FieldTest.WorksForArgumentOfSubType (0 ms)
[ RUN      ] FieldTest.WorksForCompatibleMatcherType
[       OK ] FieldTest.WorksForCompatibleMatcherType (0 ms)
[ RUN      ] FieldTest.CanDescribeSelf
[       OK ] FieldTest.CanDescribeSelf (0 ms)
[ RUN      ] FieldTest.CanExplainMatchResult
[       OK ] FieldTest.CanExplainMatchResult (0 ms)
[----------] 9 tests from FieldTest (1 ms total)

[----------] 7 tests from FieldForPointerTest
[ RUN      ] FieldForPointerTest.WorksForPointerToConst
[       OK ] FieldForPointerTest.WorksForPointerToConst (0 ms)
[ RUN      ] FieldForPointerTest.WorksForPointerToNonConst
[       OK ] FieldForPointerTest.WorksForPointerToNonConst (0 ms)
[ RUN      ] FieldForPointerTest.WorksForReferenceToConstPointer
[       OK ] FieldForPointerTest.WorksForReferenceToConstPointer (0 ms)
[ RUN      ] FieldForPointerTest.DoesNotMatchNull
[       OK ] FieldForPointerTest.DoesNotMatchNull (0 ms)
[ RUN      ] FieldForPointerTest.WorksForArgumentOfSubType
[       OK ] FieldForPointerTest.WorksForArgumentOfSubType (0 ms)
[ RUN      ] FieldForPointerTest.CanDescribeSelf
[       OK ] FieldForPointerTest.CanDescribeSelf (0 ms)
[ RUN      ] FieldForPointerTest.CanExplainMatchResult
[       OK ] FieldForPointerTest.CanExplainMatchResult (0 ms)
[----------] 7 tests from FieldForPointerTest (0 ms total)

[----------] 8 tests from PropertyTest
[ RUN      ] PropertyTest.WorksForNonReferenceProperty
[       OK ] PropertyTest.WorksForNonReferenceProperty (0 ms)
[ RUN      ] PropertyTest.WorksForReferenceToConstProperty
[       OK ] PropertyTest.WorksForReferenceToConstProperty (0 ms)
[ RUN      ] PropertyTest.WorksForReferenceToNonConstProperty
[       OK ] PropertyTest.WorksForReferenceToNonConstProperty (0 ms)
[ RUN      ] PropertyTest.WorksForByValueArgument
[       OK ] PropertyTest.WorksForByValueArgument (0 ms)
[ RUN      ] PropertyTest.WorksForArgumentOfSubType
[       OK ] PropertyTest.WorksForArgumentOfSubType (0 ms)
[ RUN      ] PropertyTest.WorksForCompatibleMatcherType
[       OK ] PropertyTest.WorksForCompatibleMatcherType (0 ms)
[ RUN      ] PropertyTest.CanDescribeSelf
[       OK ] PropertyTest.CanDescribeSelf (0 ms)
[ RUN      ] PropertyTest.CanExplainMatchResult
[       OK ] PropertyTest.CanExplainMatchResult (0 ms)
[----------] 8 tests from PropertyTest (0 ms total)

[----------] 7 tests from PropertyForPointerTest
[ RUN      ] PropertyForPointerTest.WorksForPointerToConst
[       OK ] PropertyForPointerTest.WorksForPointerToConst (0 ms)
[ RUN      ] PropertyForPointerTest.WorksForPointerToNonConst
[       OK ] PropertyForPointerTest.WorksForPointerToNonConst (0 ms)
[ RUN      ] PropertyForPointerTest.WorksForReferenceToConstPointer
[       OK ] PropertyForPointerTest.WorksForReferenceToConstPointer (0 ms)
[ RUN      ] PropertyForPointerTest.WorksForReferenceToNonConstProperty
[       OK ] PropertyForPointerTest.WorksForReferenceToNonConstProperty (0 ms)
[ RUN      ] PropertyForPointerTest.WorksForArgumentOfSubType
[       OK ] PropertyForPointerTest.WorksForArgumentOfSubType (0 ms)
[ RUN      ] PropertyForPointerTest.CanDescribeSelf
[       OK ] PropertyForPointerTest.CanDescribeSelf (0 ms)
[ RUN      ] PropertyForPointerTest.CanExplainMatchResult
[       OK ] PropertyForPointerTest.CanExplainMatchResult (0 ms)
[----------] 7 tests from PropertyForPointerTest (0 ms total)

[----------] 11 tests from ResultOfTest
[ RUN      ] ResultOfTest.WorksForFunctionPointers
[       OK ] ResultOfTest.WorksForFunctionPointers (0 ms)
[ RUN      ] ResultOfTest.CanDescribeItself
[       OK ] ResultOfTest.CanDescribeItself (0 ms)
[ RUN      ] ResultOfTest.CanExplainMatchResult
[       OK ] ResultOfTest.CanExplainMatchResult (0 ms)
[ RUN      ] ResultOfTest.WorksForNonReferenceResults
[       OK ] ResultOfTest.WorksForNonReferenceResults (0 ms)
[ RUN      ] ResultOfTest.WorksForReferenceToNonConstResults
[       OK ] ResultOfTest.WorksForReferenceToNonConstResults (0 ms)
[ RUN      ] ResultOfTest.WorksForReferenceToConstResults
[       OK ] ResultOfTest.WorksForReferenceToConstResults (0 ms)
[ RUN      ] ResultOfTest.WorksForCompatibleMatcherTypes
[       OK ] ResultOfTest.WorksForCompatibleMatcherTypes (0 ms)
[ RUN      ] ResultOfTest.WorksForFunctionReferences
[       OK ] ResultOfTest.WorksForFunctionReferences (0 ms)
[ RUN      ] ResultOfTest.WorksForFunctors
[       OK ] ResultOfTest.WorksForFunctors (0 ms)
[ RUN      ] ResultOfTest.WorksForPolymorphicFunctors
[       OK ] ResultOfTest.WorksForPolymorphicFunctors (0 ms)
[ RUN      ] ResultOfTest.WorksForReferencingCallables
[       OK ] ResultOfTest.WorksForReferencingCallables (0 ms)
[----------] 11 tests from ResultOfTest (0 ms total)

[----------] 1 test from ExplainmatcherResultTest
[ RUN      ] ExplainmatcherResultTest.MonomorphicMatcher
[       OK ] ExplainmatcherResultTest.MonomorphicMatcher (0 ms)
[----------] 1 test from ExplainmatcherResultTest (0 ms total)

[----------] 2 tests from ByRefTest
[ RUN      ] ByRefTest.AllowsNotCopyableConstValueInMatchers
[       OK ] ByRefTest.AllowsNotCopyableConstValueInMatchers (0 ms)
[ RUN      ] ByRefTest.AllowsNotCopyableValueInMatchers
[       OK ] ByRefTest.AllowsNotCopyableValueInMatchers (0 ms)
[----------] 2 tests from ByRefTest (0 ms total)

[----------] 4 tests from IsEmptyTest
[ RUN      ] IsEmptyTest.ImplementsIsEmpty
[       OK ] IsEmptyTest.ImplementsIsEmpty (0 ms)
[ RUN      ] IsEmptyTest.WorksWithString
[       OK ] IsEmptyTest.WorksWithString (0 ms)
[ RUN      ] IsEmptyTest.CanDescribeSelf
[       OK ] IsEmptyTest.CanDescribeSelf (0 ms)
[ RUN      ] IsEmptyTest.ExplainsResult
[       OK ] IsEmptyTest.ExplainsResult (0 ms)
[----------] 4 tests from IsEmptyTest (0 ms total)

[----------] 5 tests from SizeIsTest
[ RUN      ] SizeIsTest.ImplementsSizeIs
[       OK ] SizeIsTest.ImplementsSizeIs (0 ms)
[ RUN      ] SizeIsTest.WorksWithMap
[       OK ] SizeIsTest.WorksWithMap (0 ms)
[ RUN      ] SizeIsTest.WorksWithReferences
[       OK ] SizeIsTest.WorksWithReferences (0 ms)
[ RUN      ] SizeIsTest.CanDescribeSelf
[       OK ] SizeIsTest.CanDescribeSelf (0 ms)
[ RUN      ] SizeIsTest.ExplainsResult
[       OK ] SizeIsTest.ExplainsResult (0 ms)
[----------] 5 tests from SizeIsTest (1 ms total)

[----------] 5 tests from ContainerEqTest/0, where TypeParam = std::set<int, std::less<int>, std::allocator<int> >
[ RUN      ] ContainerEqTest/0.EqualsSelf
[       OK ] ContainerEqTest/0.EqualsSelf (0 ms)
[ RUN      ] ContainerEqTest/0.ValueMissing
[       OK ] ContainerEqTest/0.ValueMissing (0 ms)
[ RUN      ] ContainerEqTest/0.ValueAdded
[       OK ] ContainerEqTest/0.ValueAdded (0 ms)
[ RUN      ] ContainerEqTest/0.ValueAddedAndRemoved
[       OK ] ContainerEqTest/0.ValueAddedAndRemoved (0 ms)
[ RUN      ] ContainerEqTest/0.DuplicateDifference
[       OK ] ContainerEqTest/0.DuplicateDifference (0 ms)
[----------] 5 tests from ContainerEqTest/0 (0 ms total)

[----------] 5 tests from ContainerEqTest/1, where TypeParam = std::vector<unsigned long, std::allocator<unsigned long> >
[ RUN      ] ContainerEqTest/1.EqualsSelf
[       OK ] ContainerEqTest/1.EqualsSelf (0 ms)
[ RUN      ] ContainerEqTest/1.ValueMissing
[       OK ] ContainerEqTest/1.ValueMissing (0 ms)
[ RUN      ] ContainerEqTest/1.ValueAdded
[       OK ] ContainerEqTest/1.ValueAdded (0 ms)
[ RUN      ] ContainerEqTest/1.ValueAddedAndRemoved
[       OK ] ContainerEqTest/1.ValueAddedAndRemoved (0 ms)
[ RUN      ] ContainerEqTest/1.DuplicateDifference
[       OK ] ContainerEqTest/1.DuplicateDifference (0 ms)
[----------] 5 tests from ContainerEqTest/1 (0 ms total)

[----------] 5 tests from ContainerEqTest/2, where TypeParam = std::multiset<unsigned long, std::less<unsigned long>, std::allocator<unsigned long> >
[ RUN      ] ContainerEqTest/2.EqualsSelf
[       OK ] ContainerEqTest/2.EqualsSelf (0 ms)
[ RUN      ] ContainerEqTest/2.ValueMissing
[       OK ] ContainerEqTest/2.ValueMissing (0 ms)
[ RUN      ] ContainerEqTest/2.ValueAdded
[       OK ] ContainerEqTest/2.ValueAdded (0 ms)
[ RUN      ] ContainerEqTest/2.ValueAddedAndRemoved
[       OK ] ContainerEqTest/2.ValueAddedAndRemoved (0 ms)
[ RUN      ] ContainerEqTest/2.DuplicateDifference
[       OK ] ContainerEqTest/2.DuplicateDifference (0 ms)
[----------] 5 tests from ContainerEqTest/2 (0 ms total)

[----------] 5 tests from ContainerEqTest/3, where TypeParam = std::list<int, std::allocator<int> >
[ RUN      ] ContainerEqTest/3.EqualsSelf
[       OK ] ContainerEqTest/3.EqualsSelf (0 ms)
[ RUN      ] ContainerEqTest/3.ValueMissing
[       OK ] ContainerEqTest/3.ValueMissing (0 ms)
[ RUN      ] ContainerEqTest/3.ValueAdded
[       OK ] ContainerEqTest/3.ValueAdded (0 ms)
[ RUN      ] ContainerEqTest/3.ValueAddedAndRemoved
[       OK ] ContainerEqTest/3.ValueAddedAndRemoved (0 ms)
[ RUN      ] ContainerEqTest/3.DuplicateDifference
[       OK ] ContainerEqTest/3.DuplicateDifference (0 ms)
[----------] 5 tests from ContainerEqTest/3 (0 ms total)

[----------] 9 tests from ContainerEqExtraTest
[ RUN      ] ContainerEqExtraTest.MultipleValuesMissing
[       OK ] ContainerEqExtraTest.MultipleValuesMissing (0 ms)
[ RUN      ] ContainerEqExtraTest.MultipleValuesAdded
[       OK ] ContainerEqExtraTest.MultipleValuesAdded (0 ms)
[ RUN      ] ContainerEqExtraTest.MultipleValuesAddedAndRemoved
[       OK ] ContainerEqExtraTest.MultipleValuesAddedAndRemoved (0 ms)
[ RUN      ] ContainerEqExtraTest.MultiSetOfIntDuplicateDifference
[       OK ] ContainerEqExtraTest.MultiSetOfIntDuplicateDifference (0 ms)
[ RUN      ] ContainerEqExtraTest.WorksForMaps
[       OK ] ContainerEqExtraTest.WorksForMaps (0 ms)
[ RUN      ] ContainerEqExtraTest.WorksForNativeArray
[       OK ] ContainerEqExtraTest.WorksForNativeArray (0 ms)
[ RUN      ] ContainerEqExtraTest.WorksForTwoDimensionalNativeArray
[       OK ] ContainerEqExtraTest.WorksForTwoDimensionalNativeArray (0 ms)
[ RUN      ] ContainerEqExtraTest.WorksForNativeArrayAsTuple
[       OK ] ContainerEqExtraTest.WorksForNativeArrayAsTuple (0 ms)
[ RUN      ] ContainerEqExtraTest.CopiesNativeArrayParameter
[       OK ] ContainerEqExtraTest.CopiesNativeArrayParameter (0 ms)
[----------] 9 tests from ContainerEqExtraTest (0 ms total)

[----------] 6 tests from WhenSortedByTest
[ RUN      ] WhenSortedByTest.WorksForEmptyContainer
[       OK ] WhenSortedByTest.WorksForEmptyContainer (0 ms)
[ RUN      ] WhenSortedByTest.WorksForNonEmptyContainer
[       OK ] WhenSortedByTest.WorksForNonEmptyContainer (0 ms)
[ RUN      ] WhenSortedByTest.WorksForNonVectorContainer
[       OK ] WhenSortedByTest.WorksForNonVectorContainer (0 ms)
[ RUN      ] WhenSortedByTest.WorksForNativeArray
[       OK ] WhenSortedByTest.WorksForNativeArray (0 ms)
[ RUN      ] WhenSortedByTest.CanDescribeSelf
[       OK ] WhenSortedByTest.CanDescribeSelf (0 ms)
[ RUN      ] WhenSortedByTest.ExplainsMatchResult
[       OK ] WhenSortedByTest.ExplainsMatchResult (0 ms)
[----------] 6 tests from WhenSortedByTest (1 ms total)

[----------] 8 tests from WhenSortedTest
[ RUN      ] WhenSortedTest.WorksForEmptyContainer
[       OK ] WhenSortedTest.WorksForEmptyContainer (0 ms)
[ RUN      ] WhenSortedTest.WorksForNonEmptyContainer
[       OK ] WhenSortedTest.WorksForNonEmptyContainer (0 ms)
[ RUN      ] WhenSortedTest.WorksForMapTypes
[       OK ] WhenSortedTest.WorksForMapTypes (0 ms)
[ RUN      ] WhenSortedTest.WorksForMultiMapTypes
[       OK ] WhenSortedTest.WorksForMultiMapTypes (0 ms)
[ RUN      ] WhenSortedTest.WorksForPolymorphicMatcher
[       OK ] WhenSortedTest.WorksForPolymorphicMatcher (0 ms)
[ RUN      ] WhenSortedTest.WorksForVectorConstRefMatcher
[       OK ] WhenSortedTest.WorksForVectorConstRefMatcher (0 ms)
[ RUN      ] WhenSortedTest.WorksForStreamlike
[       OK ] WhenSortedTest.WorksForStreamlike (0 ms)
[ RUN      ] WhenSortedTest.WorksForVectorConstRefMatcherOnStreamlike
[       OK ] WhenSortedTest.WorksForVectorConstRefMatcherOnStreamlike (0 ms)
[----------] 8 tests from WhenSortedTest (0 ms total)

[----------] 1 test from StreamlikeTest
[ RUN      ] StreamlikeTest.Iteration
[       OK ] StreamlikeTest.Iteration (0 ms)
[----------] 1 test from StreamlikeTest (0 ms total)

[----------] 3 tests from BeginEndDistanceIsTest
[ RUN      ] BeginEndDistanceIsTest.WorksWithNonStdList
[       OK ] BeginEndDistanceIsTest.WorksWithNonStdList (0 ms)
[ RUN      ] BeginEndDistanceIsTest.CanDescribeSelf
[       OK ] BeginEndDistanceIsTest.CanDescribeSelf (0 ms)
[ RUN      ] BeginEndDistanceIsTest.ExplainsResult
[       OK ] BeginEndDistanceIsTest.ExplainsResult (0 ms)
[----------] 3 tests from BeginEndDistanceIsTest (0 ms total)

[----------] 1 test from ElemensAreStreamTest
[ RUN      ] ElemensAreStreamTest.WorksForStreamlike
[       OK ] ElemensAreStreamTest.WorksForStreamlike (0 ms)
[----------] 1 test from ElemensAreStreamTest (0 ms total)

[----------] 1 test from ElemensAreArrayStreamTest
[ RUN      ] ElemensAreArrayStreamTest.WorksForStreamlike
[       OK ] ElemensAreArrayStreamTest.WorksForStreamlike (0 ms)
[----------] 1 test from ElemensAreArrayStreamTest (0 ms total)

[----------] 2 tests from ElementsAreTest
[ RUN      ] ElementsAreTest.WorksWithUncopyable
[       OK ] ElementsAreTest.WorksWithUncopyable (0 ms)
[ RUN      ] ElementsAreTest.TakesStlContainer
[       OK ] ElementsAreTest.TakesStlContainer (0 ms)
[----------] 2 tests from ElementsAreTest (0 ms total)

[----------] 4 tests from UnorderedElementsAreArrayTest
[ RUN      ] UnorderedElementsAreArrayTest.SucceedsWhenExpected
[       OK ] UnorderedElementsAreArrayTest.SucceedsWhenExpected (5 ms)
[ RUN      ] UnorderedElementsAreArrayTest.VectorBool
[       OK ] UnorderedElementsAreArrayTest.VectorBool (0 ms)
[ RUN      ] UnorderedElementsAreArrayTest.WorksForStreamlike
[       OK ] UnorderedElementsAreArrayTest.WorksForStreamlike (0 ms)
[ RUN      ] UnorderedElementsAreArrayTest.TakesStlContainer
[       OK ] UnorderedElementsAreArrayTest.TakesStlContainer (0 ms)
[----------] 4 tests from UnorderedElementsAreArrayTest (5 ms total)

[----------] 14 tests from UnorderedElementsAreTest
[ RUN      ] UnorderedElementsAreTest.WorksWithUncopyable
[       OK ] UnorderedElementsAreTest.WorksWithUncopyable (0 ms)
[ RUN      ] UnorderedElementsAreTest.SucceedsWhenExpected
[       OK ] UnorderedElementsAreTest.SucceedsWhenExpected (0 ms)
[ RUN      ] UnorderedElementsAreTest.FailsWhenAnElementMatchesNoMatcher
[       OK ] UnorderedElementsAreTest.FailsWhenAnElementMatchesNoMatcher (0 ms)
[ RUN      ] UnorderedElementsAreTest.WorksForStreamlike
[       OK ] UnorderedElementsAreTest.WorksForStreamlike (0 ms)
[ RUN      ] UnorderedElementsAreTest.Performance
[       OK ] UnorderedElementsAreTest.Performance (7 ms)
[ RUN      ] UnorderedElementsAreTest.PerformanceHalfStrict
[       OK ] UnorderedElementsAreTest.PerformanceHalfStrict (8 ms)
[ RUN      ] UnorderedElementsAreTest.FailMessageCountWrong
[       OK ] UnorderedElementsAreTest.FailMessageCountWrong (0 ms)
[ RUN      ] UnorderedElementsAreTest.FailMessageCountWrongZero
[       OK ] UnorderedElementsAreTest.FailMessageCountWrongZero (0 ms)
[ RUN      ] UnorderedElementsAreTest.FailMessageUnmatchedMatchers
[       OK ] UnorderedElementsAreTest.FailMessageUnmatchedMatchers (1 ms)
[ RUN      ] UnorderedElementsAreTest.FailMessageUnmatchedElements
[       OK ] UnorderedElementsAreTest.FailMessageUnmatchedElements (0 ms)
[ RUN      ] UnorderedElementsAreTest.FailMessageUnmatchedMatcherAndElement
[       OK ] UnorderedElementsAreTest.FailMessageUnmatchedMatcherAndElement (0 ms)
[ RUN      ] UnorderedElementsAreTest.FailMessageImperfectMatchOnly
[       OK ] UnorderedElementsAreTest.FailMessageImperfectMatchOnly (0 ms)
[ RUN      ] UnorderedElementsAreTest.Describe
[       OK ] UnorderedElementsAreTest.Describe (0 ms)
[ RUN      ] UnorderedElementsAreTest.DescribeNegation
[       OK ] UnorderedElementsAreTest.DescribeNegation (0 ms)
[----------] 14 tests from UnorderedElementsAreTest (16 ms total)

[----------] 1 test from BipartiteNonSquareTest
[ RUN      ] BipartiteNonSquareTest.SimpleBacktracking
[       OK ] BipartiteNonSquareTest.SimpleBacktracking (0 ms)
[----------] 1 test from BipartiteNonSquareTest (0 ms total)

[----------] 4 tests from IsReadableTypeNameTest
[ RUN      ] IsReadableTypeNameTest.ReturnsTrueForShortNames
[       OK ] IsReadableTypeNameTest.ReturnsTrueForShortNames (0 ms)
[ RUN      ] IsReadableTypeNameTest.ReturnsTrueForLongNonTemplateNonFunctionNames
[       OK ] IsReadableTypeNameTest.ReturnsTrueForLongNonTemplateNonFunctionNames (0 ms)
[ RUN      ] IsReadableTypeNameTest.ReturnsFalseForLongTemplateNames
[       OK ] IsReadableTypeNameTest.ReturnsFalseForLongTemplateNames (0 ms)
[ RUN      ] IsReadableTypeNameTest.ReturnsFalseForLongFunctionTypeNames
[       OK ] IsReadableTypeNameTest.ReturnsFalseForLongFunctionTypeNames (0 ms)
[----------] 4 tests from IsReadableTypeNameTest (0 ms total)

[----------] 4 tests from JoinAsTupleTest
[ RUN      ] JoinAsTupleTest.JoinsEmptyTuple
[       OK ] JoinAsTupleTest.JoinsEmptyTuple (0 ms)
[ RUN      ] JoinAsTupleTest.JoinsOneTuple
[       OK ] JoinAsTupleTest.JoinsOneTuple (0 ms)
[ RUN      ] JoinAsTupleTest.JoinsTwoTuple
[       OK ] JoinAsTupleTest.JoinsTwoTuple (0 ms)
[ RUN      ] JoinAsTupleTest.JoinsTenTuple
[       OK ] JoinAsTupleTest.JoinsTenTuple (0 ms)
[----------] 4 tests from JoinAsTupleTest (0 ms total)

[----------] 1 test from FormatMatcherDescriptionTest
[ RUN      ] FormatMatcherDescriptionTest.WorksForEmptyDescription
[       OK ] FormatMatcherDescriptionTest.WorksForEmptyDescription (0 ms)
[----------] 1 test from FormatMatcherDescriptionTest (0 ms total)

[----------] 2 tests from PolymorphicMatcherTest
[ RUN      ] PolymorphicMatcherTest.CanAccessMutableImpl
[       OK ] PolymorphicMatcherTest.CanAccessMutableImpl (0 ms)
[ RUN      ] PolymorphicMatcherTest.CanAccessImpl
[       OK ] PolymorphicMatcherTest.CanAccessImpl (0 ms)
[----------] 2 tests from PolymorphicMatcherTest (0 ms total)

[----------] 1 test from MatcherTupleTest
[ RUN      ] MatcherTupleTest.ExplainsMatchFailure
[       OK ] MatcherTupleTest.ExplainsMatchFailure (0 ms)
[----------] 1 test from MatcherTupleTest (0 ms total)

[----------] 6 tests from EachTest
[ RUN      ] EachTest.ExplainsMatchResultCorrectly
[       OK ] EachTest.ExplainsMatchResultCorrectly (0 ms)
[ RUN      ] EachTest.DescribesItselfCorrectly
[       OK ] EachTest.DescribesItselfCorrectly (0 ms)
[ RUN      ] EachTest.MatchesVectorWhenAllElementsMatch
[       OK ] EachTest.MatchesVectorWhenAllElementsMatch (0 ms)
[ RUN      ] EachTest.MatchesMapWhenAllElementsMatch
[       OK ] EachTest.MatchesMapWhenAllElementsMatch (0 ms)
[ RUN      ] EachTest.AcceptsMatcher
[       OK ] EachTest.AcceptsMatcher (0 ms)
[ RUN      ] EachTest.WorksForNativeArrayAsTuple
[       OK ] EachTest.WorksForNativeArrayAsTuple (0 ms)
[----------] 6 tests from EachTest (0 ms total)

[----------] 8 tests from PointwiseTest
[ RUN      ] PointwiseTest.DescribesSelf
[       OK ] PointwiseTest.DescribesSelf (0 ms)
[ RUN      ] PointwiseTest.MakesCopyOfRhs
[       OK ] PointwiseTest.MakesCopyOfRhs (0 ms)
[ RUN      ] PointwiseTest.WorksForLhsNativeArray
[       OK ] PointwiseTest.WorksForLhsNativeArray (0 ms)
[ RUN      ] PointwiseTest.WorksForRhsNativeArray
[       OK ] PointwiseTest.WorksForRhsNativeArray (0 ms)
[ RUN      ] PointwiseTest.RejectsWrongSize
[       OK ] PointwiseTest.RejectsWrongSize (0 ms)
[ RUN      ] PointwiseTest.RejectsWrongContent
[       OK ] PointwiseTest.RejectsWrongContent (0 ms)
[ RUN      ] PointwiseTest.AcceptsCorrectContent
[       OK ] PointwiseTest.AcceptsCorrectContent (1 ms)
[ RUN      ] PointwiseTest.AllowsMonomorphicInnerMatcher
[       OK ] PointwiseTest.AllowsMonomorphicInnerMatcher (0 ms)
[----------] 8 tests from PointwiseTest (1 ms total)

[----------] 9 tests from UnorderedPointwiseTest
[ RUN      ] UnorderedPointwiseTest.DescribesSelf
[       OK ] UnorderedPointwiseTest.DescribesSelf (0 ms)
[ RUN      ] UnorderedPointwiseTest.MakesCopyOfRhs
[       OK ] UnorderedPointwiseTest.MakesCopyOfRhs (0 ms)
[ RUN      ] UnorderedPointwiseTest.WorksForLhsNativeArray
[       OK ] UnorderedPointwiseTest.WorksForLhsNativeArray (0 ms)
[ RUN      ] UnorderedPointwiseTest.WorksForRhsNativeArray
[       OK ] UnorderedPointwiseTest.WorksForRhsNativeArray (0 ms)
[ RUN      ] UnorderedPointwiseTest.RejectsWrongSize
[       OK ] UnorderedPointwiseTest.RejectsWrongSize (0 ms)
[ RUN      ] UnorderedPointwiseTest.RejectsWrongContent
[       OK ] UnorderedPointwiseTest.RejectsWrongContent (0 ms)
[ RUN      ] UnorderedPointwiseTest.AcceptsCorrectContentInSameOrder
[       OK ] UnorderedPointwiseTest.AcceptsCorrectContentInSameOrder (0 ms)
[ RUN      ] UnorderedPointwiseTest.AcceptsCorrectContentInDifferentOrder
[       OK ] UnorderedPointwiseTest.AcceptsCorrectContentInDifferentOrder (0 ms)
[ RUN      ] UnorderedPointwiseTest.AllowsMonomorphicInnerMatcher
[       OK ] UnorderedPointwiseTest.AllowsMonomorphicInnerMatcher (0 ms)
[----------] 9 tests from UnorderedPointwiseTest (0 ms total)

[----------] 5 tests from AllGraphs/BipartiteTest
[ RUN      ] AllGraphs/BipartiteTest.Exhaustive/0
[       OK ] AllGraphs/BipartiteTest.Exhaustive/0 (0 ms)
[ RUN      ] AllGraphs/BipartiteTest.Exhaustive/1
[       OK ] AllGraphs/BipartiteTest.Exhaustive/1 (0 ms)
[ RUN      ] AllGraphs/BipartiteTest.Exhaustive/2
[       OK ] AllGraphs/BipartiteTest.Exhaustive/2 (0 ms)
[ RUN      ] AllGraphs/BipartiteTest.Exhaustive/3
[       OK ] AllGraphs/BipartiteTest.Exhaustive/3 (5 ms)
[ RUN      ] AllGraphs/BipartiteTest.Exhaustive/4
[       OK ] AllGraphs/BipartiteTest.Exhaustive/4 (704 ms)
[----------] 5 tests from AllGraphs/BipartiteTest (709 ms total)

[----------] 8 tests from AllGraphs/BipartiteNonSquareTest
[ RUN      ] AllGraphs/BipartiteNonSquareTest.Exhaustive/0
[       OK ] AllGraphs/BipartiteNonSquareTest.Exhaustive/0 (0 ms)
[ RUN      ] AllGraphs/BipartiteNonSquareTest.Exhaustive/1
[       OK ] AllGraphs/BipartiteNonSquareTest.Exhaustive/1 (0 ms)
[ RUN      ] AllGraphs/BipartiteNonSquareTest.Exhaustive/2
[       OK ] AllGraphs/BipartiteNonSquareTest.Exhaustive/2 (0 ms)
[ RUN      ] AllGraphs/BipartiteNonSquareTest.Exhaustive/3
[       OK ] AllGraphs/BipartiteNonSquareTest.Exhaustive/3 (0 ms)
[ RUN      ] AllGraphs/BipartiteNonSquareTest.Exhaustive/4
[       OK ] AllGraphs/BipartiteNonSquareTest.Exhaustive/4 (0 ms)
[ RUN      ] AllGraphs/BipartiteNonSquareTest.Exhaustive/5
[       OK ] AllGraphs/BipartiteNonSquareTest.Exhaustive/5 (0 ms)
[ RUN      ] AllGraphs/BipartiteNonSquareTest.Exhaustive/6
[       OK ] AllGraphs/BipartiteNonSquareTest.Exhaustive/6 (19 ms)
[ RUN      ] AllGraphs/BipartiteNonSquareTest.Exhaustive/7
[       OK ] AllGraphs/BipartiteNonSquareTest.Exhaustive/7 (27 ms)
[----------] 8 tests from AllGraphs/BipartiteNonSquareTest (46 ms total)

[----------] 5 tests from Samples/BipartiteRandomTest
[ RUN      ] Samples/BipartiteRandomTest.LargerNets/0
[       OK ] Samples/BipartiteRandomTest.LargerNets/0 (147 ms)
[ RUN      ] Samples/BipartiteRandomTest.LargerNets/1
[       OK ] Samples/BipartiteRandomTest.LargerNets/1 (152 ms)
[ RUN      ] Samples/BipartiteRandomTest.LargerNets/2
[       OK ] Samples/BipartiteRandomTest.LargerNets/2 (158 ms)
[ RUN      ] Samples/BipartiteRandomTest.LargerNets/3
[       OK ] Samples/BipartiteRandomTest.LargerNets/3 (109 ms)
[ RUN      ] Samples/BipartiteRandomTest.LargerNets/4
[       OK ] Samples/BipartiteRandomTest.LargerNets/4 (82 ms)
[----------] 5 tests from Samples/BipartiteRandomTest (648 ms total)

[----------] Global test environment tear-down
[==========] 394 tests from 97 test cases ran. (1542 ms total)
[  PASSED  ] 394 tests.
<end of output>
Test time =   1.55 sec
----------------------------------------------------------
Test Passed.
"gmock-matchers_test" end time: Feb 23 18:43 PST
"gmock-matchers_test" time elapsed: 00:00:01
----------------------------------------------------------

10/60 Testing: gmock-more-actions_test
10/60 Test: gmock-more-actions_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock-more-actions_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock-more-actions_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gmock_main.cc
[==========] Running 50 tests from 12 test cases.
[----------] Global test environment set-up.
[----------] 15 tests from InvokeTest
[ RUN      ] InvokeTest.Nullary
[       OK ] InvokeTest.Nullary (0 ms)
[ RUN      ] InvokeTest.Unary
[       OK ] InvokeTest.Unary (0 ms)
[ RUN      ] InvokeTest.Binary
[       OK ] InvokeTest.Binary (0 ms)
[ RUN      ] InvokeTest.Ternary
[       OK ] InvokeTest.Ternary (0 ms)
[ RUN      ] InvokeTest.FunctionThatTakes4Arguments
[       OK ] InvokeTest.FunctionThatTakes4Arguments (0 ms)
[ RUN      ] InvokeTest.FunctionThatTakes5Arguments
[       OK ] InvokeTest.FunctionThatTakes5Arguments (0 ms)
[ RUN      ] InvokeTest.FunctionThatTakes6Arguments
[       OK ] InvokeTest.FunctionThatTakes6Arguments (0 ms)
[ RUN      ] InvokeTest.FunctionThatTakes7Arguments
[       OK ] InvokeTest.FunctionThatTakes7Arguments (0 ms)
[ RUN      ] InvokeTest.FunctionThatTakes8Arguments
[       OK ] InvokeTest.FunctionThatTakes8Arguments (0 ms)
[ RUN      ] InvokeTest.FunctionThatTakes9Arguments
[       OK ] InvokeTest.FunctionThatTakes9Arguments (0 ms)
[ RUN      ] InvokeTest.FunctionThatTakes10Arguments
[       OK ] InvokeTest.FunctionThatTakes10Arguments (0 ms)
[ RUN      ] InvokeTest.FunctionWithUnusedParameters
[       OK ] InvokeTest.FunctionWithUnusedParameters (0 ms)
[ RUN      ] InvokeTest.MethodWithUnusedParameters
[       OK ] InvokeTest.MethodWithUnusedParameters (0 ms)
[ RUN      ] InvokeTest.Functor
[       OK ] InvokeTest.Functor (0 ms)
[ RUN      ] InvokeTest.FunctionWithCompatibleType
[       OK ] InvokeTest.FunctionWithCompatibleType (0 ms)
[----------] 15 tests from InvokeTest (0 ms total)

[----------] 12 tests from InvokeMethodTest
[ RUN      ] InvokeMethodTest.Nullary
[       OK ] InvokeMethodTest.Nullary (0 ms)
[ RUN      ] InvokeMethodTest.Unary
[       OK ] InvokeMethodTest.Unary (0 ms)
[ RUN      ] InvokeMethodTest.Binary
[       OK ] InvokeMethodTest.Binary (0 ms)
[ RUN      ] InvokeMethodTest.Ternary
[       OK ] InvokeMethodTest.Ternary (0 ms)
[ RUN      ] InvokeMethodTest.MethodThatTakes4Arguments
[       OK ] InvokeMethodTest.MethodThatTakes4Arguments (0 ms)
[ RUN      ] InvokeMethodTest.MethodThatTakes5Arguments
[       OK ] InvokeMethodTest.MethodThatTakes5Arguments (0 ms)
[ RUN      ] InvokeMethodTest.MethodThatTakes6Arguments
[       OK ] InvokeMethodTest.MethodThatTakes6Arguments (0 ms)
[ RUN      ] InvokeMethodTest.MethodThatTakes7Arguments
[       OK ] InvokeMethodTest.MethodThatTakes7Arguments (0 ms)
[ RUN      ] InvokeMethodTest.MethodThatTakes8Arguments
[       OK ] InvokeMethodTest.MethodThatTakes8Arguments (0 ms)
[ RUN      ] InvokeMethodTest.MethodThatTakes9Arguments
[       OK ] InvokeMethodTest.MethodThatTakes9Arguments (0 ms)
[ RUN      ] InvokeMethodTest.MethodThatTakes10Arguments
[       OK ] InvokeMethodTest.MethodThatTakes10Arguments (0 ms)
[ RUN      ] InvokeMethodTest.MethodWithCompatibleType
[       OK ] InvokeMethodTest.MethodWithCompatibleType (0 ms)
[----------] 12 tests from InvokeMethodTest (0 ms total)

[----------] 1 test from WithoutArgsTest
[ RUN      ] WithoutArgsTest.NoArg
[       OK ] WithoutArgsTest.NoArg (0 ms)
[----------] 1 test from WithoutArgsTest (0 ms total)

[----------] 1 test from WithArgTest
[ RUN      ] WithArgTest.OneArg
[       OK ] WithArgTest.OneArg (0 ms)
[----------] 1 test from WithArgTest (0 ms total)

[----------] 3 tests from ReturnArgActionTest
[ RUN      ] ReturnArgActionTest.WorksForOneArgIntArg0
[       OK ] ReturnArgActionTest.WorksForOneArgIntArg0 (0 ms)
[ RUN      ] ReturnArgActionTest.WorksForMultiArgBoolArg0
[       OK ] ReturnArgActionTest.WorksForMultiArgBoolArg0 (0 ms)
[ RUN      ] ReturnArgActionTest.WorksForMultiArgStringArg2
[       OK ] ReturnArgActionTest.WorksForMultiArgStringArg2 (0 ms)
[----------] 3 tests from ReturnArgActionTest (0 ms total)

[----------] 2 tests from SaveArgActionTest
[ RUN      ] SaveArgActionTest.WorksForSameType
[       OK ] SaveArgActionTest.WorksForSameType (0 ms)
[ RUN      ] SaveArgActionTest.WorksForCompatibleType
[       OK ] SaveArgActionTest.WorksForCompatibleType (0 ms)
[----------] 2 tests from SaveArgActionTest (0 ms total)

[----------] 3 tests from SaveArgPointeeActionTest
[ RUN      ] SaveArgPointeeActionTest.WorksForSameType
[       OK ] SaveArgPointeeActionTest.WorksForSameType (0 ms)
[ RUN      ] SaveArgPointeeActionTest.WorksForCompatibleType
[       OK ] SaveArgPointeeActionTest.WorksForCompatibleType (0 ms)
[ RUN      ] SaveArgPointeeActionTest.WorksForLinkedPtr
[       OK ] SaveArgPointeeActionTest.WorksForLinkedPtr (0 ms)
[----------] 3 tests from SaveArgPointeeActionTest (0 ms total)

[----------] 3 tests from SetArgRefereeActionTest
[ RUN      ] SetArgRefereeActionTest.WorksForSameType
[       OK ] SetArgRefereeActionTest.WorksForSameType (0 ms)
[ RUN      ] SetArgRefereeActionTest.WorksForCompatibleType
[       OK ] SetArgRefereeActionTest.WorksForCompatibleType (0 ms)
[ RUN      ] SetArgRefereeActionTest.WorksWithExtraArguments
[       OK ] SetArgRefereeActionTest.WorksWithExtraArguments (0 ms)
[----------] 3 tests from SetArgRefereeActionTest (0 ms total)

[----------] 2 tests from DeleteArgActionTest
[ RUN      ] DeleteArgActionTest.OneArg
[       OK ] DeleteArgActionTest.OneArg (0 ms)
[ RUN      ] DeleteArgActionTest.TenArgs
[       OK ] DeleteArgActionTest.TenArgs (0 ms)
[----------] 2 tests from DeleteArgActionTest (0 ms total)

[----------] 3 tests from ThrowActionTest
[ RUN      ] ThrowActionTest.ThrowsGivenExceptionInVoidFunction
[       OK ] ThrowActionTest.ThrowsGivenExceptionInVoidFunction (0 ms)
[ RUN      ] ThrowActionTest.ThrowsGivenExceptionInNonVoidFunction
[       OK ] ThrowActionTest.ThrowsGivenExceptionInNonVoidFunction (0 ms)
[ RUN      ] ThrowActionTest.ThrowsGivenExceptionInNullaryFunction
[       OK ] ThrowActionTest.ThrowsGivenExceptionInNullaryFunction (0 ms)
[----------] 3 tests from ThrowActionTest (0 ms total)

[----------] 4 tests from SetArrayArgumentTest
[ RUN      ] SetArrayArgumentTest.SetsTheNthArray
[       OK ] SetArrayArgumentTest.SetsTheNthArray (0 ms)
[ RUN      ] SetArrayArgumentTest.SetsTheNthArrayWithEmptyRange
[       OK ] SetArrayArgumentTest.SetsTheNthArrayWithEmptyRange (0 ms)
[ RUN      ] SetArrayArgumentTest.SetsTheNthArrayWithConvertibleType
[       OK ] SetArrayArgumentTest.SetsTheNthArrayWithConvertibleType (0 ms)
[ RUN      ] SetArrayArgumentTest.SetsTheNthArrayWithIteratorArgument
[       OK ] SetArrayArgumentTest.SetsTheNthArrayWithIteratorArgument (0 ms)
[----------] 4 tests from SetArrayArgumentTest (0 ms total)

[----------] 1 test from ReturnPointeeTest
[ RUN      ] ReturnPointeeTest.Works
[       OK ] ReturnPointeeTest.Works (0 ms)
[----------] 1 test from ReturnPointeeTest (0 ms total)

[----------] Global test environment tear-down
[==========] 50 tests from 12 test cases ran. (0 ms total)
[  PASSED  ] 50 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gmock-more-actions_test" end time: Feb 23 18:43 PST
"gmock-more-actions_test" time elapsed: 00:00:00
----------------------------------------------------------

11/60 Testing: gmock-nice-strict_test
11/60 Test: gmock-nice-strict_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock-nice-strict_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock-nice-strict_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gmock_main.cc
[==========] Running 25 tests from 4 test cases.
[----------] Global test environment set-up.
[----------] 3 tests from RawMockTest
[ RUN      ] RawMockTest.WarningForUninterestingCall
[       OK ] RawMockTest.WarningForUninterestingCall (0 ms)
[ RUN      ] RawMockTest.WarningForUninterestingCallAfterDeath
[       OK ] RawMockTest.WarningForUninterestingCallAfterDeath (1 ms)
[ RUN      ] RawMockTest.InfoForUninterestingCall
[       OK ] RawMockTest.InfoForUninterestingCall (0 ms)
[----------] 3 tests from RawMockTest (1 ms total)

[----------] 8 tests from NiceMockTest
[ RUN      ] NiceMockTest.NoWarningForUninterestingCall
[       OK ] NiceMockTest.NoWarningForUninterestingCall (0 ms)
[ RUN      ] NiceMockTest.NoWarningForUninterestingCallAfterDeath
[       OK ] NiceMockTest.NoWarningForUninterestingCallAfterDeath (0 ms)
[ RUN      ] NiceMockTest.InfoForUninterestingCall
[       OK ] NiceMockTest.InfoForUninterestingCall (0 ms)
[ RUN      ] NiceMockTest.AllowsExpectedCall
[       OK ] NiceMockTest.AllowsExpectedCall (0 ms)
[ RUN      ] NiceMockTest.UnexpectedCallFails
[       OK ] NiceMockTest.UnexpectedCallFails (0 ms)
[ RUN      ] NiceMockTest.NonDefaultConstructor
[       OK ] NiceMockTest.NonDefaultConstructor (0 ms)
[ RUN      ] NiceMockTest.NonDefaultConstructor10
[       OK ] NiceMockTest.NonDefaultConstructor10 (0 ms)
[ RUN      ] NiceMockTest.AcceptsClassNamedMock
[       OK ] NiceMockTest.AcceptsClassNamedMock (0 ms)
[----------] 8 tests from NiceMockTest (0 ms total)

[----------] 7 tests from NaggyMockTest
[ RUN      ] NaggyMockTest.WarningForUninterestingCall
[       OK ] NaggyMockTest.WarningForUninterestingCall (0 ms)
[ RUN      ] NaggyMockTest.WarningForUninterestingCallAfterDeath
[       OK ] NaggyMockTest.WarningForUninterestingCallAfterDeath (0 ms)
[ RUN      ] NaggyMockTest.AllowsExpectedCall
[       OK ] NaggyMockTest.AllowsExpectedCall (0 ms)
[ RUN      ] NaggyMockTest.UnexpectedCallFails
[       OK ] NaggyMockTest.UnexpectedCallFails (0 ms)
[ RUN      ] NaggyMockTest.NonDefaultConstructor

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: This()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: That(5, true)
          Returns: ""
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
[       OK ] NaggyMockTest.NonDefaultConstructor (1 ms)
[ RUN      ] NaggyMockTest.NonDefaultConstructor10

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: This()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: That(5, true)
          Returns: ""
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
[       OK ] NaggyMockTest.NonDefaultConstructor10 (0 ms)
[ RUN      ] NaggyMockTest.AcceptsClassNamedMock
[       OK ] NaggyMockTest.AcceptsClassNamedMock (0 ms)
[----------] 7 tests from NaggyMockTest (1 ms total)

[----------] 7 tests from StrictMockTest
[ RUN      ] StrictMockTest.AllowsExpectedCall
[       OK ] StrictMockTest.AllowsExpectedCall (0 ms)
[ RUN      ] StrictMockTest.UnexpectedCallFails
[       OK ] StrictMockTest.UnexpectedCallFails (0 ms)
[ RUN      ] StrictMockTest.UninterestingCallFails
[       OK ] StrictMockTest.UninterestingCallFails (0 ms)
[ RUN      ] StrictMockTest.UninterestingCallFailsAfterDeath
[       OK ] StrictMockTest.UninterestingCallFailsAfterDeath (0 ms)
[ RUN      ] StrictMockTest.NonDefaultConstructor
[       OK ] StrictMockTest.NonDefaultConstructor (0 ms)
[ RUN      ] StrictMockTest.NonDefaultConstructor10
[       OK ] StrictMockTest.NonDefaultConstructor10 (0 ms)
[ RUN      ] StrictMockTest.AcceptsClassNamedMock
[       OK ] StrictMockTest.AcceptsClassNamedMock (0 ms)
[----------] 7 tests from StrictMockTest (0 ms total)

[----------] Global test environment tear-down
[==========] 25 tests from 4 test cases ran. (2 ms total)
[  PASSED  ] 25 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gmock-nice-strict_test" end time: Feb 23 18:43 PST
"gmock-nice-strict_test" time elapsed: 00:00:00
----------------------------------------------------------

12/60 Testing: gmock-port_test
12/60 Test: gmock-port_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock-port_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock-port_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gmock_main.cc
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from DummyTest
[ RUN      ] DummyTest.Dummy
[       OK ] DummyTest.Dummy (0 ms)
[----------] 1 test from DummyTest (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gmock-port_test" end time: Feb 23 18:43 PST
"gmock-port_test" time elapsed: 00:00:00
----------------------------------------------------------

13/60 Testing: gmock-spec-builders_test
13/60 Test: gmock-spec-builders_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock-spec-builders_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock-spec-builders_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
[==========] Running 132 tests from 25 test cases.
[----------] Global test environment set-up.
[----------] 1 test from MockMethodTest
[ RUN      ] MockMethodTest.CanInstantiateWithIncompleteArgType
[       OK ] MockMethodTest.CanInstantiateWithIncompleteArgType (0 ms)
[----------] 1 test from MockMethodTest (0 ms total)

[----------] 8 tests from OnCallSyntaxTest
[ RUN      ] OnCallSyntaxTest.CompilesWithMethodNameExpandedFromMacro
[       OK ] OnCallSyntaxTest.CompilesWithMethodNameExpandedFromMacro (0 ms)
[ RUN      ] OnCallSyntaxTest.WorksWithMethodNameExpandedFromMacro

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:211:
    Function call: MethodW()
          Returns: 42
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
[       OK ] OnCallSyntaxTest.WorksWithMethodNameExpandedFromMacro (0 ms)
[ RUN      ] OnCallSyntaxTest.EvaluatesFirstArgumentOnce
[       OK ] OnCallSyntaxTest.EvaluatesFirstArgumentOnce (0 ms)
[ RUN      ] OnCallSyntaxTest.EvaluatesSecondArgumentOnce
[       OK ] OnCallSyntaxTest.EvaluatesSecondArgumentOnce (0 ms)
[ RUN      ] OnCallSyntaxTest.WithIsOptional
[       OK ] OnCallSyntaxTest.WithIsOptional (0 ms)
[ RUN      ] OnCallSyntaxTest.WithCanAppearAtMostOnce
[       OK ] OnCallSyntaxTest.WithCanAppearAtMostOnce (0 ms)
[ RUN      ] OnCallSyntaxTest.WillByDefaultIsMandatory
[       OK ] OnCallSyntaxTest.WillByDefaultIsMandatory (106 ms)
[ RUN      ] OnCallSyntaxTest.WillByDefaultCanAppearAtMostOnce
[       OK ] OnCallSyntaxTest.WillByDefaultCanAppearAtMostOnce (0 ms)
[----------] 8 tests from OnCallSyntaxTest (106 ms total)

[----------] 27 tests from ExpectCallSyntaxTest
[ RUN      ] ExpectCallSyntaxTest.CompilesWithMethodNameExpandedFromMacro
[       OK ] ExpectCallSyntaxTest.CompilesWithMethodNameExpandedFromMacro (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WorksWithMethodNameExpandedFromMacro
[       OK ] ExpectCallSyntaxTest.WorksWithMethodNameExpandedFromMacro (0 ms)
[ RUN      ] ExpectCallSyntaxTest.EvaluatesFirstArgumentOnce
[       OK ] ExpectCallSyntaxTest.EvaluatesFirstArgumentOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.EvaluatesSecondArgumentOnce
[       OK ] ExpectCallSyntaxTest.EvaluatesSecondArgumentOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WithIsOptional
[       OK ] ExpectCallSyntaxTest.WithIsOptional (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WithCanAppearAtMostOnce
[       OK ] ExpectCallSyntaxTest.WithCanAppearAtMostOnce (1 ms)
[ RUN      ] ExpectCallSyntaxTest.WithMustBeFirstClause
[       OK ] ExpectCallSyntaxTest.WithMustBeFirstClause (0 ms)
[ RUN      ] ExpectCallSyntaxTest.TimesCanBeInferred
[       OK ] ExpectCallSyntaxTest.TimesCanBeInferred (0 ms)
[ RUN      ] ExpectCallSyntaxTest.TimesCanAppearAtMostOnce
[       OK ] ExpectCallSyntaxTest.TimesCanAppearAtMostOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.TimesMustBeBeforeInSequence
[       OK ] ExpectCallSyntaxTest.TimesMustBeBeforeInSequence (0 ms)
[ RUN      ] ExpectCallSyntaxTest.InSequenceIsOptional
[       OK ] ExpectCallSyntaxTest.InSequenceIsOptional (0 ms)
[ RUN      ] ExpectCallSyntaxTest.InSequenceCanAppearMultipleTimes
[       OK ] ExpectCallSyntaxTest.InSequenceCanAppearMultipleTimes (0 ms)
[ RUN      ] ExpectCallSyntaxTest.InSequenceMustBeBeforeAfter
[       OK ] ExpectCallSyntaxTest.InSequenceMustBeBeforeAfter (0 ms)
[ RUN      ] ExpectCallSyntaxTest.InSequenceMustBeBeforeWillOnce
[       OK ] ExpectCallSyntaxTest.InSequenceMustBeBeforeWillOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.AfterMustBeBeforeWillOnce
[       OK ] ExpectCallSyntaxTest.AfterMustBeBeforeWillOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillIsOptional
[       OK ] ExpectCallSyntaxTest.WillIsOptional (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillCanAppearMultipleTimes
[       OK ] ExpectCallSyntaxTest.WillCanAppearMultipleTimes (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillMustBeBeforeWillRepeatedly
[       OK ] ExpectCallSyntaxTest.WillMustBeBeforeWillRepeatedly (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillRepeatedlyIsOptional
[       OK ] ExpectCallSyntaxTest.WillRepeatedlyIsOptional (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillRepeatedlyCannotAppearMultipleTimes
[       OK ] ExpectCallSyntaxTest.WillRepeatedlyCannotAppearMultipleTimes (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillRepeatedlyMustBeBeforeRetiresOnSaturation
[       OK ] ExpectCallSyntaxTest.WillRepeatedlyMustBeBeforeRetiresOnSaturation (0 ms)
[ RUN      ] ExpectCallSyntaxTest.RetiresOnSaturationIsOptional
[       OK ] ExpectCallSyntaxTest.RetiresOnSaturationIsOptional (0 ms)
[ RUN      ] ExpectCallSyntaxTest.RetiresOnSaturationCannotAppearMultipleTimes
[       OK ] ExpectCallSyntaxTest.RetiresOnSaturationCannotAppearMultipleTimes (0 ms)
[ RUN      ] ExpectCallSyntaxTest.DefaultCardinalityIsOnce
[       OK ] ExpectCallSyntaxTest.DefaultCardinalityIsOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.DoesNotWarnOnAdequateActionCount
[       OK ] ExpectCallSyntaxTest.DoesNotWarnOnAdequateActionCount (1 ms)
[ RUN      ] ExpectCallSyntaxTest.WarnsOnTooManyActions
[       OK ] ExpectCallSyntaxTest.WarnsOnTooManyActions (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WarnsOnTooFewActions

GMOCK WARNING:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:679: Actions ran out in EXPECT_CALL(b, DoB())...
Called 2 times, but only 1 WillOnce() is specified - returning default value.
Stack trace:
[       OK ] ExpectCallSyntaxTest.WarnsOnTooFewActions (0 ms)
[----------] 27 tests from ExpectCallSyntaxTest (2 ms total)

[----------] 3 tests from OnCallTest
[ RUN      ] OnCallTest.TakesBuiltInDefaultActionWhenNoOnCall
[       OK ] OnCallTest.TakesBuiltInDefaultActionWhenNoOnCall (0 ms)
[ RUN      ] OnCallTest.TakesBuiltInDefaultActionWhenNoOnCallMatches
[       OK ] OnCallTest.TakesBuiltInDefaultActionWhenNoOnCallMatches (0 ms)
[ RUN      ] OnCallTest.PicksLastMatchingOnCall
[       OK ] OnCallTest.PicksLastMatchingOnCall (0 ms)
[----------] 3 tests from OnCallTest (0 ms total)

[----------] 8 tests from ExpectCallTest
[ RUN      ] ExpectCallTest.AllowsAnyCallWhenNoSpec

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(2)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
[       OK ] ExpectCallTest.AllowsAnyCallWhenNoSpec (0 ms)
[ RUN      ] ExpectCallTest.PicksLastMatchingExpectCall
[       OK ] ExpectCallTest.PicksLastMatchingExpectCall (0 ms)
[ RUN      ] ExpectCallTest.CatchesTooFewCalls
[       OK ] ExpectCallTest.CatchesTooFewCalls (0 ms)
[ RUN      ] ExpectCallTest.InfersCardinalityWhenThereIsNoWillRepeatedly
[       OK ] ExpectCallTest.InfersCardinalityWhenThereIsNoWillRepeatedly (0 ms)
[ RUN      ] ExpectCallTest.InfersCardinality1WhenThereIsWillRepeatedly
[       OK ] ExpectCallTest.InfersCardinality1WhenThereIsWillRepeatedly (0 ms)
[ RUN      ] ExpectCallTest.NthMatchTakesNthAction
[       OK ] ExpectCallTest.NthMatchTakesNthAction (0 ms)
[ RUN      ] ExpectCallTest.TakesRepeatedActionWhenWillListIsExhausted
[       OK ] ExpectCallTest.TakesRepeatedActionWhenWillListIsExhausted (0 ms)
[ RUN      ] ExpectCallTest.TakesDefaultActionWhenWillListIsExhausted
[       OK ] ExpectCallTest.TakesDefaultActionWhenWillListIsExhausted (1 ms)
[----------] 8 tests from ExpectCallTest (1 ms total)

[----------] 2 tests from FunctionMockerMessageTest
[ RUN      ] FunctionMockerMessageTest.ReportsExpectCallLocationForExhausedActions
[       OK ] FunctionMockerMessageTest.ReportsExpectCallLocationForExhausedActions (0 ms)
[ RUN      ] FunctionMockerMessageTest.ReportsDefaultActionLocationOfUninterestingCallsForNaggyMock
[       OK ] FunctionMockerMessageTest.ReportsDefaultActionLocationOfUninterestingCallsForNaggyMock (0 ms)
[----------] 2 tests from FunctionMockerMessageTest (0 ms total)

[----------] 1 test from UninterestingCallTest
[ RUN      ] UninterestingCallTest.DoesDefaultAction

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:931:
    Function call: Binary(1, 2)
          Returns: true
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
[       OK ] UninterestingCallTest.DoesDefaultAction (0 ms)
[----------] 1 test from UninterestingCallTest (0 ms total)

[----------] 6 tests from UnexpectedCallTest
[ RUN      ] UnexpectedCallTest.DoesDefaultAction
[       OK ] UnexpectedCallTest.DoesDefaultAction (0 ms)
[ RUN      ] UnexpectedCallTest.GeneratesFailureForVoidFunction
[       OK ] UnexpectedCallTest.GeneratesFailureForVoidFunction (0 ms)
[ RUN      ] UnexpectedCallTest.GeneartesFailureForNonVoidFunction
[       OK ] UnexpectedCallTest.GeneartesFailureForNonVoidFunction (0 ms)
[ RUN      ] UnexpectedCallTest.RetiredExpectation
[       OK ] UnexpectedCallTest.RetiredExpectation (0 ms)
[ RUN      ] UnexpectedCallTest.UnmatchedArguments
[       OK ] UnexpectedCallTest.UnmatchedArguments (0 ms)
[ RUN      ] UnexpectedCallTest.UnsatisifiedPrerequisites
[       OK ] UnexpectedCallTest.UnsatisifiedPrerequisites (1 ms)
[----------] 6 tests from UnexpectedCallTest (1 ms total)

[----------] 1 test from UndefinedReturnValueTest
[ RUN      ] UndefinedReturnValueTest.ReturnValueIsMandatoryWhenNotDefaultConstructible
[       OK ] UndefinedReturnValueTest.ReturnValueIsMandatoryWhenNotDefaultConstructible (0 ms)
[----------] 1 test from UndefinedReturnValueTest (0 ms total)

[----------] 3 tests from ExcessiveCallTest
[ RUN      ] ExcessiveCallTest.DoesDefaultAction
[       OK ] ExcessiveCallTest.DoesDefaultAction (0 ms)
[ RUN      ] ExcessiveCallTest.GeneratesFailureForVoidFunction
[       OK ] ExcessiveCallTest.GeneratesFailureForVoidFunction (0 ms)
[ RUN      ] ExcessiveCallTest.GeneratesFailureForNonVoidFunction
[       OK ] ExcessiveCallTest.GeneratesFailureForNonVoidFunction (0 ms)
[----------] 3 tests from ExcessiveCallTest (0 ms total)

[----------] 3 tests from InSequenceTest
[ RUN      ] InSequenceTest.AllExpectationInScopeAreInSequence
[       OK ] InSequenceTest.AllExpectationInScopeAreInSequence (0 ms)
[ RUN      ] InSequenceTest.NestedInSequence
[       OK ] InSequenceTest.NestedInSequence (0 ms)
[ RUN      ] InSequenceTest.ExpectationsOutOfScopeAreNotAffected
[       OK ] InSequenceTest.ExpectationsOutOfScopeAreNotAffected (0 ms)
[----------] 3 tests from InSequenceTest (1 ms total)

[----------] 4 tests from SequenceTest
[ RUN      ] SequenceTest.AnyOrderIsOkByDefault
[       OK ] SequenceTest.AnyOrderIsOkByDefault (0 ms)
[ RUN      ] SequenceTest.CallsMustBeInStrictOrderWhenSaidSo1
[       OK ] SequenceTest.CallsMustBeInStrictOrderWhenSaidSo1 (0 ms)
[ RUN      ] SequenceTest.CallsMustBeInStrictOrderWhenSaidSo2
[       OK ] SequenceTest.CallsMustBeInStrictOrderWhenSaidSo2 (0 ms)
[ RUN      ] SequenceTest.Retirement
[       OK ] SequenceTest.Retirement (0 ms)
[----------] 4 tests from SequenceTest (0 ms total)

[----------] 4 tests from PartialOrderTest
[ RUN      ] PartialOrderTest.CallsMustConformToSpecifiedDag1
[       OK ] PartialOrderTest.CallsMustConformToSpecifiedDag1 (0 ms)
[ RUN      ] PartialOrderTest.CallsMustConformToSpecifiedDag2
[       OK ] PartialOrderTest.CallsMustConformToSpecifiedDag2 (0 ms)
[ RUN      ] PartialOrderTest.CallsMustConformToSpecifiedDag3
[       OK ] PartialOrderTest.CallsMustConformToSpecifiedDag3 (0 ms)
[ RUN      ] PartialOrderTest.CallsMustConformToSpecifiedDag4
[       OK ] PartialOrderTest.CallsMustConformToSpecifiedDag4 (1 ms)
[----------] 4 tests from PartialOrderTest (1 ms total)

[----------] 2 tests from ExpectationTest
[ RUN      ] ExpectationTest.ConstrutorsWork
[       OK ] ExpectationTest.ConstrutorsWork (0 ms)
[ RUN      ] ExpectationTest.AssignmentWorks
[       OK ] ExpectationTest.AssignmentWorks (0 ms)
[----------] 2 tests from ExpectationTest (0 ms total)

[----------] 6 tests from ExpectationSetTest
[ RUN      ] ExpectationSetTest.MemberTypesAreCorrect
[       OK ] ExpectationSetTest.MemberTypesAreCorrect (0 ms)
[ RUN      ] ExpectationSetTest.ConstructorsWork
[       OK ] ExpectationSetTest.ConstructorsWork (0 ms)
[ RUN      ] ExpectationSetTest.AssignmentWorks
[       OK ] ExpectationSetTest.AssignmentWorks (0 ms)
[ RUN      ] ExpectationSetTest.InsertionWorks
[       OK ] ExpectationSetTest.InsertionWorks (0 ms)
[ RUN      ] ExpectationSetTest.SizeWorks
[       OK ] ExpectationSetTest.SizeWorks (0 ms)
[ RUN      ] ExpectationSetTest.IsEnumerable
[       OK ] ExpectationSetTest.IsEnumerable (0 ms)
[----------] 6 tests from ExpectationSetTest (0 ms total)

[----------] 11 tests from AfterTest
[ RUN      ] AfterTest.SucceedsWhenPartialOrderIsSatisfied
[       OK ] AfterTest.SucceedsWhenPartialOrderIsSatisfied (0 ms)
[ RUN      ] AfterTest.SucceedsWhenTotalOrderIsSatisfied
[       OK ] AfterTest.SucceedsWhenTotalOrderIsSatisfied (0 ms)
[ RUN      ] AfterTest.CallsMustBeInStrictOrderWhenSpecifiedSo1
[       OK ] AfterTest.CallsMustBeInStrictOrderWhenSpecifiedSo1 (0 ms)
[ RUN      ] AfterTest.CallsMustBeInStrictOrderWhenSpecifiedSo2
[       OK ] AfterTest.CallsMustBeInStrictOrderWhenSpecifiedSo2 (0 ms)
[ RUN      ] AfterTest.CallsMustSatisfyPartialOrderWhenSpecifiedSo
[       OK ] AfterTest.CallsMustSatisfyPartialOrderWhenSpecifiedSo (1 ms)
[ RUN      ] AfterTest.CallsMustSatisfyPartialOrderWhenSpecifiedSo2
[       OK ] AfterTest.CallsMustSatisfyPartialOrderWhenSpecifiedSo2 (0 ms)
[ RUN      ] AfterTest.CanBeUsedWithInSequence
[       OK ] AfterTest.CanBeUsedWithInSequence (0 ms)
[ RUN      ] AfterTest.CanBeCalledManyTimes
[       OK ] AfterTest.CanBeCalledManyTimes (0 ms)
[ RUN      ] AfterTest.AcceptsUpToFiveArguments
[       OK ] AfterTest.AcceptsUpToFiveArguments (0 ms)
[ RUN      ] AfterTest.AcceptsDuplicatedInput
[       OK ] AfterTest.AcceptsDuplicatedInput (0 ms)
[ RUN      ] AfterTest.ChangesToExpectationSetHaveNoEffectAfterwards
[       OK ] AfterTest.ChangesToExpectationSetHaveNoEffectAfterwards (0 ms)
[----------] 11 tests from AfterTest (1 ms total)

[----------] 6 tests from DeletingMockEarlyTest
[ RUN      ] DeletingMockEarlyTest.Success1
[       OK ] DeletingMockEarlyTest.Success1 (0 ms)
[ RUN      ] DeletingMockEarlyTest.Success2
[       OK ] DeletingMockEarlyTest.Success2 (0 ms)
[ RUN      ] DeletingMockEarlyTest.CanDeleteSelfInActionReturningVoid
[       OK ] DeletingMockEarlyTest.CanDeleteSelfInActionReturningVoid (0 ms)
[ RUN      ] DeletingMockEarlyTest.CanDeleteSelfInActionReturningValue
[       OK ] DeletingMockEarlyTest.CanDeleteSelfInActionReturningValue (0 ms)
[ RUN      ] DeletingMockEarlyTest.Failure1
[       OK ] DeletingMockEarlyTest.Failure1 (0 ms)
[ RUN      ] DeletingMockEarlyTest.Failure2
[       OK ] DeletingMockEarlyTest.Failure2 (1 ms)
[----------] 6 tests from DeletingMockEarlyTest (1 ms total)

[----------] 1 test from ExpectationBaseTest
[ RUN      ] ExpectationBaseTest.AllPrerequisitesAreSatisfiedWorksForNonMonotonicCardinality
[       OK ] ExpectationBaseTest.AllPrerequisitesAreSatisfiedWorksForNonMonotonicCardinality (0 ms)
[----------] 1 test from ExpectationBaseTest (0 ms total)

[----------] 3 tests from FunctionCallMessageTest
[ RUN      ] FunctionCallMessageTest.UninterestingCallOnNaggyMockGeneratesNoStackTraceWhenVerboseWarning
[       OK ] FunctionCallMessageTest.UninterestingCallOnNaggyMockGeneratesNoStackTraceWhenVerboseWarning (0 ms)
[ RUN      ] FunctionCallMessageTest.UninterestingCallOnNaggyMockGeneratesFyiWithStackTraceWhenVerboseInfo
[       OK ] FunctionCallMessageTest.UninterestingCallOnNaggyMockGeneratesFyiWithStackTraceWhenVerboseInfo (0 ms)
[ RUN      ] FunctionCallMessageTest.UninterestingCallOnNaggyMockPrintsArgumentsAndReturnValue
[       OK ] FunctionCallMessageTest.UninterestingCallOnNaggyMockPrintsArgumentsAndReturnValue (0 ms)
[----------] 3 tests from FunctionCallMessageTest (0 ms total)

[----------] 4 tests from GMockVerboseFlagTest
[ RUN      ] GMockVerboseFlagTest.Info

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2085: EXPECT_CALL(a, DoA(5)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2086: EXPECT_CALL(a, Binary(_, 1)) invoked
Stack trace:
[       OK ] GMockVerboseFlagTest.Info (1 ms)
[ RUN      ] GMockVerboseFlagTest.Warning
[       OK ] GMockVerboseFlagTest.Warning (0 ms)
[ RUN      ] GMockVerboseFlagTest.Error
[       OK ] GMockVerboseFlagTest.Error (0 ms)
[ RUN      ] GMockVerboseFlagTest.InvalidFlagIsTreatedAsWarning
[       OK ] GMockVerboseFlagTest.InvalidFlagIsTreatedAsWarning (1 ms)
[----------] 4 tests from GMockVerboseFlagTest (2 ms total)

[----------] 3 tests from GMockLogTest
[ RUN      ] GMockLogTest.DoesNotPrintGoodCallInternallyIfVerbosityIsWarning
[       OK ] GMockLogTest.DoesNotPrintGoodCallInternallyIfVerbosityIsWarning (0 ms)
[ RUN      ] GMockLogTest.DoesNotPrintGoodCallInternallyIfVerbosityIsError
[       OK ] GMockLogTest.DoesNotPrintGoodCallInternallyIfVerbosityIsError (0 ms)
[ RUN      ] GMockLogTest.DoesNotPrintWarningInternallyIfVerbosityIsError
[       OK ] GMockLogTest.DoesNotPrintWarningInternallyIfVerbosityIsError (0 ms)
[----------] 3 tests from GMockLogTest (0 ms total)

[----------] 6 tests from AllowLeakTest
[ RUN      ] AllowLeakTest.AllowsLeakingUnusedMockObject
[       OK ] AllowLeakTest.AllowsLeakingUnusedMockObject (0 ms)
[ RUN      ] AllowLeakTest.CanBeCalledBeforeOnCall

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2240: ON_CALL(*a, DoA(_)) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2240:
    Function call: DoA(0)
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] AllowLeakTest.CanBeCalledBeforeOnCall (0 ms)
[ RUN      ] AllowLeakTest.CanBeCalledAfterOnCall

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2246: ON_CALL(*a, DoA(_)) invoked
Stack trace:
[       OK ] AllowLeakTest.CanBeCalledAfterOnCall (0 ms)
[ RUN      ] AllowLeakTest.CanBeCalledBeforeExpectCall

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2253: EXPECT_CALL(*a, DoA(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2253: Mock function call matches EXPECT_CALL(*a, DoA(_))...
    Function call: DoA(0)
Stack trace:
[       OK ] AllowLeakTest.CanBeCalledBeforeExpectCall (0 ms)
[ RUN      ] AllowLeakTest.CanBeCalledAfterExpectCall

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2259: EXPECT_CALL(*a, DoA(_)) invoked
Stack trace:
[       OK ] AllowLeakTest.CanBeCalledAfterExpectCall (0 ms)
[ RUN      ] AllowLeakTest.WorksWhenBothOnCallAndExpectCallArePresent

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2265: ON_CALL(*a, DoA(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2266: EXPECT_CALL(*a, DoA(_)) invoked
Stack trace:
[       OK ] AllowLeakTest.WorksWhenBothOnCallAndExpectCallArePresent (0 ms)
[----------] 6 tests from AllowLeakTest (0 ms total)

[----------] 6 tests from VerifyAndClearExpectationsTest
[ RUN      ] VerifyAndClearExpectationsTest.NoMethodHasExpectations

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.NoMethodHasExpectations (0 ms)
[ RUN      ] VerifyAndClearExpectationsTest.SomeMethodsHaveExpectationsAndSucceed

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2287: EXPECT_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2287: Mock function call matches EXPECT_CALL(b, DoB())...
    Function call: DoB()
          Returns: 1
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.SomeMethodsHaveExpectationsAndSucceed (0 ms)
[ RUN      ] VerifyAndClearExpectationsTest.SomeMethodsHaveExpectationsAndFail

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2303: EXPECT_CALL(b, DoB()) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.SomeMethodsHaveExpectationsAndFail (0 ms)
[ RUN      ] VerifyAndClearExpectationsTest.AllMethodsHaveExpectations

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2320: EXPECT_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2322: EXPECT_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2320: Mock function call matches EXPECT_CALL(b, DoB())...
    Function call: DoB()
          Returns: 1
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2322: Mock function call matches EXPECT_CALL(b, DoB(_))...
    Function call: DoB(1)
          Returns: 2
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.AllMethodsHaveExpectations (0 ms)
[ RUN      ] VerifyAndClearExpectationsTest.AMethodHasManyExpectations

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2338: EXPECT_CALL(b, DoB(0)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2340: EXPECT_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2340: Mock function call matches EXPECT_CALL(b, DoB(_))...
    Function call: DoB(1)
          Returns: 2
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.AMethodHasManyExpectations (0 ms)
[ RUN      ] VerifyAndClearExpectationsTest.CanCallManyTimes

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2358: EXPECT_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2358: Mock function call matches EXPECT_CALL(b, DoB())...
    Function call: DoB()
          Returns: 0
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2362: EXPECT_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2362: Mock function call matches EXPECT_CALL(b, DoB(_))...
    Function call: DoB(1)
          Returns: 1
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.CanCallManyTimes (0 ms)
[----------] 6 tests from VerifyAndClearExpectationsTest (0 ms total)

[----------] 12 tests from VerifyAndClearTest
[ RUN      ] VerifyAndClearTest.NoMethodHasDefaultActions

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.NoMethodHasDefaultActions (0 ms)
[ RUN      ] VerifyAndClearTest.SomeMethodsHaveDefaultActions

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2387: ON_CALL(b, DoB()) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.SomeMethodsHaveDefaultActions (0 ms)
[ RUN      ] VerifyAndClearTest.AllMethodsHaveDefaultActions

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2400: ON_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2402: ON_CALL(b, DoB(_)) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(0)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.AllMethodsHaveDefaultActions (0 ms)
[ RUN      ] VerifyAndClearTest.AMethodHasManyDefaultActions

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2418: ON_CALL(b, DoB(0)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2420: ON_CALL(b, DoB(_)) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(0)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.AMethodHasManyDefaultActions (0 ms)
[ RUN      ] VerifyAndClearTest.CanCallManyTimes

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2435: ON_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2440: ON_CALL(b, DoB(_)) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.CanCallManyTimes (0 ms)
[ RUN      ] VerifyAndClearTest.Success

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2451: ON_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2453: EXPECT_CALL(b, DoB(1)) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2451:
    Function call: DoB()
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2453: Mock function call matches EXPECT_CALL(b, DoB(1))...
    Function call: DoB(1)
          Returns: 2
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.Success (0 ms)
[ RUN      ] VerifyAndClearTest.Failure

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2469: ON_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2471: EXPECT_CALL(b, DoB()) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2469:
    Function call: DoB(1)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.Failure (0 ms)
[ RUN      ] VerifyAndClearTest.Const

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2490: ON_CALL(Const(b), DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2493: EXPECT_CALL(Const(b), DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2493: Mock function call matches EXPECT_CALL(Const(b), DoB())...
    Function call: DoB()
          Returns: 1
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2493: Mock function call matches EXPECT_CALL(Const(b), DoB())...
    Function call: DoB()
          Returns: 2
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.Const (0 ms)
[ RUN      ] VerifyAndClearTest.CanSetDefaultActionsAndExpectationsAfterwards

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2511: ON_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2513: EXPECT_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2513: Mock function call matches EXPECT_CALL(b, DoB(_))...
    Function call: DoB(1)
          Returns: 2
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2519: EXPECT_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2521: ON_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2519: Mock function call matches EXPECT_CALL(b, DoB())...
    Function call: DoB()
          Returns: 3
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2521:
    Function call: DoB(1)
          Returns: 4
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.CanSetDefaultActionsAndExpectationsAfterwards (0 ms)
[ RUN      ] VerifyAndClearTest.DoesNotAffectOtherMockObjects

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2535: ON_CALL(a, Binary(_, _)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2537: EXPECT_CALL(a, Binary(_, _)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2541: ON_CALL(b1, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2543: EXPECT_CALL(b1, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2546: ON_CALL(b2, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2548: EXPECT_CALL(b2, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2548: Mock function call matches EXPECT_CALL(b2, DoB(_))...
    Function call: DoB(0)
          Returns: 0
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2537: Mock function call matches EXPECT_CALL(a, Binary(_, _))...
    Function call: Binary(0, 0)
          Returns: true
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2537: Mock function call matches EXPECT_CALL(a, Binary(_, _))...
    Function call: Binary(0, 0)
          Returns: false
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2541:
    Function call: DoB()
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2543: Mock function call matches EXPECT_CALL(b1, DoB(_))...
    Function call: DoB(0)
          Returns: 2
Stack trace:
[       OK ] VerifyAndClearTest.DoesNotAffectOtherMockObjects (0 ms)
[ RUN      ] VerifyAndClearTest.DestroyingChainedMocksDoesNotDeadlockThroughExpectations

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2568: EXPECT_CALL(test_mock, AcceptReference(_)) invoked
Stack trace:
[       OK ] VerifyAndClearTest.DestroyingChainedMocksDoesNotDeadlockThroughExpectations (0 ms)
[ RUN      ] VerifyAndClearTest.DestroyingChainedMocksDoesNotDeadlockThroughDefaultAction

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2588: ON_CALL(test_mock, AcceptReference(_)) invoked
Stack trace:
[       OK ] VerifyAndClearTest.DestroyingChainedMocksDoesNotDeadlockThroughDefaultAction (1 ms)
[----------] 12 tests from VerifyAndClearTest (1 ms total)

[----------] 1 test from SynchronizationTest
[ RUN      ] SynchronizationTest.CanCallMockMethodInAction

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2610: ON_CALL(a, DoA(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2613: EXPECT_CALL(a, DoA(1)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2614: EXPECT_CALL(a, DoA(1)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2617: EXPECT_CALL(c, NonVoidMethod()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2617: Mock function call matches EXPECT_CALL(c, NonVoidMethod())...
    Function call: NonVoidMethod()
          Returns: 0
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2613: Mock function call matches EXPECT_CALL(a, DoA(1))...
    Function call: DoA(1)
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2614: Mock function call matches EXPECT_CALL(a, DoA(1))...
    Function call: DoA(1)
Stack trace:
[       OK ] SynchronizationTest.CanCallMockMethodInAction (0 ms)
[----------] 1 test from SynchronizationTest (0 ms total)

[----------] Global test environment tear-down
[==========] 132 tests from 25 test cases ran. (118 ms total)
[  PASSED  ] 132 tests.
<end of output>
Test time =   0.12 sec
----------------------------------------------------------
Test Passed.
"gmock-spec-builders_test" end time: Feb 23 18:43 PST
"gmock-spec-builders_test" time elapsed: 00:00:00
----------------------------------------------------------

14/60 Testing: gmock_link_test
14/60 Test: gmock_link_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock_link_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock_link_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gmock_main.cc
[==========] Running 92 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 46 tests from LinkTest1
[ RUN      ] LinkTest1.TestReturnVoid
[       OK ] LinkTest1.TestReturnVoid (0 ms)
[ RUN      ] LinkTest1.TestReturn
[       OK ] LinkTest1.TestReturn (0 ms)
[ RUN      ] LinkTest1.TestReturnNull
[       OK ] LinkTest1.TestReturnNull (0 ms)
[ RUN      ] LinkTest1.TestReturnRef
[       OK ] LinkTest1.TestReturnRef (0 ms)
[ RUN      ] LinkTest1.TestAssign
[       OK ] LinkTest1.TestAssign (0 ms)
[ RUN      ] LinkTest1.TestSetArgPointee
[       OK ] LinkTest1.TestSetArgPointee (0 ms)
[ RUN      ] LinkTest1.TestSetArrayArgument
[       OK ] LinkTest1.TestSetArrayArgument (0 ms)
[ RUN      ] LinkTest1.TestSetErrnoAndReturn
[       OK ] LinkTest1.TestSetErrnoAndReturn (0 ms)
[ RUN      ] LinkTest1.TestInvoke
[       OK ] LinkTest1.TestInvoke (0 ms)
[ RUN      ] LinkTest1.TestInvokeWithoutArgs
[       OK ] LinkTest1.TestInvokeWithoutArgs (0 ms)
[ RUN      ] LinkTest1.TestInvokeArgument
[       OK ] LinkTest1.TestInvokeArgument (0 ms)
[ RUN      ] LinkTest1.TestWithArg
[       OK ] LinkTest1.TestWithArg (0 ms)
[ RUN      ] LinkTest1.TestWithArgs
[       OK ] LinkTest1.TestWithArgs (0 ms)
[ RUN      ] LinkTest1.TestWithoutArgs
[       OK ] LinkTest1.TestWithoutArgs (0 ms)
[ RUN      ] LinkTest1.TestDoAll
[       OK ] LinkTest1.TestDoAll (0 ms)
[ RUN      ] LinkTest1.TestDoDefault
[       OK ] LinkTest1.TestDoDefault (0 ms)
[ RUN      ] LinkTest1.TestIgnoreResult
[       OK ] LinkTest1.TestIgnoreResult (0 ms)
[ RUN      ] LinkTest1.TestThrow
[       OK ] LinkTest1.TestThrow (0 ms)
[ RUN      ] LinkTest1.TestActionMacro
[       OK ] LinkTest1.TestActionMacro (0 ms)
[ RUN      ] LinkTest1.TestActionPMacro
[       OK ] LinkTest1.TestActionPMacro (0 ms)
[ RUN      ] LinkTest1.TestActionP2Macro
[       OK ] LinkTest1.TestActionP2Macro (0 ms)
[ RUN      ] LinkTest1.TestMatcherAnything
[       OK ] LinkTest1.TestMatcherAnything (0 ms)
[ RUN      ] LinkTest1.TestMatcherA
[       OK ] LinkTest1.TestMatcherA (0 ms)
[ RUN      ] LinkTest1.TestMatchersEq
[       OK ] LinkTest1.TestMatchersEq (0 ms)
[ RUN      ] LinkTest1.TestMatchersRelations
[       OK ] LinkTest1.TestMatchersRelations (0 ms)
[ RUN      ] LinkTest1.TestMatcherNotNull
[       OK ] LinkTest1.TestMatcherNotNull (0 ms)
[ RUN      ] LinkTest1.TestMatcherIsNull
[       OK ] LinkTest1.TestMatcherIsNull (0 ms)
[ RUN      ] LinkTest1.TestMatcherRef
[       OK ] LinkTest1.TestMatcherRef (0 ms)
[ RUN      ] LinkTest1.TestMatcherTypedEq
[       OK ] LinkTest1.TestMatcherTypedEq (0 ms)
[ RUN      ] LinkTest1.TestMatchersFloatingPoint
[       OK ] LinkTest1.TestMatchersFloatingPoint (0 ms)
[ RUN      ] LinkTest1.TestMatcherContainsRegex
[       OK ] LinkTest1.TestMatcherContainsRegex (0 ms)
[ RUN      ] LinkTest1.TestMatcherMatchesRegex
[       OK ] LinkTest1.TestMatcherMatchesRegex (0 ms)
[ RUN      ] LinkTest1.TestMatchersSubstrings
[       OK ] LinkTest1.TestMatchersSubstrings (0 ms)
[ RUN      ] LinkTest1.TestMatchersStringEquality
[       OK ] LinkTest1.TestMatchersStringEquality (1 ms)
[ RUN      ] LinkTest1.TestMatcherElementsAre
[       OK ] LinkTest1.TestMatcherElementsAre (0 ms)
[ RUN      ] LinkTest1.TestMatcherElementsAreArray
[       OK ] LinkTest1.TestMatcherElementsAreArray (0 ms)
[ RUN      ] LinkTest1.TestMatcherContainerEq
[       OK ] LinkTest1.TestMatcherContainerEq (0 ms)
[ RUN      ] LinkTest1.TestMatcherField
[       OK ] LinkTest1.TestMatcherField (0 ms)
[ RUN      ] LinkTest1.TestMatcherProperty
[       OK ] LinkTest1.TestMatcherProperty (0 ms)
[ RUN      ] LinkTest1.TestMatcherResultOf
[       OK ] LinkTest1.TestMatcherResultOf (0 ms)
[ RUN      ] LinkTest1.TestMatcherPointee
[       OK ] LinkTest1.TestMatcherPointee (0 ms)
[ RUN      ] LinkTest1.TestMatcherTruly
[       OK ] LinkTest1.TestMatcherTruly (0 ms)
[ RUN      ] LinkTest1.TestMatcherAllOf
[       OK ] LinkTest1.TestMatcherAllOf (0 ms)
[ RUN      ] LinkTest1.TestMatcherAnyOf
[       OK ] LinkTest1.TestMatcherAnyOf (0 ms)
[ RUN      ] LinkTest1.TestMatcherNot
[       OK ] LinkTest1.TestMatcherNot (0 ms)
[ RUN      ] LinkTest1.TestMatcherCast
[       OK ] LinkTest1.TestMatcherCast (0 ms)
[----------] 46 tests from LinkTest1 (2 ms total)

[----------] 46 tests from LinkTest2
[ RUN      ] LinkTest2.TestReturnVoid
[       OK ] LinkTest2.TestReturnVoid (0 ms)
[ RUN      ] LinkTest2.TestReturn
[       OK ] LinkTest2.TestReturn (0 ms)
[ RUN      ] LinkTest2.TestReturnNull
[       OK ] LinkTest2.TestReturnNull (0 ms)
[ RUN      ] LinkTest2.TestReturnRef
[       OK ] LinkTest2.TestReturnRef (0 ms)
[ RUN      ] LinkTest2.TestAssign
[       OK ] LinkTest2.TestAssign (0 ms)
[ RUN      ] LinkTest2.TestSetArgPointee
[       OK ] LinkTest2.TestSetArgPointee (0 ms)
[ RUN      ] LinkTest2.TestSetArrayArgument
[       OK ] LinkTest2.TestSetArrayArgument (0 ms)
[ RUN      ] LinkTest2.TestSetErrnoAndReturn
[       OK ] LinkTest2.TestSetErrnoAndReturn (0 ms)
[ RUN      ] LinkTest2.TestInvoke
[       OK ] LinkTest2.TestInvoke (0 ms)
[ RUN      ] LinkTest2.TestInvokeWithoutArgs
[       OK ] LinkTest2.TestInvokeWithoutArgs (0 ms)
[ RUN      ] LinkTest2.TestInvokeArgument
[       OK ] LinkTest2.TestInvokeArgument (0 ms)
[ RUN      ] LinkTest2.TestWithArg
[       OK ] LinkTest2.TestWithArg (0 ms)
[ RUN      ] LinkTest2.TestWithArgs
[       OK ] LinkTest2.TestWithArgs (0 ms)
[ RUN      ] LinkTest2.TestWithoutArgs
[       OK ] LinkTest2.TestWithoutArgs (0 ms)
[ RUN      ] LinkTest2.TestDoAll
[       OK ] LinkTest2.TestDoAll (0 ms)
[ RUN      ] LinkTest2.TestDoDefault
[       OK ] LinkTest2.TestDoDefault (0 ms)
[ RUN      ] LinkTest2.TestIgnoreResult
[       OK ] LinkTest2.TestIgnoreResult (0 ms)
[ RUN      ] LinkTest2.TestThrow
[       OK ] LinkTest2.TestThrow (0 ms)
[ RUN      ] LinkTest2.TestActionMacro
[       OK ] LinkTest2.TestActionMacro (0 ms)
[ RUN      ] LinkTest2.TestActionPMacro
[       OK ] LinkTest2.TestActionPMacro (0 ms)
[ RUN      ] LinkTest2.TestActionP2Macro
[       OK ] LinkTest2.TestActionP2Macro (0 ms)
[ RUN      ] LinkTest2.TestMatcherAnything
[       OK ] LinkTest2.TestMatcherAnything (0 ms)
[ RUN      ] LinkTest2.TestMatcherA
[       OK ] LinkTest2.TestMatcherA (0 ms)
[ RUN      ] LinkTest2.TestMatchersEq
[       OK ] LinkTest2.TestMatchersEq (0 ms)
[ RUN      ] LinkTest2.TestMatchersRelations
[       OK ] LinkTest2.TestMatchersRelations (1 ms)
[ RUN      ] LinkTest2.TestMatcherNotNull
[       OK ] LinkTest2.TestMatcherNotNull (0 ms)
[ RUN      ] LinkTest2.TestMatcherIsNull
[       OK ] LinkTest2.TestMatcherIsNull (0 ms)
[ RUN      ] LinkTest2.TestMatcherRef
[       OK ] LinkTest2.TestMatcherRef (0 ms)
[ RUN      ] LinkTest2.TestMatcherTypedEq
[       OK ] LinkTest2.TestMatcherTypedEq (0 ms)
[ RUN      ] LinkTest2.TestMatchersFloatingPoint
[       OK ] LinkTest2.TestMatchersFloatingPoint (0 ms)
[ RUN      ] LinkTest2.TestMatcherContainsRegex
[       OK ] LinkTest2.TestMatcherContainsRegex (0 ms)
[ RUN      ] LinkTest2.TestMatcherMatchesRegex
[       OK ] LinkTest2.TestMatcherMatchesRegex (0 ms)
[ RUN      ] LinkTest2.TestMatchersSubstrings
[       OK ] LinkTest2.TestMatchersSubstrings (0 ms)
[ RUN      ] LinkTest2.TestMatchersStringEquality
[       OK ] LinkTest2.TestMatchersStringEquality (0 ms)
[ RUN      ] LinkTest2.TestMatcherElementsAre
[       OK ] LinkTest2.TestMatcherElementsAre (0 ms)
[ RUN      ] LinkTest2.TestMatcherElementsAreArray
[       OK ] LinkTest2.TestMatcherElementsAreArray (0 ms)
[ RUN      ] LinkTest2.TestMatcherContainerEq
[       OK ] LinkTest2.TestMatcherContainerEq (0 ms)
[ RUN      ] LinkTest2.TestMatcherField
[       OK ] LinkTest2.TestMatcherField (0 ms)
[ RUN      ] LinkTest2.TestMatcherProperty
[       OK ] LinkTest2.TestMatcherProperty (0 ms)
[ RUN      ] LinkTest2.TestMatcherResultOf
[       OK ] LinkTest2.TestMatcherResultOf (0 ms)
[ RUN      ] LinkTest2.TestMatcherPointee
[       OK ] LinkTest2.TestMatcherPointee (0 ms)
[ RUN      ] LinkTest2.TestMatcherTruly
[       OK ] LinkTest2.TestMatcherTruly (0 ms)
[ RUN      ] LinkTest2.TestMatcherAllOf
[       OK ] LinkTest2.TestMatcherAllOf (0 ms)
[ RUN      ] LinkTest2.TestMatcherAnyOf
[       OK ] LinkTest2.TestMatcherAnyOf (0 ms)
[ RUN      ] LinkTest2.TestMatcherNot
[       OK ] LinkTest2.TestMatcherNot (0 ms)
[ RUN      ] LinkTest2.TestMatcherCast
[       OK ] LinkTest2.TestMatcherCast (0 ms)
[----------] 46 tests from LinkTest2 (1 ms total)

[----------] Global test environment tear-down
[==========] 92 tests from 2 test cases ran. (3 ms total)
[  PASSED  ] 92 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gmock_link_test" end time: Feb 23 18:43 PST
"gmock_link_test" time elapsed: 00:00:00
----------------------------------------------------------

15/60 Testing: gmock_test
15/60 Test: gmock_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gmock_main.cc
[==========] Running 11 tests from 3 test cases.
[----------] Global test environment set-up.
[----------] 5 tests from InitGoogleMockTest
[ RUN      ] InitGoogleMockTest.ParsesInvalidCommandLine
[       OK ] InitGoogleMockTest.ParsesInvalidCommandLine (0 ms)
[ RUN      ] InitGoogleMockTest.ParsesEmptyCommandLine
[       OK ] InitGoogleMockTest.ParsesEmptyCommandLine (0 ms)
[ RUN      ] InitGoogleMockTest.ParsesSingleFlag
[       OK ] InitGoogleMockTest.ParsesSingleFlag (0 ms)
[ RUN      ] InitGoogleMockTest.ParsesUnrecognizedFlag
[       OK ] InitGoogleMockTest.ParsesUnrecognizedFlag (0 ms)
[ RUN      ] InitGoogleMockTest.ParsesGoogleMockFlagAndUnrecognizedFlag
[       OK ] InitGoogleMockTest.ParsesGoogleMockFlagAndUnrecognizedFlag (0 ms)
[----------] 5 tests from InitGoogleMockTest (0 ms total)

[----------] 5 tests from WideInitGoogleMockTest
[ RUN      ] WideInitGoogleMockTest.ParsesInvalidCommandLine
[       OK ] WideInitGoogleMockTest.ParsesInvalidCommandLine (0 ms)
[ RUN      ] WideInitGoogleMockTest.ParsesEmptyCommandLine
[       OK ] WideInitGoogleMockTest.ParsesEmptyCommandLine (0 ms)
[ RUN      ] WideInitGoogleMockTest.ParsesSingleFlag
[       OK ] WideInitGoogleMockTest.ParsesSingleFlag (0 ms)
[ RUN      ] WideInitGoogleMockTest.ParsesUnrecognizedFlag
[       OK ] WideInitGoogleMockTest.ParsesUnrecognizedFlag (0 ms)
[ RUN      ] WideInitGoogleMockTest.ParsesGoogleMockFlagAndUnrecognizedFlag
[       OK ] WideInitGoogleMockTest.ParsesGoogleMockFlagAndUnrecognizedFlag (0 ms)
[----------] 5 tests from WideInitGoogleMockTest (0 ms total)

[----------] 1 test from FlagTest
[ RUN      ] FlagTest.IsAccessibleInCode
[       OK ] FlagTest.IsAccessibleInCode (0 ms)
[----------] 1 test from FlagTest (0 ms total)

[----------] Global test environment tear-down
[==========] 11 tests from 3 test cases ran. (0 ms total)
[  PASSED  ] 11 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gmock_test" end time: Feb 23 18:43 PST
"gmock_test" time elapsed: 00:00:00
----------------------------------------------------------

16/60 Testing: gmock_stress_test
16/60 Test: gmock_stress_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock_stress_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock_stress_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from StressTest
[ RUN      ] StressTest.CanUseGMockWithThreads

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #0 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #1 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #2 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #3 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #4 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #5 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #6 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #7 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #8 running . . .
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called once - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #9 running . . .

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #10 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #11 running . . .
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 3 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #12 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #13 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #14 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #15 running . . .

GMOCK WARNING:

[  INFO ]Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
 /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #16 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #17 running . . .
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 4 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 3 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #18 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 6 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
19 running . . .


GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 6 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #20 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #21 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #22 running . . .
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 7 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #23 running . . .

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 8 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #24 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #25 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #26 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #27 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #28 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #29 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #30 running . . .

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 9 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 10 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #31 running . . .

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called once - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 11 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:
GMOCK WARNING:
: Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Thread #32 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #33 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #34 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #35 running . . .

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #36 running . . .
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called once - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 12 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called twice - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 3 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #37 running . . .
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called twice - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #38 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #39 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #40 running . . .

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 3 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #41 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #42 running . . .
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called once - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #43 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #44 running . . .
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called twice - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #45 running . . .

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #46 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #47 running . . .

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 3 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #48 running . . .

[  INFO ] /home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:294:: Thread #49 running . . .

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 4 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 4 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called once - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 13 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 5 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 14 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 5 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called once - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 3 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 15 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 3 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 6 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called twice - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 6 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 3 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 6 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 6 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 17 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 6 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 7 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called once - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 4 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 7 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called twice - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called twice - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called twice - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 8 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called twice - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 7 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 8 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 3 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 17 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 18 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called twice - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 5 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 3 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 4 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 9 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 4 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 5 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 6 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 7 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 8 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 9 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 10 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 11 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 12 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 13 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 14 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 15 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 16 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 17 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 18 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 19 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 20 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 21 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 22 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 23 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 24 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 25 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 26 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 27 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 28 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 29 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 30 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 31 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 32 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 33 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 34 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 35 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 36 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 37 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 38 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 39 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 40 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 41 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 42 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 43 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 44 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 45 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 46 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 47 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 48 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 49 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 50 times - saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0831ffaea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0831ffaea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0831ffaea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0831ffae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 4 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 9 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 9 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 5 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 20 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 20 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 10 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 9 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called twice - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 4 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 11 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 6 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 21 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 5 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called twice - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 7 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 11 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 5 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 7 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 7 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 11 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 5 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 8 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 3 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 11 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 13 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 22 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 9 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 11 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 12 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 9 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 13 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 6 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 7 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 10 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 8 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 13 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 5 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 6 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 14 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 15 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 10 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 23 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 6 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 6 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 7 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 15 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 12 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 7 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 13 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 16 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 16 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 10 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 11 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 25 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 25 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 16 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 8 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 9 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 10 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 12 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 10 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 14 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 10 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 11 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 12 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 13 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 14 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 15 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 16 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 17 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 18 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 19 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 20 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 21 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 22 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 23 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 24 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 25 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 26 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 27 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 28 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 29 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 30 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 31 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 32 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 33 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 34 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 35 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 36 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 37 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 38 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 39 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 40 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 41 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 42 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 43 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 44 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 45 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 46 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 47 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 48 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 49 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 17 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 8 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 15 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 13 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 26 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 12 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 13 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 18 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 9 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 18 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 12 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 18 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 27 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 10 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 19 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 20 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 21 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 22 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 23 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 24 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 25 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 26 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 27 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 28 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 29 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 30 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 31 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 32 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 33 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 34 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 35 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 36 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 37 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 38 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 39 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 40 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 41 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 42 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 43 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 44 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 45 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 46 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 47 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 48 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 49 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 50 times - saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08b97f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08b97f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 28 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 14 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 19 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 11 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 14 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 29 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 13 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 14 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 14 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 16 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 14 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 16 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 17 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 20 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 21 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 15 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 31 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 17 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 31 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 16 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 12 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 17 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 13 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 18 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08327fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 17 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 14 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 23 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 15 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 15 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 18 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 19 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 23 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 17 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 19 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 17 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 18 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 16 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 20 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 33 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 34 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08b97f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 21 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 17 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 34 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 19 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 21 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 25 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 22 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 22 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 35 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 23 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 24 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 22 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 25 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 19 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 25 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 19 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 26 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 18 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 26 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08b97f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 20 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 23 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08327fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 20 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 37 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 37 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08327fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 19 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 21 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08b97f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 27 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 25 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 25 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 27 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 28 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 38 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 28 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 22 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 21 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 39 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 29 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 29 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 20 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 26 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08327fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a1ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a1ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: Failure
Actual function call count doesn't match EXPECT_CALL(foo, Baz(_, "c"))...
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 23 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 27 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 30 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 23 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 21 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 23 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 22 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08b97f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 41 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 30 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 41 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 25 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 31 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 32 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 23 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08327fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08b97f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 25 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 31 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 29 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 24 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 29 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 25 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 33 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 30 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 42 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 33 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 33 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 25 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 34 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 25 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 43 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 35 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 26 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 27 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 36 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 26 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 44 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 32 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 27 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 32 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 35 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 28 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 45 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08b97f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 33 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 34 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 35 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 29 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 29 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 35 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 37 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 38 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 36 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 36 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 26 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 31 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 27 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 31 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 39 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08b97f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 32 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 30 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 41 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 47 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 30 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 48 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 48 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 49 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 38 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 39 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 33 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 39 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 32 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 37 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 32 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 33 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 29 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 34 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 41 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 42 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 40 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 35 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active

Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 35 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 36 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 30 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 38 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 35 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 44 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 41 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 37 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 44 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 39 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 36 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 37 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 38 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 40 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 31 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 31 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 38 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 39 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 39 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 42 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 41 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08b97f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 40 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 46 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 41 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 32 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 43 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 41 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 45 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 42 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 41 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08b97f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 45 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 47 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 33 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 48 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 47 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 46 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 34 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 49 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 42 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 50 times - saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 35 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 48 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 43 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 36 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 48 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 44 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 42 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 49 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 50 times - saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 44 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 45 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 43 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 38 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089f7f5c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089f7f5c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: Failure
Actual function call count doesn't match EXPECT_CALL(foo, Baz(_, "c"))...
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 44 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 45 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 46 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 47 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 48 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 49 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 50 times - saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0842ffcc40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0842ffcc30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 38 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 47 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 47 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 39 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 48 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 44 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 45 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 49 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0897ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0897ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: Failure
Actual function call count doesn't match EXPECT_CALL(foo, Baz(_, "c"))...
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 50 times - saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 46 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 41 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 42 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 47 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 48 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 49 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active

unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 50 times - saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 41 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 43 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 44 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 45 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 46 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 47 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 48 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 49 times - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 50 times - saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 51 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 52 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 53 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 54 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0871ffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0871ffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 55 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active

Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 56 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 57 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c0848c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c0848c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 58 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 59 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 60 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 61 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 62 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0830ff8ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0830ff8e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 63 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: Failure
Actual function call count doesn't match EXPECT_CALL(foo, Baz(_, "c"))...
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08957f9c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08957f9c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 65 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 64 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 66 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 67 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 68 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 69 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 70 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 71 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f089cff0c40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f089cff0c30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 72 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08a3ffeea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08a3ffee90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 73 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 74 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 75 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: Failure
Actual function call count doesn't match EXPECT_CALL(foo, Baz(_, "c"))...
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08737fdea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08737fde90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 76 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 77 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 78 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 79 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f088dffac40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 80 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f088dffac30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 81 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 82 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 83 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c1049ea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f0833ffec40 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c1049e90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f0833ffec30 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 84 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: Failure
Actual function call count doesn't match EXPECT_CALL(foo, Baz(_, "c"))...
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: Failure
Actual function call count doesn't match EXPECT_CALL(foo, Baz(_, "c"))...
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08c184aea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08c184ae90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: Failure
Actual function call count doesn't match EXPECT_CALL(foo, Baz(_, "c"))...
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08ba7fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 85 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08ba7fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: Failure
Actual function call count doesn't match EXPECT_CALL(foo, Baz(_, "c"))...
         Expected: to be called once
           Actual: never called - unsatisfied and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 86 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 87 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 88 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 89 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 90 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 91 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 92 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 93 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 94 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 95 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 96 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 97 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 98 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 99 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: Failure
Mock function called more times than expected - returning default value.
    Function call: Baz(0x4d2912 pointing to "a", @0x7f08227fbea0 "b")
          Returns: '\0'
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
unknown file: Failure

Unexpected mock function call - returning default value.
    Function call: Baz(0x4d291e pointing to "x", @0x7f08227fbe90 "y")
          Returns: '\0'
Google Mock tried the following 2 expectations, but none matched:

/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:204: tried expectation #0: EXPECT_CALL(foo, Baz(_, "b"))...
  Expected arg #1: is equal to "b"
           Actual: "y"
         Expected: to be called 50 times
           Actual: called 100 times - over-saturated and active
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: tried expectation #1: EXPECT_CALL(foo, Baz(_, "c"))...
  Expected arg #1: is equal to "c"
           Actual: "y"
         Expected: to be called once
           Actual: never called - unsatisfied and active

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:202:
    Function call: Bar(5)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
/home/kapil/630/a6/googletest/googlemock/test/gmock_stress_test.cc:207: Failure
Actual function call count doesn't match EXPECT_CALL(foo, Baz(_, "c"))...
         Expected: to be called once
           Actual: never called - unsatisfied and active
[  FAILED  ] StressTest.CanUseGMockWithThreads (92 ms)
[----------] 1 test from StressTest (92 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (92 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] StressTest.CanUseGMockWithThreads

 1 FAILED TEST

PASS
<end of output>
Test time =   0.09 sec
----------------------------------------------------------
Test Passed.
"gmock_stress_test" end time: Feb 23 18:43 PST
"gmock_stress_test" time elapsed: 00:00:00
----------------------------------------------------------

17/60 Testing: gmock_use_own_tuple_test
17/60 Test: gmock_use_own_tuple_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock_use_own_tuple_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock_use_own_tuple_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
[==========] Running 132 tests from 25 test cases.
[----------] Global test environment set-up.
[----------] 1 test from MockMethodTest
[ RUN      ] MockMethodTest.CanInstantiateWithIncompleteArgType
[       OK ] MockMethodTest.CanInstantiateWithIncompleteArgType (0 ms)
[----------] 1 test from MockMethodTest (0 ms total)

[----------] 8 tests from OnCallSyntaxTest
[ RUN      ] OnCallSyntaxTest.CompilesWithMethodNameExpandedFromMacro
[       OK ] OnCallSyntaxTest.CompilesWithMethodNameExpandedFromMacro (0 ms)
[ RUN      ] OnCallSyntaxTest.WorksWithMethodNameExpandedFromMacro

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:211:
    Function call: MethodW()
          Returns: 42
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
[       OK ] OnCallSyntaxTest.WorksWithMethodNameExpandedFromMacro (0 ms)
[ RUN      ] OnCallSyntaxTest.EvaluatesFirstArgumentOnce
[       OK ] OnCallSyntaxTest.EvaluatesFirstArgumentOnce (0 ms)
[ RUN      ] OnCallSyntaxTest.EvaluatesSecondArgumentOnce
[       OK ] OnCallSyntaxTest.EvaluatesSecondArgumentOnce (0 ms)
[ RUN      ] OnCallSyntaxTest.WithIsOptional
[       OK ] OnCallSyntaxTest.WithIsOptional (0 ms)
[ RUN      ] OnCallSyntaxTest.WithCanAppearAtMostOnce
[       OK ] OnCallSyntaxTest.WithCanAppearAtMostOnce (0 ms)
[ RUN      ] OnCallSyntaxTest.WillByDefaultIsMandatory
[       OK ] OnCallSyntaxTest.WillByDefaultIsMandatory (108 ms)
[ RUN      ] OnCallSyntaxTest.WillByDefaultCanAppearAtMostOnce
[       OK ] OnCallSyntaxTest.WillByDefaultCanAppearAtMostOnce (0 ms)
[----------] 8 tests from OnCallSyntaxTest (108 ms total)

[----------] 27 tests from ExpectCallSyntaxTest
[ RUN      ] ExpectCallSyntaxTest.CompilesWithMethodNameExpandedFromMacro
[       OK ] ExpectCallSyntaxTest.CompilesWithMethodNameExpandedFromMacro (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WorksWithMethodNameExpandedFromMacro
[       OK ] ExpectCallSyntaxTest.WorksWithMethodNameExpandedFromMacro (0 ms)
[ RUN      ] ExpectCallSyntaxTest.EvaluatesFirstArgumentOnce
[       OK ] ExpectCallSyntaxTest.EvaluatesFirstArgumentOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.EvaluatesSecondArgumentOnce
[       OK ] ExpectCallSyntaxTest.EvaluatesSecondArgumentOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WithIsOptional
[       OK ] ExpectCallSyntaxTest.WithIsOptional (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WithCanAppearAtMostOnce
[       OK ] ExpectCallSyntaxTest.WithCanAppearAtMostOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WithMustBeFirstClause
[       OK ] ExpectCallSyntaxTest.WithMustBeFirstClause (0 ms)
[ RUN      ] ExpectCallSyntaxTest.TimesCanBeInferred
[       OK ] ExpectCallSyntaxTest.TimesCanBeInferred (0 ms)
[ RUN      ] ExpectCallSyntaxTest.TimesCanAppearAtMostOnce
[       OK ] ExpectCallSyntaxTest.TimesCanAppearAtMostOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.TimesMustBeBeforeInSequence
[       OK ] ExpectCallSyntaxTest.TimesMustBeBeforeInSequence (0 ms)
[ RUN      ] ExpectCallSyntaxTest.InSequenceIsOptional
[       OK ] ExpectCallSyntaxTest.InSequenceIsOptional (0 ms)
[ RUN      ] ExpectCallSyntaxTest.InSequenceCanAppearMultipleTimes
[       OK ] ExpectCallSyntaxTest.InSequenceCanAppearMultipleTimes (0 ms)
[ RUN      ] ExpectCallSyntaxTest.InSequenceMustBeBeforeAfter
[       OK ] ExpectCallSyntaxTest.InSequenceMustBeBeforeAfter (0 ms)
[ RUN      ] ExpectCallSyntaxTest.InSequenceMustBeBeforeWillOnce
[       OK ] ExpectCallSyntaxTest.InSequenceMustBeBeforeWillOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.AfterMustBeBeforeWillOnce
[       OK ] ExpectCallSyntaxTest.AfterMustBeBeforeWillOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillIsOptional
[       OK ] ExpectCallSyntaxTest.WillIsOptional (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillCanAppearMultipleTimes
[       OK ] ExpectCallSyntaxTest.WillCanAppearMultipleTimes (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillMustBeBeforeWillRepeatedly
[       OK ] ExpectCallSyntaxTest.WillMustBeBeforeWillRepeatedly (1 ms)
[ RUN      ] ExpectCallSyntaxTest.WillRepeatedlyIsOptional
[       OK ] ExpectCallSyntaxTest.WillRepeatedlyIsOptional (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillRepeatedlyCannotAppearMultipleTimes
[       OK ] ExpectCallSyntaxTest.WillRepeatedlyCannotAppearMultipleTimes (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillRepeatedlyMustBeBeforeRetiresOnSaturation
[       OK ] ExpectCallSyntaxTest.WillRepeatedlyMustBeBeforeRetiresOnSaturation (0 ms)
[ RUN      ] ExpectCallSyntaxTest.RetiresOnSaturationIsOptional
[       OK ] ExpectCallSyntaxTest.RetiresOnSaturationIsOptional (0 ms)
[ RUN      ] ExpectCallSyntaxTest.RetiresOnSaturationCannotAppearMultipleTimes
[       OK ] ExpectCallSyntaxTest.RetiresOnSaturationCannotAppearMultipleTimes (0 ms)
[ RUN      ] ExpectCallSyntaxTest.DefaultCardinalityIsOnce
[       OK ] ExpectCallSyntaxTest.DefaultCardinalityIsOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.DoesNotWarnOnAdequateActionCount
[       OK ] ExpectCallSyntaxTest.DoesNotWarnOnAdequateActionCount (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WarnsOnTooManyActions
[       OK ] ExpectCallSyntaxTest.WarnsOnTooManyActions (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WarnsOnTooFewActions

GMOCK WARNING:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:679: Actions ran out in EXPECT_CALL(b, DoB())...
Called 2 times, but only 1 WillOnce() is specified - returning default value.
Stack trace:
[       OK ] ExpectCallSyntaxTest.WarnsOnTooFewActions (0 ms)
[----------] 27 tests from ExpectCallSyntaxTest (1 ms total)

[----------] 3 tests from OnCallTest
[ RUN      ] OnCallTest.TakesBuiltInDefaultActionWhenNoOnCall
[       OK ] OnCallTest.TakesBuiltInDefaultActionWhenNoOnCall (0 ms)
[ RUN      ] OnCallTest.TakesBuiltInDefaultActionWhenNoOnCallMatches
[       OK ] OnCallTest.TakesBuiltInDefaultActionWhenNoOnCallMatches (0 ms)
[ RUN      ] OnCallTest.PicksLastMatchingOnCall
[       OK ] OnCallTest.PicksLastMatchingOnCall (0 ms)
[----------] 3 tests from OnCallTest (0 ms total)

[----------] 8 tests from ExpectCallTest
[ RUN      ] ExpectCallTest.AllowsAnyCallWhenNoSpec

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(2)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
[       OK ] ExpectCallTest.AllowsAnyCallWhenNoSpec (0 ms)
[ RUN      ] ExpectCallTest.PicksLastMatchingExpectCall
[       OK ] ExpectCallTest.PicksLastMatchingExpectCall (0 ms)
[ RUN      ] ExpectCallTest.CatchesTooFewCalls
[       OK ] ExpectCallTest.CatchesTooFewCalls (0 ms)
[ RUN      ] ExpectCallTest.InfersCardinalityWhenThereIsNoWillRepeatedly
[       OK ] ExpectCallTest.InfersCardinalityWhenThereIsNoWillRepeatedly (1 ms)
[ RUN      ] ExpectCallTest.InfersCardinality1WhenThereIsWillRepeatedly
[       OK ] ExpectCallTest.InfersCardinality1WhenThereIsWillRepeatedly (0 ms)
[ RUN      ] ExpectCallTest.NthMatchTakesNthAction
[       OK ] ExpectCallTest.NthMatchTakesNthAction (0 ms)
[ RUN      ] ExpectCallTest.TakesRepeatedActionWhenWillListIsExhausted
[       OK ] ExpectCallTest.TakesRepeatedActionWhenWillListIsExhausted (0 ms)
[ RUN      ] ExpectCallTest.TakesDefaultActionWhenWillListIsExhausted
[       OK ] ExpectCallTest.TakesDefaultActionWhenWillListIsExhausted (0 ms)
[----------] 8 tests from ExpectCallTest (1 ms total)

[----------] 2 tests from FunctionMockerMessageTest
[ RUN      ] FunctionMockerMessageTest.ReportsExpectCallLocationForExhausedActions
[       OK ] FunctionMockerMessageTest.ReportsExpectCallLocationForExhausedActions (0 ms)
[ RUN      ] FunctionMockerMessageTest.ReportsDefaultActionLocationOfUninterestingCallsForNaggyMock
[       OK ] FunctionMockerMessageTest.ReportsDefaultActionLocationOfUninterestingCallsForNaggyMock (0 ms)
[----------] 2 tests from FunctionMockerMessageTest (0 ms total)

[----------] 1 test from UninterestingCallTest
[ RUN      ] UninterestingCallTest.DoesDefaultAction

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:931:
    Function call: Binary(1, 2)
          Returns: true
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
[       OK ] UninterestingCallTest.DoesDefaultAction (0 ms)
[----------] 1 test from UninterestingCallTest (0 ms total)

[----------] 6 tests from UnexpectedCallTest
[ RUN      ] UnexpectedCallTest.DoesDefaultAction
[       OK ] UnexpectedCallTest.DoesDefaultAction (0 ms)
[ RUN      ] UnexpectedCallTest.GeneratesFailureForVoidFunction
[       OK ] UnexpectedCallTest.GeneratesFailureForVoidFunction (1 ms)
[ RUN      ] UnexpectedCallTest.GeneartesFailureForNonVoidFunction
[       OK ] UnexpectedCallTest.GeneartesFailureForNonVoidFunction (0 ms)
[ RUN      ] UnexpectedCallTest.RetiredExpectation
[       OK ] UnexpectedCallTest.RetiredExpectation (0 ms)
[ RUN      ] UnexpectedCallTest.UnmatchedArguments
[       OK ] UnexpectedCallTest.UnmatchedArguments (0 ms)
[ RUN      ] UnexpectedCallTest.UnsatisifiedPrerequisites
[       OK ] UnexpectedCallTest.UnsatisifiedPrerequisites (0 ms)
[----------] 6 tests from UnexpectedCallTest (1 ms total)

[----------] 1 test from UndefinedReturnValueTest
[ RUN      ] UndefinedReturnValueTest.ReturnValueIsMandatoryWhenNotDefaultConstructible
[       OK ] UndefinedReturnValueTest.ReturnValueIsMandatoryWhenNotDefaultConstructible (0 ms)
[----------] 1 test from UndefinedReturnValueTest (0 ms total)

[----------] 3 tests from ExcessiveCallTest
[ RUN      ] ExcessiveCallTest.DoesDefaultAction
[       OK ] ExcessiveCallTest.DoesDefaultAction (0 ms)
[ RUN      ] ExcessiveCallTest.GeneratesFailureForVoidFunction
[       OK ] ExcessiveCallTest.GeneratesFailureForVoidFunction (1 ms)
[ RUN      ] ExcessiveCallTest.GeneratesFailureForNonVoidFunction
[       OK ] ExcessiveCallTest.GeneratesFailureForNonVoidFunction (0 ms)
[----------] 3 tests from ExcessiveCallTest (1 ms total)

[----------] 3 tests from InSequenceTest
[ RUN      ] InSequenceTest.AllExpectationInScopeAreInSequence
[       OK ] InSequenceTest.AllExpectationInScopeAreInSequence (0 ms)
[ RUN      ] InSequenceTest.NestedInSequence
[       OK ] InSequenceTest.NestedInSequence (0 ms)
[ RUN      ] InSequenceTest.ExpectationsOutOfScopeAreNotAffected
[       OK ] InSequenceTest.ExpectationsOutOfScopeAreNotAffected (0 ms)
[----------] 3 tests from InSequenceTest (0 ms total)

[----------] 4 tests from SequenceTest
[ RUN      ] SequenceTest.AnyOrderIsOkByDefault
[       OK ] SequenceTest.AnyOrderIsOkByDefault (0 ms)
[ RUN      ] SequenceTest.CallsMustBeInStrictOrderWhenSaidSo1
[       OK ] SequenceTest.CallsMustBeInStrictOrderWhenSaidSo1 (0 ms)
[ RUN      ] SequenceTest.CallsMustBeInStrictOrderWhenSaidSo2
[       OK ] SequenceTest.CallsMustBeInStrictOrderWhenSaidSo2 (0 ms)
[ RUN      ] SequenceTest.Retirement
[       OK ] SequenceTest.Retirement (0 ms)
[----------] 4 tests from SequenceTest (0 ms total)

[----------] 4 tests from PartialOrderTest
[ RUN      ] PartialOrderTest.CallsMustConformToSpecifiedDag1
[       OK ] PartialOrderTest.CallsMustConformToSpecifiedDag1 (0 ms)
[ RUN      ] PartialOrderTest.CallsMustConformToSpecifiedDag2
[       OK ] PartialOrderTest.CallsMustConformToSpecifiedDag2 (1 ms)
[ RUN      ] PartialOrderTest.CallsMustConformToSpecifiedDag3
[       OK ] PartialOrderTest.CallsMustConformToSpecifiedDag3 (0 ms)
[ RUN      ] PartialOrderTest.CallsMustConformToSpecifiedDag4
[       OK ] PartialOrderTest.CallsMustConformToSpecifiedDag4 (0 ms)
[----------] 4 tests from PartialOrderTest (1 ms total)

[----------] 2 tests from ExpectationTest
[ RUN      ] ExpectationTest.ConstrutorsWork
[       OK ] ExpectationTest.ConstrutorsWork (0 ms)
[ RUN      ] ExpectationTest.AssignmentWorks
[       OK ] ExpectationTest.AssignmentWorks (0 ms)
[----------] 2 tests from ExpectationTest (0 ms total)

[----------] 6 tests from ExpectationSetTest
[ RUN      ] ExpectationSetTest.MemberTypesAreCorrect
[       OK ] ExpectationSetTest.MemberTypesAreCorrect (0 ms)
[ RUN      ] ExpectationSetTest.ConstructorsWork
[       OK ] ExpectationSetTest.ConstructorsWork (0 ms)
[ RUN      ] ExpectationSetTest.AssignmentWorks
[       OK ] ExpectationSetTest.AssignmentWorks (0 ms)
[ RUN      ] ExpectationSetTest.InsertionWorks
[       OK ] ExpectationSetTest.InsertionWorks (0 ms)
[ RUN      ] ExpectationSetTest.SizeWorks
[       OK ] ExpectationSetTest.SizeWorks (0 ms)
[ RUN      ] ExpectationSetTest.IsEnumerable
[       OK ] ExpectationSetTest.IsEnumerable (0 ms)
[----------] 6 tests from ExpectationSetTest (0 ms total)

[----------] 11 tests from AfterTest
[ RUN      ] AfterTest.SucceedsWhenPartialOrderIsSatisfied
[       OK ] AfterTest.SucceedsWhenPartialOrderIsSatisfied (0 ms)
[ RUN      ] AfterTest.SucceedsWhenTotalOrderIsSatisfied
[       OK ] AfterTest.SucceedsWhenTotalOrderIsSatisfied (0 ms)
[ RUN      ] AfterTest.CallsMustBeInStrictOrderWhenSpecifiedSo1
[       OK ] AfterTest.CallsMustBeInStrictOrderWhenSpecifiedSo1 (0 ms)
[ RUN      ] AfterTest.CallsMustBeInStrictOrderWhenSpecifiedSo2
[       OK ] AfterTest.CallsMustBeInStrictOrderWhenSpecifiedSo2 (0 ms)
[ RUN      ] AfterTest.CallsMustSatisfyPartialOrderWhenSpecifiedSo
[       OK ] AfterTest.CallsMustSatisfyPartialOrderWhenSpecifiedSo (0 ms)
[ RUN      ] AfterTest.CallsMustSatisfyPartialOrderWhenSpecifiedSo2
[       OK ] AfterTest.CallsMustSatisfyPartialOrderWhenSpecifiedSo2 (0 ms)
[ RUN      ] AfterTest.CanBeUsedWithInSequence
[       OK ] AfterTest.CanBeUsedWithInSequence (0 ms)
[ RUN      ] AfterTest.CanBeCalledManyTimes
[       OK ] AfterTest.CanBeCalledManyTimes (0 ms)
[ RUN      ] AfterTest.AcceptsUpToFiveArguments
[       OK ] AfterTest.AcceptsUpToFiveArguments (0 ms)
[ RUN      ] AfterTest.AcceptsDuplicatedInput
[       OK ] AfterTest.AcceptsDuplicatedInput (0 ms)
[ RUN      ] AfterTest.ChangesToExpectationSetHaveNoEffectAfterwards
[       OK ] AfterTest.ChangesToExpectationSetHaveNoEffectAfterwards (0 ms)
[----------] 11 tests from AfterTest (1 ms total)

[----------] 6 tests from DeletingMockEarlyTest
[ RUN      ] DeletingMockEarlyTest.Success1
[       OK ] DeletingMockEarlyTest.Success1 (0 ms)
[ RUN      ] DeletingMockEarlyTest.Success2
[       OK ] DeletingMockEarlyTest.Success2 (0 ms)
[ RUN      ] DeletingMockEarlyTest.CanDeleteSelfInActionReturningVoid
[       OK ] DeletingMockEarlyTest.CanDeleteSelfInActionReturningVoid (0 ms)
[ RUN      ] DeletingMockEarlyTest.CanDeleteSelfInActionReturningValue
[       OK ] DeletingMockEarlyTest.CanDeleteSelfInActionReturningValue (0 ms)
[ RUN      ] DeletingMockEarlyTest.Failure1
[       OK ] DeletingMockEarlyTest.Failure1 (1 ms)
[ RUN      ] DeletingMockEarlyTest.Failure2
[       OK ] DeletingMockEarlyTest.Failure2 (0 ms)
[----------] 6 tests from DeletingMockEarlyTest (1 ms total)

[----------] 1 test from ExpectationBaseTest
[ RUN      ] ExpectationBaseTest.AllPrerequisitesAreSatisfiedWorksForNonMonotonicCardinality
[       OK ] ExpectationBaseTest.AllPrerequisitesAreSatisfiedWorksForNonMonotonicCardinality (0 ms)
[----------] 1 test from ExpectationBaseTest (0 ms total)

[----------] 3 tests from FunctionCallMessageTest
[ RUN      ] FunctionCallMessageTest.UninterestingCallOnNaggyMockGeneratesNoStackTraceWhenVerboseWarning
[       OK ] FunctionCallMessageTest.UninterestingCallOnNaggyMockGeneratesNoStackTraceWhenVerboseWarning (0 ms)
[ RUN      ] FunctionCallMessageTest.UninterestingCallOnNaggyMockGeneratesFyiWithStackTraceWhenVerboseInfo
[       OK ] FunctionCallMessageTest.UninterestingCallOnNaggyMockGeneratesFyiWithStackTraceWhenVerboseInfo (0 ms)
[ RUN      ] FunctionCallMessageTest.UninterestingCallOnNaggyMockPrintsArgumentsAndReturnValue
[       OK ] FunctionCallMessageTest.UninterestingCallOnNaggyMockPrintsArgumentsAndReturnValue (1 ms)
[----------] 3 tests from FunctionCallMessageTest (1 ms total)

[----------] 4 tests from GMockVerboseFlagTest
[ RUN      ] GMockVerboseFlagTest.Info

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2085: EXPECT_CALL(a, DoA(5)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2086: EXPECT_CALL(a, Binary(_, 1)) invoked
Stack trace:
[       OK ] GMockVerboseFlagTest.Info (0 ms)
[ RUN      ] GMockVerboseFlagTest.Warning
[       OK ] GMockVerboseFlagTest.Warning (0 ms)
[ RUN      ] GMockVerboseFlagTest.Error
[       OK ] GMockVerboseFlagTest.Error (1 ms)
[ RUN      ] GMockVerboseFlagTest.InvalidFlagIsTreatedAsWarning
[       OK ] GMockVerboseFlagTest.InvalidFlagIsTreatedAsWarning (0 ms)
[----------] 4 tests from GMockVerboseFlagTest (1 ms total)

[----------] 3 tests from GMockLogTest
[ RUN      ] GMockLogTest.DoesNotPrintGoodCallInternallyIfVerbosityIsWarning
[       OK ] GMockLogTest.DoesNotPrintGoodCallInternallyIfVerbosityIsWarning (0 ms)
[ RUN      ] GMockLogTest.DoesNotPrintGoodCallInternallyIfVerbosityIsError
[       OK ] GMockLogTest.DoesNotPrintGoodCallInternallyIfVerbosityIsError (0 ms)
[ RUN      ] GMockLogTest.DoesNotPrintWarningInternallyIfVerbosityIsError
[       OK ] GMockLogTest.DoesNotPrintWarningInternallyIfVerbosityIsError (0 ms)
[----------] 3 tests from GMockLogTest (0 ms total)

[----------] 6 tests from AllowLeakTest
[ RUN      ] AllowLeakTest.AllowsLeakingUnusedMockObject
[       OK ] AllowLeakTest.AllowsLeakingUnusedMockObject (0 ms)
[ RUN      ] AllowLeakTest.CanBeCalledBeforeOnCall

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2240: ON_CALL(*a, DoA(_)) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2240:
    Function call: DoA(0)
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] AllowLeakTest.CanBeCalledBeforeOnCall (0 ms)
[ RUN      ] AllowLeakTest.CanBeCalledAfterOnCall

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2246: ON_CALL(*a, DoA(_)) invoked
Stack trace:
[       OK ] AllowLeakTest.CanBeCalledAfterOnCall (0 ms)
[ RUN      ] AllowLeakTest.CanBeCalledBeforeExpectCall

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2253: EXPECT_CALL(*a, DoA(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2253: Mock function call matches EXPECT_CALL(*a, DoA(_))...
    Function call: DoA(0)
Stack trace:
[       OK ] AllowLeakTest.CanBeCalledBeforeExpectCall (0 ms)
[ RUN      ] AllowLeakTest.CanBeCalledAfterExpectCall

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2259: EXPECT_CALL(*a, DoA(_)) invoked
Stack trace:
[       OK ] AllowLeakTest.CanBeCalledAfterExpectCall (0 ms)
[ RUN      ] AllowLeakTest.WorksWhenBothOnCallAndExpectCallArePresent

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2265: ON_CALL(*a, DoA(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2266: EXPECT_CALL(*a, DoA(_)) invoked
Stack trace:
[       OK ] AllowLeakTest.WorksWhenBothOnCallAndExpectCallArePresent (0 ms)
[----------] 6 tests from AllowLeakTest (0 ms total)

[----------] 6 tests from VerifyAndClearExpectationsTest
[ RUN      ] VerifyAndClearExpectationsTest.NoMethodHasExpectations

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.NoMethodHasExpectations (0 ms)
[ RUN      ] VerifyAndClearExpectationsTest.SomeMethodsHaveExpectationsAndSucceed

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2287: EXPECT_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2287: Mock function call matches EXPECT_CALL(b, DoB())...
    Function call: DoB()
          Returns: 1
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.SomeMethodsHaveExpectationsAndSucceed (0 ms)
[ RUN      ] VerifyAndClearExpectationsTest.SomeMethodsHaveExpectationsAndFail

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2303: EXPECT_CALL(b, DoB()) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.SomeMethodsHaveExpectationsAndFail (0 ms)
[ RUN      ] VerifyAndClearExpectationsTest.AllMethodsHaveExpectations

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2320: EXPECT_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2322: EXPECT_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2320: Mock function call matches EXPECT_CALL(b, DoB())...
    Function call: DoB()
          Returns: 1
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2322: Mock function call matches EXPECT_CALL(b, DoB(_))...
    Function call: DoB(1)
          Returns: 2
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.AllMethodsHaveExpectations (0 ms)
[ RUN      ] VerifyAndClearExpectationsTest.AMethodHasManyExpectations

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2338: EXPECT_CALL(b, DoB(0)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2340: EXPECT_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2340: Mock function call matches EXPECT_CALL(b, DoB(_))...
    Function call: DoB(1)
          Returns: 2
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.AMethodHasManyExpectations (0 ms)
[ RUN      ] VerifyAndClearExpectationsTest.CanCallManyTimes

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2358: EXPECT_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2358: Mock function call matches EXPECT_CALL(b, DoB())...
    Function call: DoB()
          Returns: 0
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2362: EXPECT_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2362: Mock function call matches EXPECT_CALL(b, DoB(_))...
    Function call: DoB(1)
          Returns: 1
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.CanCallManyTimes (0 ms)
[----------] 6 tests from VerifyAndClearExpectationsTest (0 ms total)

[----------] 12 tests from VerifyAndClearTest
[ RUN      ] VerifyAndClearTest.NoMethodHasDefaultActions

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.NoMethodHasDefaultActions (0 ms)
[ RUN      ] VerifyAndClearTest.SomeMethodsHaveDefaultActions

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2387: ON_CALL(b, DoB()) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.SomeMethodsHaveDefaultActions (0 ms)
[ RUN      ] VerifyAndClearTest.AllMethodsHaveDefaultActions

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2400: ON_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2402: ON_CALL(b, DoB(_)) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(0)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.AllMethodsHaveDefaultActions (0 ms)
[ RUN      ] VerifyAndClearTest.AMethodHasManyDefaultActions

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2418: ON_CALL(b, DoB(0)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2420: ON_CALL(b, DoB(_)) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(0)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.AMethodHasManyDefaultActions (1 ms)
[ RUN      ] VerifyAndClearTest.CanCallManyTimes

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2435: ON_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2440: ON_CALL(b, DoB(_)) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.CanCallManyTimes (0 ms)
[ RUN      ] VerifyAndClearTest.Success

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2451: ON_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2453: EXPECT_CALL(b, DoB(1)) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2451:
    Function call: DoB()
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2453: Mock function call matches EXPECT_CALL(b, DoB(1))...
    Function call: DoB(1)
          Returns: 2
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.Success (0 ms)
[ RUN      ] VerifyAndClearTest.Failure

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2469: ON_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2471: EXPECT_CALL(b, DoB()) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2469:
    Function call: DoB(1)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.Failure (0 ms)
[ RUN      ] VerifyAndClearTest.Const

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2490: ON_CALL(Const(b), DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2493: EXPECT_CALL(Const(b), DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2493: Mock function call matches EXPECT_CALL(Const(b), DoB())...
    Function call: DoB()
          Returns: 1
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2493: Mock function call matches EXPECT_CALL(Const(b), DoB())...
    Function call: DoB()
          Returns: 2
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.Const (0 ms)
[ RUN      ] VerifyAndClearTest.CanSetDefaultActionsAndExpectationsAfterwards

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2511: ON_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2513: EXPECT_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2513: Mock function call matches EXPECT_CALL(b, DoB(_))...
    Function call: DoB(1)
          Returns: 2
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2519: EXPECT_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2521: ON_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2519: Mock function call matches EXPECT_CALL(b, DoB())...
    Function call: DoB()
          Returns: 3
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2521:
    Function call: DoB(1)
          Returns: 4
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.CanSetDefaultActionsAndExpectationsAfterwards (0 ms)
[ RUN      ] VerifyAndClearTest.DoesNotAffectOtherMockObjects

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2535: ON_CALL(a, Binary(_, _)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2537: EXPECT_CALL(a, Binary(_, _)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2541: ON_CALL(b1, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2543: EXPECT_CALL(b1, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2546: ON_CALL(b2, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2548: EXPECT_CALL(b2, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2548: Mock function call matches EXPECT_CALL(b2, DoB(_))...
    Function call: DoB(0)
          Returns: 0
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2537: Mock function call matches EXPECT_CALL(a, Binary(_, _))...
    Function call: Binary(0, 0)
          Returns: true
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2537: Mock function call matches EXPECT_CALL(a, Binary(_, _))...
    Function call: Binary(0, 0)
          Returns: false
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2541:
    Function call: DoB()
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2543: Mock function call matches EXPECT_CALL(b1, DoB(_))...
    Function call: DoB(0)
          Returns: 2
Stack trace:
[       OK ] VerifyAndClearTest.DoesNotAffectOtherMockObjects (0 ms)
[ RUN      ] VerifyAndClearTest.DestroyingChainedMocksDoesNotDeadlockThroughExpectations

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2568: EXPECT_CALL(test_mock, AcceptReference(_)) invoked
Stack trace:
[       OK ] VerifyAndClearTest.DestroyingChainedMocksDoesNotDeadlockThroughExpectations (0 ms)
[ RUN      ] VerifyAndClearTest.DestroyingChainedMocksDoesNotDeadlockThroughDefaultAction

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2588: ON_CALL(test_mock, AcceptReference(_)) invoked
Stack trace:
[       OK ] VerifyAndClearTest.DestroyingChainedMocksDoesNotDeadlockThroughDefaultAction (0 ms)
[----------] 12 tests from VerifyAndClearTest (1 ms total)

[----------] 1 test from SynchronizationTest
[ RUN      ] SynchronizationTest.CanCallMockMethodInAction

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2610: ON_CALL(a, DoA(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2613: EXPECT_CALL(a, DoA(1)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2614: EXPECT_CALL(a, DoA(1)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2617: EXPECT_CALL(c, NonVoidMethod()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2617: Mock function call matches EXPECT_CALL(c, NonVoidMethod())...
    Function call: NonVoidMethod()
          Returns: 0
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2613: Mock function call matches EXPECT_CALL(a, DoA(1))...
    Function call: DoA(1)
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2614: Mock function call matches EXPECT_CALL(a, DoA(1))...
    Function call: DoA(1)
Stack trace:
[       OK ] SynchronizationTest.CanCallMockMethodInAction (0 ms)
[----------] 1 test from SynchronizationTest (0 ms total)

[----------] Global test environment tear-down
[==========] 132 tests from 25 test cases ran. (118 ms total)
[  PASSED  ] 132 tests.
<end of output>
Test time =   0.12 sec
----------------------------------------------------------
Test Passed.
"gmock_use_own_tuple_test" end time: Feb 23 18:43 PST
"gmock_use_own_tuple_test" time elapsed: 00:00:00
----------------------------------------------------------

18/60 Testing: gmock-more-actions_no_exception_test
18/60 Test: gmock-more-actions_no_exception_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock-more-actions_no_exception_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock-more-actions_no_exception_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gmock_main.cc
[==========] Running 47 tests from 11 test cases.
[----------] Global test environment set-up.
[----------] 15 tests from InvokeTest
[ RUN      ] InvokeTest.Nullary
[       OK ] InvokeTest.Nullary (0 ms)
[ RUN      ] InvokeTest.Unary
[       OK ] InvokeTest.Unary (0 ms)
[ RUN      ] InvokeTest.Binary
[       OK ] InvokeTest.Binary (0 ms)
[ RUN      ] InvokeTest.Ternary
[       OK ] InvokeTest.Ternary (0 ms)
[ RUN      ] InvokeTest.FunctionThatTakes4Arguments
[       OK ] InvokeTest.FunctionThatTakes4Arguments (0 ms)
[ RUN      ] InvokeTest.FunctionThatTakes5Arguments
[       OK ] InvokeTest.FunctionThatTakes5Arguments (0 ms)
[ RUN      ] InvokeTest.FunctionThatTakes6Arguments
[       OK ] InvokeTest.FunctionThatTakes6Arguments (0 ms)
[ RUN      ] InvokeTest.FunctionThatTakes7Arguments
[       OK ] InvokeTest.FunctionThatTakes7Arguments (0 ms)
[ RUN      ] InvokeTest.FunctionThatTakes8Arguments
[       OK ] InvokeTest.FunctionThatTakes8Arguments (0 ms)
[ RUN      ] InvokeTest.FunctionThatTakes9Arguments
[       OK ] InvokeTest.FunctionThatTakes9Arguments (0 ms)
[ RUN      ] InvokeTest.FunctionThatTakes10Arguments
[       OK ] InvokeTest.FunctionThatTakes10Arguments (0 ms)
[ RUN      ] InvokeTest.FunctionWithUnusedParameters
[       OK ] InvokeTest.FunctionWithUnusedParameters (0 ms)
[ RUN      ] InvokeTest.MethodWithUnusedParameters
[       OK ] InvokeTest.MethodWithUnusedParameters (0 ms)
[ RUN      ] InvokeTest.Functor
[       OK ] InvokeTest.Functor (0 ms)
[ RUN      ] InvokeTest.FunctionWithCompatibleType
[       OK ] InvokeTest.FunctionWithCompatibleType (0 ms)
[----------] 15 tests from InvokeTest (1 ms total)

[----------] 12 tests from InvokeMethodTest
[ RUN      ] InvokeMethodTest.Nullary
[       OK ] InvokeMethodTest.Nullary (0 ms)
[ RUN      ] InvokeMethodTest.Unary
[       OK ] InvokeMethodTest.Unary (0 ms)
[ RUN      ] InvokeMethodTest.Binary
[       OK ] InvokeMethodTest.Binary (0 ms)
[ RUN      ] InvokeMethodTest.Ternary
[       OK ] InvokeMethodTest.Ternary (0 ms)
[ RUN      ] InvokeMethodTest.MethodThatTakes4Arguments
[       OK ] InvokeMethodTest.MethodThatTakes4Arguments (0 ms)
[ RUN      ] InvokeMethodTest.MethodThatTakes5Arguments
[       OK ] InvokeMethodTest.MethodThatTakes5Arguments (0 ms)
[ RUN      ] InvokeMethodTest.MethodThatTakes6Arguments
[       OK ] InvokeMethodTest.MethodThatTakes6Arguments (0 ms)
[ RUN      ] InvokeMethodTest.MethodThatTakes7Arguments
[       OK ] InvokeMethodTest.MethodThatTakes7Arguments (0 ms)
[ RUN      ] InvokeMethodTest.MethodThatTakes8Arguments
[       OK ] InvokeMethodTest.MethodThatTakes8Arguments (0 ms)
[ RUN      ] InvokeMethodTest.MethodThatTakes9Arguments
[       OK ] InvokeMethodTest.MethodThatTakes9Arguments (0 ms)
[ RUN      ] InvokeMethodTest.MethodThatTakes10Arguments
[       OK ] InvokeMethodTest.MethodThatTakes10Arguments (0 ms)
[ RUN      ] InvokeMethodTest.MethodWithCompatibleType
[       OK ] InvokeMethodTest.MethodWithCompatibleType (0 ms)
[----------] 12 tests from InvokeMethodTest (0 ms total)

[----------] 1 test from WithoutArgsTest
[ RUN      ] WithoutArgsTest.NoArg
[       OK ] WithoutArgsTest.NoArg (0 ms)
[----------] 1 test from WithoutArgsTest (0 ms total)

[----------] 1 test from WithArgTest
[ RUN      ] WithArgTest.OneArg
[       OK ] WithArgTest.OneArg (0 ms)
[----------] 1 test from WithArgTest (0 ms total)

[----------] 3 tests from ReturnArgActionTest
[ RUN      ] ReturnArgActionTest.WorksForOneArgIntArg0
[       OK ] ReturnArgActionTest.WorksForOneArgIntArg0 (0 ms)
[ RUN      ] ReturnArgActionTest.WorksForMultiArgBoolArg0
[       OK ] ReturnArgActionTest.WorksForMultiArgBoolArg0 (0 ms)
[ RUN      ] ReturnArgActionTest.WorksForMultiArgStringArg2
[       OK ] ReturnArgActionTest.WorksForMultiArgStringArg2 (0 ms)
[----------] 3 tests from ReturnArgActionTest (0 ms total)

[----------] 2 tests from SaveArgActionTest
[ RUN      ] SaveArgActionTest.WorksForSameType
[       OK ] SaveArgActionTest.WorksForSameType (0 ms)
[ RUN      ] SaveArgActionTest.WorksForCompatibleType
[       OK ] SaveArgActionTest.WorksForCompatibleType (0 ms)
[----------] 2 tests from SaveArgActionTest (0 ms total)

[----------] 3 tests from SaveArgPointeeActionTest
[ RUN      ] SaveArgPointeeActionTest.WorksForSameType
[       OK ] SaveArgPointeeActionTest.WorksForSameType (0 ms)
[ RUN      ] SaveArgPointeeActionTest.WorksForCompatibleType
[       OK ] SaveArgPointeeActionTest.WorksForCompatibleType (0 ms)
[ RUN      ] SaveArgPointeeActionTest.WorksForLinkedPtr
[       OK ] SaveArgPointeeActionTest.WorksForLinkedPtr (0 ms)
[----------] 3 tests from SaveArgPointeeActionTest (0 ms total)

[----------] 3 tests from SetArgRefereeActionTest
[ RUN      ] SetArgRefereeActionTest.WorksForSameType
[       OK ] SetArgRefereeActionTest.WorksForSameType (0 ms)
[ RUN      ] SetArgRefereeActionTest.WorksForCompatibleType
[       OK ] SetArgRefereeActionTest.WorksForCompatibleType (0 ms)
[ RUN      ] SetArgRefereeActionTest.WorksWithExtraArguments
[       OK ] SetArgRefereeActionTest.WorksWithExtraArguments (0 ms)
[----------] 3 tests from SetArgRefereeActionTest (0 ms total)

[----------] 2 tests from DeleteArgActionTest
[ RUN      ] DeleteArgActionTest.OneArg
[       OK ] DeleteArgActionTest.OneArg (0 ms)
[ RUN      ] DeleteArgActionTest.TenArgs
[       OK ] DeleteArgActionTest.TenArgs (0 ms)
[----------] 2 tests from DeleteArgActionTest (0 ms total)

[----------] 4 tests from SetArrayArgumentTest
[ RUN      ] SetArrayArgumentTest.SetsTheNthArray
[       OK ] SetArrayArgumentTest.SetsTheNthArray (0 ms)
[ RUN      ] SetArrayArgumentTest.SetsTheNthArrayWithEmptyRange
[       OK ] SetArrayArgumentTest.SetsTheNthArrayWithEmptyRange (0 ms)
[ RUN      ] SetArrayArgumentTest.SetsTheNthArrayWithConvertibleType
[       OK ] SetArrayArgumentTest.SetsTheNthArrayWithConvertibleType (0 ms)
[ RUN      ] SetArrayArgumentTest.SetsTheNthArrayWithIteratorArgument
[       OK ] SetArrayArgumentTest.SetsTheNthArrayWithIteratorArgument (0 ms)
[----------] 4 tests from SetArrayArgumentTest (0 ms total)

[----------] 1 test from ReturnPointeeTest
[ RUN      ] ReturnPointeeTest.Works
[       OK ] ReturnPointeeTest.Works (0 ms)
[----------] 1 test from ReturnPointeeTest (0 ms total)

[----------] Global test environment tear-down
[==========] 47 tests from 11 test cases ran. (1 ms total)
[  PASSED  ] 47 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gmock-more-actions_no_exception_test" end time: Feb 23 18:43 PST
"gmock-more-actions_no_exception_test" time elapsed: 00:00:00
----------------------------------------------------------

19/60 Testing: gmock_no_rtti_test
19/60 Test: gmock_no_rtti_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gmock_no_rtti_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock
"gmock_no_rtti_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
[==========] Running 132 tests from 25 test cases.
[----------] Global test environment set-up.
[----------] 1 test from MockMethodTest
[ RUN      ] MockMethodTest.CanInstantiateWithIncompleteArgType
[       OK ] MockMethodTest.CanInstantiateWithIncompleteArgType (1 ms)
[----------] 1 test from MockMethodTest (1 ms total)

[----------] 8 tests from OnCallSyntaxTest
[ RUN      ] OnCallSyntaxTest.CompilesWithMethodNameExpandedFromMacro
[       OK ] OnCallSyntaxTest.CompilesWithMethodNameExpandedFromMacro (0 ms)
[ RUN      ] OnCallSyntaxTest.WorksWithMethodNameExpandedFromMacro

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:211:
    Function call: MethodW()
          Returns: 42
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
[       OK ] OnCallSyntaxTest.WorksWithMethodNameExpandedFromMacro (0 ms)
[ RUN      ] OnCallSyntaxTest.EvaluatesFirstArgumentOnce
[       OK ] OnCallSyntaxTest.EvaluatesFirstArgumentOnce (0 ms)
[ RUN      ] OnCallSyntaxTest.EvaluatesSecondArgumentOnce
[       OK ] OnCallSyntaxTest.EvaluatesSecondArgumentOnce (0 ms)
[ RUN      ] OnCallSyntaxTest.WithIsOptional
[       OK ] OnCallSyntaxTest.WithIsOptional (0 ms)
[ RUN      ] OnCallSyntaxTest.WithCanAppearAtMostOnce
[       OK ] OnCallSyntaxTest.WithCanAppearAtMostOnce (0 ms)
[ RUN      ] OnCallSyntaxTest.WillByDefaultIsMandatory
[       OK ] OnCallSyntaxTest.WillByDefaultIsMandatory (105 ms)
[ RUN      ] OnCallSyntaxTest.WillByDefaultCanAppearAtMostOnce
[       OK ] OnCallSyntaxTest.WillByDefaultCanAppearAtMostOnce (0 ms)
[----------] 8 tests from OnCallSyntaxTest (105 ms total)

[----------] 27 tests from ExpectCallSyntaxTest
[ RUN      ] ExpectCallSyntaxTest.CompilesWithMethodNameExpandedFromMacro
[       OK ] ExpectCallSyntaxTest.CompilesWithMethodNameExpandedFromMacro (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WorksWithMethodNameExpandedFromMacro
[       OK ] ExpectCallSyntaxTest.WorksWithMethodNameExpandedFromMacro (1 ms)
[ RUN      ] ExpectCallSyntaxTest.EvaluatesFirstArgumentOnce
[       OK ] ExpectCallSyntaxTest.EvaluatesFirstArgumentOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.EvaluatesSecondArgumentOnce
[       OK ] ExpectCallSyntaxTest.EvaluatesSecondArgumentOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WithIsOptional
[       OK ] ExpectCallSyntaxTest.WithIsOptional (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WithCanAppearAtMostOnce
[       OK ] ExpectCallSyntaxTest.WithCanAppearAtMostOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WithMustBeFirstClause
[       OK ] ExpectCallSyntaxTest.WithMustBeFirstClause (0 ms)
[ RUN      ] ExpectCallSyntaxTest.TimesCanBeInferred
[       OK ] ExpectCallSyntaxTest.TimesCanBeInferred (0 ms)
[ RUN      ] ExpectCallSyntaxTest.TimesCanAppearAtMostOnce
[       OK ] ExpectCallSyntaxTest.TimesCanAppearAtMostOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.TimesMustBeBeforeInSequence
[       OK ] ExpectCallSyntaxTest.TimesMustBeBeforeInSequence (0 ms)
[ RUN      ] ExpectCallSyntaxTest.InSequenceIsOptional
[       OK ] ExpectCallSyntaxTest.InSequenceIsOptional (0 ms)
[ RUN      ] ExpectCallSyntaxTest.InSequenceCanAppearMultipleTimes
[       OK ] ExpectCallSyntaxTest.InSequenceCanAppearMultipleTimes (0 ms)
[ RUN      ] ExpectCallSyntaxTest.InSequenceMustBeBeforeAfter
[       OK ] ExpectCallSyntaxTest.InSequenceMustBeBeforeAfter (0 ms)
[ RUN      ] ExpectCallSyntaxTest.InSequenceMustBeBeforeWillOnce
[       OK ] ExpectCallSyntaxTest.InSequenceMustBeBeforeWillOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.AfterMustBeBeforeWillOnce
[       OK ] ExpectCallSyntaxTest.AfterMustBeBeforeWillOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillIsOptional
[       OK ] ExpectCallSyntaxTest.WillIsOptional (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillCanAppearMultipleTimes
[       OK ] ExpectCallSyntaxTest.WillCanAppearMultipleTimes (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillMustBeBeforeWillRepeatedly
[       OK ] ExpectCallSyntaxTest.WillMustBeBeforeWillRepeatedly (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillRepeatedlyIsOptional
[       OK ] ExpectCallSyntaxTest.WillRepeatedlyIsOptional (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillRepeatedlyCannotAppearMultipleTimes
[       OK ] ExpectCallSyntaxTest.WillRepeatedlyCannotAppearMultipleTimes (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WillRepeatedlyMustBeBeforeRetiresOnSaturation
[       OK ] ExpectCallSyntaxTest.WillRepeatedlyMustBeBeforeRetiresOnSaturation (0 ms)
[ RUN      ] ExpectCallSyntaxTest.RetiresOnSaturationIsOptional
[       OK ] ExpectCallSyntaxTest.RetiresOnSaturationIsOptional (0 ms)
[ RUN      ] ExpectCallSyntaxTest.RetiresOnSaturationCannotAppearMultipleTimes
[       OK ] ExpectCallSyntaxTest.RetiresOnSaturationCannotAppearMultipleTimes (1 ms)
[ RUN      ] ExpectCallSyntaxTest.DefaultCardinalityIsOnce
[       OK ] ExpectCallSyntaxTest.DefaultCardinalityIsOnce (0 ms)
[ RUN      ] ExpectCallSyntaxTest.DoesNotWarnOnAdequateActionCount
[       OK ] ExpectCallSyntaxTest.DoesNotWarnOnAdequateActionCount (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WarnsOnTooManyActions
[       OK ] ExpectCallSyntaxTest.WarnsOnTooManyActions (0 ms)
[ RUN      ] ExpectCallSyntaxTest.WarnsOnTooFewActions

GMOCK WARNING:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:679: Actions ran out in EXPECT_CALL(b, DoB())...
Called 2 times, but only 1 WillOnce() is specified - returning default value.
Stack trace:
[       OK ] ExpectCallSyntaxTest.WarnsOnTooFewActions (0 ms)
[----------] 27 tests from ExpectCallSyntaxTest (2 ms total)

[----------] 3 tests from OnCallTest
[ RUN      ] OnCallTest.TakesBuiltInDefaultActionWhenNoOnCall
[       OK ] OnCallTest.TakesBuiltInDefaultActionWhenNoOnCall (0 ms)
[ RUN      ] OnCallTest.TakesBuiltInDefaultActionWhenNoOnCallMatches
[       OK ] OnCallTest.TakesBuiltInDefaultActionWhenNoOnCallMatches (0 ms)
[ RUN      ] OnCallTest.PicksLastMatchingOnCall
[       OK ] OnCallTest.PicksLastMatchingOnCall (0 ms)
[----------] 3 tests from OnCallTest (0 ms total)

[----------] 8 tests from ExpectCallTest
[ RUN      ] ExpectCallTest.AllowsAnyCallWhenNoSpec

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(2)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
[       OK ] ExpectCallTest.AllowsAnyCallWhenNoSpec (0 ms)
[ RUN      ] ExpectCallTest.PicksLastMatchingExpectCall
[       OK ] ExpectCallTest.PicksLastMatchingExpectCall (0 ms)
[ RUN      ] ExpectCallTest.CatchesTooFewCalls
[       OK ] ExpectCallTest.CatchesTooFewCalls (0 ms)
[ RUN      ] ExpectCallTest.InfersCardinalityWhenThereIsNoWillRepeatedly
[       OK ] ExpectCallTest.InfersCardinalityWhenThereIsNoWillRepeatedly (0 ms)
[ RUN      ] ExpectCallTest.InfersCardinality1WhenThereIsWillRepeatedly
[       OK ] ExpectCallTest.InfersCardinality1WhenThereIsWillRepeatedly (0 ms)
[ RUN      ] ExpectCallTest.NthMatchTakesNthAction
[       OK ] ExpectCallTest.NthMatchTakesNthAction (0 ms)
[ RUN      ] ExpectCallTest.TakesRepeatedActionWhenWillListIsExhausted
[       OK ] ExpectCallTest.TakesRepeatedActionWhenWillListIsExhausted (0 ms)
[ RUN      ] ExpectCallTest.TakesDefaultActionWhenWillListIsExhausted
[       OK ] ExpectCallTest.TakesDefaultActionWhenWillListIsExhausted (0 ms)
[----------] 8 tests from ExpectCallTest (1 ms total)

[----------] 2 tests from FunctionMockerMessageTest
[ RUN      ] FunctionMockerMessageTest.ReportsExpectCallLocationForExhausedActions
[       OK ] FunctionMockerMessageTest.ReportsExpectCallLocationForExhausedActions (0 ms)
[ RUN      ] FunctionMockerMessageTest.ReportsDefaultActionLocationOfUninterestingCallsForNaggyMock
[       OK ] FunctionMockerMessageTest.ReportsDefaultActionLocationOfUninterestingCallsForNaggyMock (0 ms)
[----------] 2 tests from FunctionMockerMessageTest (0 ms total)

[----------] 1 test from UninterestingCallTest
[ RUN      ] UninterestingCallTest.DoesDefaultAction

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:931:
    Function call: Binary(1, 2)
          Returns: true
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
[       OK ] UninterestingCallTest.DoesDefaultAction (0 ms)
[----------] 1 test from UninterestingCallTest (0 ms total)

[----------] 6 tests from UnexpectedCallTest
[ RUN      ] UnexpectedCallTest.DoesDefaultAction
[       OK ] UnexpectedCallTest.DoesDefaultAction (0 ms)
[ RUN      ] UnexpectedCallTest.GeneratesFailureForVoidFunction
[       OK ] UnexpectedCallTest.GeneratesFailureForVoidFunction (0 ms)
[ RUN      ] UnexpectedCallTest.GeneartesFailureForNonVoidFunction
[       OK ] UnexpectedCallTest.GeneartesFailureForNonVoidFunction (0 ms)
[ RUN      ] UnexpectedCallTest.RetiredExpectation
[       OK ] UnexpectedCallTest.RetiredExpectation (1 ms)
[ RUN      ] UnexpectedCallTest.UnmatchedArguments
[       OK ] UnexpectedCallTest.UnmatchedArguments (0 ms)
[ RUN      ] UnexpectedCallTest.UnsatisifiedPrerequisites
[       OK ] UnexpectedCallTest.UnsatisifiedPrerequisites (0 ms)
[----------] 6 tests from UnexpectedCallTest (1 ms total)

[----------] 1 test from UndefinedReturnValueTest
[ RUN      ] UndefinedReturnValueTest.ReturnValueIsMandatoryWhenNotDefaultConstructible
[       OK ] UndefinedReturnValueTest.ReturnValueIsMandatoryWhenNotDefaultConstructible (0 ms)
[----------] 1 test from UndefinedReturnValueTest (0 ms total)

[----------] 3 tests from ExcessiveCallTest
[ RUN      ] ExcessiveCallTest.DoesDefaultAction
[       OK ] ExcessiveCallTest.DoesDefaultAction (0 ms)
[ RUN      ] ExcessiveCallTest.GeneratesFailureForVoidFunction
[       OK ] ExcessiveCallTest.GeneratesFailureForVoidFunction (0 ms)
[ RUN      ] ExcessiveCallTest.GeneratesFailureForNonVoidFunction
[       OK ] ExcessiveCallTest.GeneratesFailureForNonVoidFunction (0 ms)
[----------] 3 tests from ExcessiveCallTest (0 ms total)

[----------] 3 tests from InSequenceTest
[ RUN      ] InSequenceTest.AllExpectationInScopeAreInSequence
[       OK ] InSequenceTest.AllExpectationInScopeAreInSequence (1 ms)
[ RUN      ] InSequenceTest.NestedInSequence
[       OK ] InSequenceTest.NestedInSequence (0 ms)
[ RUN      ] InSequenceTest.ExpectationsOutOfScopeAreNotAffected
[       OK ] InSequenceTest.ExpectationsOutOfScopeAreNotAffected (0 ms)
[----------] 3 tests from InSequenceTest (1 ms total)

[----------] 4 tests from SequenceTest
[ RUN      ] SequenceTest.AnyOrderIsOkByDefault
[       OK ] SequenceTest.AnyOrderIsOkByDefault (0 ms)
[ RUN      ] SequenceTest.CallsMustBeInStrictOrderWhenSaidSo1
[       OK ] SequenceTest.CallsMustBeInStrictOrderWhenSaidSo1 (0 ms)
[ RUN      ] SequenceTest.CallsMustBeInStrictOrderWhenSaidSo2
[       OK ] SequenceTest.CallsMustBeInStrictOrderWhenSaidSo2 (0 ms)
[ RUN      ] SequenceTest.Retirement
[       OK ] SequenceTest.Retirement (0 ms)
[----------] 4 tests from SequenceTest (0 ms total)

[----------] 4 tests from PartialOrderTest
[ RUN      ] PartialOrderTest.CallsMustConformToSpecifiedDag1
[       OK ] PartialOrderTest.CallsMustConformToSpecifiedDag1 (0 ms)
[ RUN      ] PartialOrderTest.CallsMustConformToSpecifiedDag2
[       OK ] PartialOrderTest.CallsMustConformToSpecifiedDag2 (0 ms)
[ RUN      ] PartialOrderTest.CallsMustConformToSpecifiedDag3
[       OK ] PartialOrderTest.CallsMustConformToSpecifiedDag3 (1 ms)
[ RUN      ] PartialOrderTest.CallsMustConformToSpecifiedDag4
[       OK ] PartialOrderTest.CallsMustConformToSpecifiedDag4 (0 ms)
[----------] 4 tests from PartialOrderTest (1 ms total)

[----------] 2 tests from ExpectationTest
[ RUN      ] ExpectationTest.ConstrutorsWork
[       OK ] ExpectationTest.ConstrutorsWork (0 ms)
[ RUN      ] ExpectationTest.AssignmentWorks
[       OK ] ExpectationTest.AssignmentWorks (0 ms)
[----------] 2 tests from ExpectationTest (0 ms total)

[----------] 6 tests from ExpectationSetTest
[ RUN      ] ExpectationSetTest.MemberTypesAreCorrect
[       OK ] ExpectationSetTest.MemberTypesAreCorrect (0 ms)
[ RUN      ] ExpectationSetTest.ConstructorsWork
[       OK ] ExpectationSetTest.ConstructorsWork (0 ms)
[ RUN      ] ExpectationSetTest.AssignmentWorks
[       OK ] ExpectationSetTest.AssignmentWorks (0 ms)
[ RUN      ] ExpectationSetTest.InsertionWorks
[       OK ] ExpectationSetTest.InsertionWorks (0 ms)
[ RUN      ] ExpectationSetTest.SizeWorks
[       OK ] ExpectationSetTest.SizeWorks (0 ms)
[ RUN      ] ExpectationSetTest.IsEnumerable
[       OK ] ExpectationSetTest.IsEnumerable (0 ms)
[----------] 6 tests from ExpectationSetTest (0 ms total)

[----------] 11 tests from AfterTest
[ RUN      ] AfterTest.SucceedsWhenPartialOrderIsSatisfied
[       OK ] AfterTest.SucceedsWhenPartialOrderIsSatisfied (0 ms)
[ RUN      ] AfterTest.SucceedsWhenTotalOrderIsSatisfied
[       OK ] AfterTest.SucceedsWhenTotalOrderIsSatisfied (0 ms)
[ RUN      ] AfterTest.CallsMustBeInStrictOrderWhenSpecifiedSo1
[       OK ] AfterTest.CallsMustBeInStrictOrderWhenSpecifiedSo1 (0 ms)
[ RUN      ] AfterTest.CallsMustBeInStrictOrderWhenSpecifiedSo2
[       OK ] AfterTest.CallsMustBeInStrictOrderWhenSpecifiedSo2 (1 ms)
[ RUN      ] AfterTest.CallsMustSatisfyPartialOrderWhenSpecifiedSo
[       OK ] AfterTest.CallsMustSatisfyPartialOrderWhenSpecifiedSo (0 ms)
[ RUN      ] AfterTest.CallsMustSatisfyPartialOrderWhenSpecifiedSo2
[       OK ] AfterTest.CallsMustSatisfyPartialOrderWhenSpecifiedSo2 (0 ms)
[ RUN      ] AfterTest.CanBeUsedWithInSequence
[       OK ] AfterTest.CanBeUsedWithInSequence (0 ms)
[ RUN      ] AfterTest.CanBeCalledManyTimes
[       OK ] AfterTest.CanBeCalledManyTimes (0 ms)
[ RUN      ] AfterTest.AcceptsUpToFiveArguments
[       OK ] AfterTest.AcceptsUpToFiveArguments (0 ms)
[ RUN      ] AfterTest.AcceptsDuplicatedInput
[       OK ] AfterTest.AcceptsDuplicatedInput (0 ms)
[ RUN      ] AfterTest.ChangesToExpectationSetHaveNoEffectAfterwards
[       OK ] AfterTest.ChangesToExpectationSetHaveNoEffectAfterwards (0 ms)
[----------] 11 tests from AfterTest (1 ms total)

[----------] 6 tests from DeletingMockEarlyTest
[ RUN      ] DeletingMockEarlyTest.Success1
[       OK ] DeletingMockEarlyTest.Success1 (0 ms)
[ RUN      ] DeletingMockEarlyTest.Success2
[       OK ] DeletingMockEarlyTest.Success2 (0 ms)
[ RUN      ] DeletingMockEarlyTest.CanDeleteSelfInActionReturningVoid
[       OK ] DeletingMockEarlyTest.CanDeleteSelfInActionReturningVoid (0 ms)
[ RUN      ] DeletingMockEarlyTest.CanDeleteSelfInActionReturningValue
[       OK ] DeletingMockEarlyTest.CanDeleteSelfInActionReturningValue (0 ms)
[ RUN      ] DeletingMockEarlyTest.Failure1
[       OK ] DeletingMockEarlyTest.Failure1 (1 ms)
[ RUN      ] DeletingMockEarlyTest.Failure2
[       OK ] DeletingMockEarlyTest.Failure2 (0 ms)
[----------] 6 tests from DeletingMockEarlyTest (1 ms total)

[----------] 1 test from ExpectationBaseTest
[ RUN      ] ExpectationBaseTest.AllPrerequisitesAreSatisfiedWorksForNonMonotonicCardinality
[       OK ] ExpectationBaseTest.AllPrerequisitesAreSatisfiedWorksForNonMonotonicCardinality (0 ms)
[----------] 1 test from ExpectationBaseTest (0 ms total)

[----------] 3 tests from FunctionCallMessageTest
[ RUN      ] FunctionCallMessageTest.UninterestingCallOnNaggyMockGeneratesNoStackTraceWhenVerboseWarning
[       OK ] FunctionCallMessageTest.UninterestingCallOnNaggyMockGeneratesNoStackTraceWhenVerboseWarning (0 ms)
[ RUN      ] FunctionCallMessageTest.UninterestingCallOnNaggyMockGeneratesFyiWithStackTraceWhenVerboseInfo
[       OK ] FunctionCallMessageTest.UninterestingCallOnNaggyMockGeneratesFyiWithStackTraceWhenVerboseInfo (0 ms)
[ RUN      ] FunctionCallMessageTest.UninterestingCallOnNaggyMockPrintsArgumentsAndReturnValue
[       OK ] FunctionCallMessageTest.UninterestingCallOnNaggyMockPrintsArgumentsAndReturnValue (0 ms)
[----------] 3 tests from FunctionCallMessageTest (0 ms total)

[----------] 4 tests from GMockVerboseFlagTest
[ RUN      ] GMockVerboseFlagTest.Info

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2085: EXPECT_CALL(a, DoA(5)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2086: EXPECT_CALL(a, Binary(_, 1)) invoked
Stack trace:
[       OK ] GMockVerboseFlagTest.Info (1 ms)
[ RUN      ] GMockVerboseFlagTest.Warning
[       OK ] GMockVerboseFlagTest.Warning (0 ms)
[ RUN      ] GMockVerboseFlagTest.Error
[       OK ] GMockVerboseFlagTest.Error (0 ms)
[ RUN      ] GMockVerboseFlagTest.InvalidFlagIsTreatedAsWarning
[       OK ] GMockVerboseFlagTest.InvalidFlagIsTreatedAsWarning (1 ms)
[----------] 4 tests from GMockVerboseFlagTest (2 ms total)

[----------] 3 tests from GMockLogTest
[ RUN      ] GMockLogTest.DoesNotPrintGoodCallInternallyIfVerbosityIsWarning
[       OK ] GMockLogTest.DoesNotPrintGoodCallInternallyIfVerbosityIsWarning (0 ms)
[ RUN      ] GMockLogTest.DoesNotPrintGoodCallInternallyIfVerbosityIsError
[       OK ] GMockLogTest.DoesNotPrintGoodCallInternallyIfVerbosityIsError (0 ms)
[ RUN      ] GMockLogTest.DoesNotPrintWarningInternallyIfVerbosityIsError
[       OK ] GMockLogTest.DoesNotPrintWarningInternallyIfVerbosityIsError (0 ms)
[----------] 3 tests from GMockLogTest (0 ms total)

[----------] 6 tests from AllowLeakTest
[ RUN      ] AllowLeakTest.AllowsLeakingUnusedMockObject
[       OK ] AllowLeakTest.AllowsLeakingUnusedMockObject (0 ms)
[ RUN      ] AllowLeakTest.CanBeCalledBeforeOnCall

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2240: ON_CALL(*a, DoA(_)) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2240:
    Function call: DoA(0)
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] AllowLeakTest.CanBeCalledBeforeOnCall (0 ms)
[ RUN      ] AllowLeakTest.CanBeCalledAfterOnCall

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2246: ON_CALL(*a, DoA(_)) invoked
Stack trace:
[       OK ] AllowLeakTest.CanBeCalledAfterOnCall (0 ms)
[ RUN      ] AllowLeakTest.CanBeCalledBeforeExpectCall

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2253: EXPECT_CALL(*a, DoA(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2253: Mock function call matches EXPECT_CALL(*a, DoA(_))...
    Function call: DoA(0)
Stack trace:
[       OK ] AllowLeakTest.CanBeCalledBeforeExpectCall (0 ms)
[ RUN      ] AllowLeakTest.CanBeCalledAfterExpectCall

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2259: EXPECT_CALL(*a, DoA(_)) invoked
Stack trace:
[       OK ] AllowLeakTest.CanBeCalledAfterExpectCall (0 ms)
[ RUN      ] AllowLeakTest.WorksWhenBothOnCallAndExpectCallArePresent

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2265: ON_CALL(*a, DoA(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2266: EXPECT_CALL(*a, DoA(_)) invoked
Stack trace:
[       OK ] AllowLeakTest.WorksWhenBothOnCallAndExpectCallArePresent (0 ms)
[----------] 6 tests from AllowLeakTest (0 ms total)

[----------] 6 tests from VerifyAndClearExpectationsTest
[ RUN      ] VerifyAndClearExpectationsTest.NoMethodHasExpectations

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.NoMethodHasExpectations (0 ms)
[ RUN      ] VerifyAndClearExpectationsTest.SomeMethodsHaveExpectationsAndSucceed

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2287: EXPECT_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2287: Mock function call matches EXPECT_CALL(b, DoB())...
    Function call: DoB()
          Returns: 1
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.SomeMethodsHaveExpectationsAndSucceed (0 ms)
[ RUN      ] VerifyAndClearExpectationsTest.SomeMethodsHaveExpectationsAndFail

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2303: EXPECT_CALL(b, DoB()) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.SomeMethodsHaveExpectationsAndFail (0 ms)
[ RUN      ] VerifyAndClearExpectationsTest.AllMethodsHaveExpectations

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2320: EXPECT_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2322: EXPECT_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2320: Mock function call matches EXPECT_CALL(b, DoB())...
    Function call: DoB()
          Returns: 1
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2322: Mock function call matches EXPECT_CALL(b, DoB(_))...
    Function call: DoB(1)
          Returns: 2
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.AllMethodsHaveExpectations (0 ms)
[ RUN      ] VerifyAndClearExpectationsTest.AMethodHasManyExpectations

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2338: EXPECT_CALL(b, DoB(0)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2340: EXPECT_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2340: Mock function call matches EXPECT_CALL(b, DoB(_))...
    Function call: DoB(1)
          Returns: 2
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.AMethodHasManyExpectations (0 ms)
[ RUN      ] VerifyAndClearExpectationsTest.CanCallManyTimes

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2358: EXPECT_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2358: Mock function call matches EXPECT_CALL(b, DoB())...
    Function call: DoB()
          Returns: 0
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2362: EXPECT_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2362: Mock function call matches EXPECT_CALL(b, DoB(_))...
    Function call: DoB(1)
          Returns: 1
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearExpectationsTest.CanCallManyTimes (1 ms)
[----------] 6 tests from VerifyAndClearExpectationsTest (1 ms total)

[----------] 12 tests from VerifyAndClearTest
[ RUN      ] VerifyAndClearTest.NoMethodHasDefaultActions

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.NoMethodHasDefaultActions (0 ms)
[ RUN      ] VerifyAndClearTest.SomeMethodsHaveDefaultActions

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2387: ON_CALL(b, DoB()) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.SomeMethodsHaveDefaultActions (0 ms)
[ RUN      ] VerifyAndClearTest.AllMethodsHaveDefaultActions

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2400: ON_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2402: ON_CALL(b, DoB(_)) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(0)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.AllMethodsHaveDefaultActions (0 ms)
[ RUN      ] VerifyAndClearTest.AMethodHasManyDefaultActions

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2418: ON_CALL(b, DoB(0)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2420: ON_CALL(b, DoB(_)) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(0)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.AMethodHasManyDefaultActions (0 ms)
[ RUN      ] VerifyAndClearTest.CanCallManyTimes

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2435: ON_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2440: ON_CALL(b, DoB(_)) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.CanCallManyTimes (0 ms)
[ RUN      ] VerifyAndClearTest.Success

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2451: ON_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2453: EXPECT_CALL(b, DoB(1)) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2451:
    Function call: DoB()
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2453: Mock function call matches EXPECT_CALL(b, DoB(1))...
    Function call: DoB(1)
          Returns: 2
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.Success (0 ms)
[ RUN      ] VerifyAndClearTest.Failure

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2469: ON_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2471: EXPECT_CALL(b, DoB()) invoked
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2469:
    Function call: DoB(1)
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.Failure (0 ms)
[ RUN      ] VerifyAndClearTest.Const

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2490: ON_CALL(Const(b), DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2493: EXPECT_CALL(Const(b), DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2493: Mock function call matches EXPECT_CALL(Const(b), DoB())...
    Function call: DoB()
          Returns: 1
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2493: Mock function call matches EXPECT_CALL(Const(b), DoB())...
    Function call: DoB()
          Returns: 2
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB()
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning default value.
    Function call: DoB(1)
          Returns: 0
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.Const (0 ms)
[ RUN      ] VerifyAndClearTest.CanSetDefaultActionsAndExpectationsAfterwards

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2511: ON_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2513: EXPECT_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2513: Mock function call matches EXPECT_CALL(b, DoB(_))...
    Function call: DoB(1)
          Returns: 2
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2519: EXPECT_CALL(b, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2521: ON_CALL(b, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2519: Mock function call matches EXPECT_CALL(b, DoB())...
    Function call: DoB()
          Returns: 3
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2521:
    Function call: DoB(1)
          Returns: 4
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:
[       OK ] VerifyAndClearTest.CanSetDefaultActionsAndExpectationsAfterwards (0 ms)
[ RUN      ] VerifyAndClearTest.DoesNotAffectOtherMockObjects

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2535: ON_CALL(a, Binary(_, _)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2537: EXPECT_CALL(a, Binary(_, _)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2541: ON_CALL(b1, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2543: EXPECT_CALL(b1, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2546: ON_CALL(b2, DoB()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2548: EXPECT_CALL(b2, DoB(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2548: Mock function call matches EXPECT_CALL(b2, DoB(_))...
    Function call: DoB(0)
          Returns: 0
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2537: Mock function call matches EXPECT_CALL(a, Binary(_, _))...
    Function call: Binary(0, 0)
          Returns: true
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2537: Mock function call matches EXPECT_CALL(a, Binary(_, _))...
    Function call: Binary(0, 0)
          Returns: false
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - taking default action specified at:
/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2541:
    Function call: DoB()
          Returns: 1
NOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md#knowing-when-to-expect for details.
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2543: Mock function call matches EXPECT_CALL(b1, DoB(_))...
    Function call: DoB(0)
          Returns: 2
Stack trace:
[       OK ] VerifyAndClearTest.DoesNotAffectOtherMockObjects (0 ms)
[ RUN      ] VerifyAndClearTest.DestroyingChainedMocksDoesNotDeadlockThroughExpectations

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2568: EXPECT_CALL(test_mock, AcceptReference(_)) invoked
Stack trace:
[       OK ] VerifyAndClearTest.DestroyingChainedMocksDoesNotDeadlockThroughExpectations (0 ms)
[ RUN      ] VerifyAndClearTest.DestroyingChainedMocksDoesNotDeadlockThroughDefaultAction

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2588: ON_CALL(test_mock, AcceptReference(_)) invoked
Stack trace:
[       OK ] VerifyAndClearTest.DestroyingChainedMocksDoesNotDeadlockThroughDefaultAction (1 ms)
[----------] 12 tests from VerifyAndClearTest (1 ms total)

[----------] 1 test from SynchronizationTest
[ RUN      ] SynchronizationTest.CanCallMockMethodInAction

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2610: ON_CALL(a, DoA(_)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2613: EXPECT_CALL(a, DoA(1)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2614: EXPECT_CALL(a, DoA(1)) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2617: EXPECT_CALL(c, NonVoidMethod()) invoked
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2617: Mock function call matches EXPECT_CALL(c, NonVoidMethod())...
    Function call: NonVoidMethod()
          Returns: 0
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2613: Mock function call matches EXPECT_CALL(a, DoA(1))...
    Function call: DoA(1)
Stack trace:

/home/kapil/630/a6/googletest/googlemock/test/gmock-spec-builders_test.cc:2614: Mock function call matches EXPECT_CALL(a, DoA(1))...
    Function call: DoA(1)
Stack trace:
[       OK ] SynchronizationTest.CanCallMockMethodInAction (0 ms)
[----------] 1 test from SynchronizationTest (0 ms total)

[----------] Global test environment tear-down
[==========] 132 tests from 25 test cases ran. (118 ms total)
[  PASSED  ] 132 tests.
<end of output>
Test time =   0.12 sec
----------------------------------------------------------
Test Passed.
"gmock_no_rtti_test" end time: Feb 23 18:43 PST
"gmock_no_rtti_test" time elapsed: 00:00:00
----------------------------------------------------------

20/60 Testing: gtest-death-test_test
20/60 Test: gtest-death-test_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest-death-test_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest-death-test_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 70 tests from 11 test cases.
[----------] Global test environment set-up.
[----------] 49 tests from TestForDeathTest
[ RUN      ] TestForDeathTest.SingleStatement
[       OK ] TestForDeathTest.SingleStatement (1 ms)
[ RUN      ] TestForDeathTest.SwitchStatement
[       OK ] TestForDeathTest.SwitchStatement (0 ms)
[ RUN      ] TestForDeathTest.StaticMemberFunctionFastStyle
[       OK ] TestForDeathTest.StaticMemberFunctionFastStyle (1 ms)
[ RUN      ] TestForDeathTest.MemberFunctionFastStyle
[       OK ] TestForDeathTest.MemberFunctionFastStyle (0 ms)
[ RUN      ] TestForDeathTest.FastDeathTestInChangedDir
[       OK ] TestForDeathTest.FastDeathTestInChangedDir (1 ms)
[ RUN      ] TestForDeathTest.FastSigprofActionSet
[       OK ] TestForDeathTest.FastSigprofActionSet (0 ms)
[ RUN      ] TestForDeathTest.ThreadSafeSigprofActionSet
[       OK ] TestForDeathTest.ThreadSafeSigprofActionSet (2 ms)
[ RUN      ] TestForDeathTest.StaticMemberFunctionThreadsafeStyle
[       OK ] TestForDeathTest.StaticMemberFunctionThreadsafeStyle (1 ms)
[ RUN      ] TestForDeathTest.MemberFunctionThreadsafeStyle
[       OK ] TestForDeathTest.MemberFunctionThreadsafeStyle (2 ms)
[ RUN      ] TestForDeathTest.ThreadsafeDeathTestInLoop
[       OK ] TestForDeathTest.ThreadsafeDeathTestInLoop (5 ms)
[ RUN      ] TestForDeathTest.ThreadsafeDeathTestInChangedDir
[       OK ] TestForDeathTest.ThreadsafeDeathTestInChangedDir (3 ms)
[ RUN      ] TestForDeathTest.MixedStyles
[       OK ] TestForDeathTest.MixedStyles (2 ms)
[ RUN      ] TestForDeathTest.DoesNotExecuteAtforkHooks
[       OK ] TestForDeathTest.DoesNotExecuteAtforkHooks (1 ms)
[ RUN      ] TestForDeathTest.MethodOfAnotherClass
[       OK ] TestForDeathTest.MethodOfAnotherClass (1 ms)
[ RUN      ] TestForDeathTest.GlobalFunction
[       OK ] TestForDeathTest.GlobalFunction (0 ms)
[ RUN      ] TestForDeathTest.AcceptsAnythingConvertibleToRE
[       OK ] TestForDeathTest.AcceptsAnythingConvertibleToRE (1 ms)
[ RUN      ] TestForDeathTest.NonVoidFunction
[       OK ] TestForDeathTest.NonVoidFunction (1 ms)
[ RUN      ] TestForDeathTest.FunctionWithParameter
[       OK ] TestForDeathTest.FunctionWithParameter (1 ms)
[ RUN      ] TestForDeathTest.OutsideFixture
[       OK ] TestForDeathTest.OutsideFixture (1 ms)
[ RUN      ] TestForDeathTest.InsideLoop
[       OK ] TestForDeathTest.InsideLoop (2 ms)
[ RUN      ] TestForDeathTest.CompoundStatement
[       OK ] TestForDeathTest.CompoundStatement (0 ms)
[ RUN      ] TestForDeathTest.DoesNotDie
[       OK ] TestForDeathTest.DoesNotDie (1 ms)
[ RUN      ] TestForDeathTest.ErrorMessageMismatch
[       OK ] TestForDeathTest.ErrorMessageMismatch (1 ms)
[ RUN      ] TestForDeathTest.EXPECT_DEATH
[       OK ] TestForDeathTest.EXPECT_DEATH (0 ms)
[ RUN      ] TestForDeathTest.ASSERT_DEATH
[       OK ] TestForDeathTest.ASSERT_DEATH (1 ms)
[ RUN      ] TestForDeathTest.SingleEvaluation
[       OK ] TestForDeathTest.SingleEvaluation (1 ms)
[ RUN      ] TestForDeathTest.RunawayIsFailure
[       OK ] TestForDeathTest.RunawayIsFailure (0 ms)
[ RUN      ] TestForDeathTest.ReturnIsFailure
[       OK ] TestForDeathTest.ReturnIsFailure (0 ms)
[ RUN      ] TestForDeathTest.TestExpectDebugDeath
[       OK ] TestForDeathTest.TestExpectDebugDeath (1 ms)
[ RUN      ] TestForDeathTest.TestAssertDebugDeath
[       OK ] TestForDeathTest.TestAssertDebugDeath (1 ms)
[ RUN      ] TestForDeathTest.ExpectDebugDeathDoesNotAbort
[       OK ] TestForDeathTest.ExpectDebugDeathDoesNotAbort (0 ms)
[ RUN      ] TestForDeathTest.AssertDebugDeathAborts

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest-death-test_test.cc:701:: Before ASSERT_DEBUG_DEATH
[       OK ] TestForDeathTest.AssertDebugDeathAborts (0 ms)
[ RUN      ] TestForDeathTest.AssertDebugDeathAborts2

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest-death-test_test.cc:701:: Before ASSERT_DEBUG_DEATH
[       OK ] TestForDeathTest.AssertDebugDeathAborts2 (1 ms)
[ RUN      ] TestForDeathTest.AssertDebugDeathAborts3

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest-death-test_test.cc:701:: Before ASSERT_DEBUG_DEATH
[       OK ] TestForDeathTest.AssertDebugDeathAborts3 (0 ms)
[ RUN      ] TestForDeathTest.AssertDebugDeathAborts4

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest-death-test_test.cc:701:: Before ASSERT_DEBUG_DEATH
[       OK ] TestForDeathTest.AssertDebugDeathAborts4 (1 ms)
[ RUN      ] TestForDeathTest.AssertDebugDeathAborts5

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest-death-test_test.cc:701:: Before ASSERT_DEBUG_DEATH
[       OK ] TestForDeathTest.AssertDebugDeathAborts5 (0 ms)
[ RUN      ] TestForDeathTest.AssertDebugDeathAborts6

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest-death-test_test.cc:701:: Before ASSERT_DEBUG_DEATH
[       OK ] TestForDeathTest.AssertDebugDeathAborts6 (1 ms)
[ RUN      ] TestForDeathTest.AssertDebugDeathAborts7

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest-death-test_test.cc:701:: Before ASSERT_DEBUG_DEATH
[       OK ] TestForDeathTest.AssertDebugDeathAborts7 (0 ms)
[ RUN      ] TestForDeathTest.AssertDebugDeathAborts8

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest-death-test_test.cc:701:: Before ASSERT_DEBUG_DEATH
[       OK ] TestForDeathTest.AssertDebugDeathAborts8 (0 ms)
[ RUN      ] TestForDeathTest.AssertDebugDeathAborts9

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest-death-test_test.cc:701:: Before ASSERT_DEBUG_DEATH
[       OK ] TestForDeathTest.AssertDebugDeathAborts9 (1 ms)
[ RUN      ] TestForDeathTest.AssertDebugDeathAborts10

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest-death-test_test.cc:701:: Before ASSERT_DEBUG_DEATH
[       OK ] TestForDeathTest.AssertDebugDeathAborts10 (0 ms)
[ RUN      ] TestForDeathTest.ExitMacros
[       OK ] TestForDeathTest.ExitMacros (105 ms)
[ RUN      ] TestForDeathTest.ExitMacrosUsingFork
[       OK ] TestForDeathTest.ExitMacrosUsingFork (107 ms)
[ RUN      ] TestForDeathTest.InvalidStyle
[       OK ] TestForDeathTest.InvalidStyle (0 ms)
[ RUN      ] TestForDeathTest.DeathTestFailedOutput
[       OK ] TestForDeathTest.DeathTestFailedOutput (0 ms)
[ RUN      ] TestForDeathTest.DeathTestUnexpectedReturnOutput
[       OK ] TestForDeathTest.DeathTestUnexpectedReturnOutput (1 ms)
[ RUN      ] TestForDeathTest.DeathTestBadExitCodeOutput
[       OK ] TestForDeathTest.DeathTestBadExitCodeOutput (0 ms)
[ RUN      ] TestForDeathTest.DeathTestMultiLineMatchFail
[       OK ] TestForDeathTest.DeathTestMultiLineMatchFail (0 ms)
[ RUN      ] TestForDeathTest.DeathTestMultiLineMatchPass
[       OK ] TestForDeathTest.DeathTestMultiLineMatchPass (1 ms)
[----------] 49 tests from TestForDeathTest (250 ms total)

[----------] 5 tests from MacroLogicDeathTest
[ RUN      ] MacroLogicDeathTest.NothingHappens
[       OK ] MacroLogicDeathTest.NothingHappens (0 ms)
[ RUN      ] MacroLogicDeathTest.ChildExitsSuccessfully
[       OK ] MacroLogicDeathTest.ChildExitsSuccessfully (0 ms)
[ RUN      ] MacroLogicDeathTest.ChildExitsUnsuccessfully
[       OK ] MacroLogicDeathTest.ChildExitsUnsuccessfully (0 ms)
[ RUN      ] MacroLogicDeathTest.ChildPerformsReturn
[       OK ] MacroLogicDeathTest.ChildPerformsReturn (0 ms)
[ RUN      ] MacroLogicDeathTest.ChildDoesNotDie
[       OK ] MacroLogicDeathTest.ChildDoesNotDie (0 ms)
[----------] 5 tests from MacroLogicDeathTest (0 ms total)

[----------] 1 test from SuccessRegistrationDeathTest
[ RUN      ] SuccessRegistrationDeathTest.NoSuccessPart
[       OK ] SuccessRegistrationDeathTest.NoSuccessPart (0 ms)
[----------] 1 test from SuccessRegistrationDeathTest (0 ms total)

[----------] 1 test from StreamingAssertionsDeathTest
[ RUN      ] StreamingAssertionsDeathTest.DeathTest
[       OK ] StreamingAssertionsDeathTest.DeathTest (2 ms)
[----------] 1 test from StreamingAssertionsDeathTest (2 ms total)

[----------] 1 test from ConditionalDeathMacrosDeathTest
[ RUN      ] ConditionalDeathMacrosDeathTest.ExpectsDeathWhenDeathTestsAvailable
[       OK ] ConditionalDeathMacrosDeathTest.ExpectsDeathWhenDeathTestsAvailable (1 ms)
[----------] 1 test from ConditionalDeathMacrosDeathTest (1 ms total)

[----------] 2 tests from InDeathTestChildDeathTest
[ RUN      ] InDeathTestChildDeathTest.ReportsDeathTestCorrectlyInFastStyle
[       OK ] InDeathTestChildDeathTest.ReportsDeathTestCorrectlyInFastStyle (0 ms)
[ RUN      ] InDeathTestChildDeathTest.ReportsDeathTestCorrectlyInThreadSafeStyle
[       OK ] InDeathTestChildDeathTest.ReportsDeathTestCorrectlyInThreadSafeStyle (2 ms)
[----------] 2 tests from InDeathTestChildDeathTest (2 ms total)

[----------] 2 tests from ConditionalDeathMacrosSyntaxDeathTest
[ RUN      ] ConditionalDeathMacrosSyntaxDeathTest.SingleStatement
[       OK ] ConditionalDeathMacrosSyntaxDeathTest.SingleStatement (1 ms)
[ RUN      ] ConditionalDeathMacrosSyntaxDeathTest.SwitchStatement
[       OK ] ConditionalDeathMacrosSyntaxDeathTest.SwitchStatement (0 ms)
[----------] 2 tests from ConditionalDeathMacrosSyntaxDeathTest (1 ms total)

[----------] 1 test from NotADeathTest
[ RUN      ] NotADeathTest.Test
[       OK ] NotADeathTest.Test (0 ms)
[----------] 1 test from NotADeathTest (0 ms total)

[----------] 2 tests from ExitStatusPredicateTest
[ RUN      ] ExitStatusPredicateTest.ExitedWithCode
[       OK ] ExitStatusPredicateTest.ExitedWithCode (1 ms)
[ RUN      ] ExitStatusPredicateTest.KilledBySignal
[       OK ] ExitStatusPredicateTest.KilledBySignal (104 ms)
[----------] 2 tests from ExitStatusPredicateTest (105 ms total)

[----------] 1 test from GetLastErrnoDescription
[ RUN      ] GetLastErrnoDescription.GetLastErrnoDescriptionWorks
[       OK ] GetLastErrnoDescription.GetLastErrnoDescriptionWorks (0 ms)
[----------] 1 test from GetLastErrnoDescription (0 ms total)

[----------] 5 tests from ParseNaturalNumberTest
[ RUN      ] ParseNaturalNumberTest.RejectsInvalidFormat
[       OK ] ParseNaturalNumberTest.RejectsInvalidFormat (0 ms)
[ RUN      ] ParseNaturalNumberTest.RejectsOverflownNumbers
[       OK ] ParseNaturalNumberTest.RejectsOverflownNumbers (0 ms)
[ RUN      ] ParseNaturalNumberTest.AcceptsValidNumbers
[       OK ] ParseNaturalNumberTest.AcceptsValidNumbers (0 ms)
[ RUN      ] ParseNaturalNumberTest.AcceptsTypeLimits
[       OK ] ParseNaturalNumberTest.AcceptsTypeLimits (0 ms)
[ RUN      ] ParseNaturalNumberTest.WorksForShorterIntegers
[       OK ] ParseNaturalNumberTest.WorksForShorterIntegers (0 ms)
[----------] 5 tests from ParseNaturalNumberTest (0 ms total)

[----------] Global test environment tear-down
[==========] 70 tests from 11 test cases ran. (361 ms total)
[  PASSED  ] 70 tests.
<end of output>
Test time =   0.36 sec
----------------------------------------------------------
Test Passed.
"gtest-death-test_test" end time: Feb 23 18:43 PST
"gtest-death-test_test" time elapsed: 00:00:00
----------------------------------------------------------

21/60 Testing: gtest_environment_test
21/60 Test: gtest_environment_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_environment_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_environment_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FooTest
[ RUN      ] FooTest.Bar
[       OK ] FooTest.Bar (0 ms)
[----------] 1 test from FooTest (0 ms total)

[----------] Global test environment tear-down
/home/kapil/630/a6/googletest/googletest/test/gtest_environment_test.cc:78: Failure
Failed
Expected non-fatal failure in global tear-down.
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
[  FAILED  ] 0 tests, listed below:

 0 FAILED TESTS
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
/home/kapil/630/a6/googletest/googletest/test/gtest_environment_test.cc:65: Failure
Failed
Expected non-fatal failure in global set-up.
[----------] 1 test from FooTest
[ RUN      ] FooTest.Bar
[       OK ] FooTest.Bar (0 ms)
[----------] 1 test from FooTest (0 ms total)

[----------] Global test environment tear-down
/home/kapil/630/a6/googletest/googletest/test/gtest_environment_test.cc:78: Failure
Failed
Expected non-fatal failure in global tear-down.
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
[  FAILED  ] 0 tests, listed below:

 0 FAILED TESTS
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
/home/kapil/630/a6/googletest/googletest/test/gtest_environment_test.cc:68: Failure
Failed
Expected fatal failure in global set-up.
[----------] Global test environment tear-down
/home/kapil/630/a6/googletest/googletest/test/gtest_environment_test.cc:78: Failure
Failed
Expected non-fatal failure in global tear-down.
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
[  FAILED  ] 0 tests, listed below:

 0 FAILED TESTS
Note: Google Test filter = -*
[==========] Running 0 tests from 0 test cases.
[==========] 0 tests from 0 test cases ran. (0 ms total)
[  PASSED  ] 0 tests.
PASS
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest_environment_test" end time: Feb 23 18:43 PST
"gtest_environment_test" time elapsed: 00:00:00
----------------------------------------------------------

22/60 Testing: gtest-filepath_test
22/60 Test: gtest-filepath_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest-filepath_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest-filepath_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 57 tests from 13 test cases.
[----------] Global test environment set-up.
[----------] 1 test from GetCurrentDirTest
[ RUN      ] GetCurrentDirTest.ReturnsCurrentDir
[       OK ] GetCurrentDirTest.ReturnsCurrentDir (0 ms)
[----------] 1 test from GetCurrentDirTest (0 ms total)

[----------] 2 tests from IsEmptyTest
[ RUN      ] IsEmptyTest.ReturnsTrueForEmptyPath
[       OK ] IsEmptyTest.ReturnsTrueForEmptyPath (0 ms)
[ RUN      ] IsEmptyTest.ReturnsFalseForNonEmptyPath
[       OK ] IsEmptyTest.ReturnsFalseForNonEmptyPath (0 ms)
[----------] 2 tests from IsEmptyTest (0 ms total)

[----------] 6 tests from RemoveDirectoryNameTest
[ RUN      ] RemoveDirectoryNameTest.WhenEmptyName
[       OK ] RemoveDirectoryNameTest.WhenEmptyName (0 ms)
[ RUN      ] RemoveDirectoryNameTest.ButNoDirectory
[       OK ] RemoveDirectoryNameTest.ButNoDirectory (0 ms)
[ RUN      ] RemoveDirectoryNameTest.RootFileShouldGiveFileName
[       OK ] RemoveDirectoryNameTest.RootFileShouldGiveFileName (0 ms)
[ RUN      ] RemoveDirectoryNameTest.WhereThereIsNoFileName
[       OK ] RemoveDirectoryNameTest.WhereThereIsNoFileName (0 ms)
[ RUN      ] RemoveDirectoryNameTest.ShouldGiveFileName
[       OK ] RemoveDirectoryNameTest.ShouldGiveFileName (0 ms)
[ RUN      ] RemoveDirectoryNameTest.ShouldAlsoGiveFileName
[       OK ] RemoveDirectoryNameTest.ShouldAlsoGiveFileName (0 ms)
[----------] 6 tests from RemoveDirectoryNameTest (0 ms total)

[----------] 5 tests from RemoveFileNameTest
[ RUN      ] RemoveFileNameTest.EmptyName
[       OK ] RemoveFileNameTest.EmptyName (0 ms)
[ RUN      ] RemoveFileNameTest.ButNoFile
[       OK ] RemoveFileNameTest.ButNoFile (0 ms)
[ RUN      ] RemoveFileNameTest.GivesDirName
[       OK ] RemoveFileNameTest.GivesDirName (0 ms)
[ RUN      ] RemoveFileNameTest.GivesDirAndSubDirName
[       OK ] RemoveFileNameTest.GivesDirAndSubDirName (0 ms)
[ RUN      ] RemoveFileNameTest.GivesRootDir
[       OK ] RemoveFileNameTest.GivesRootDir (0 ms)
[----------] 5 tests from RemoveFileNameTest (0 ms total)

[----------] 6 tests from MakeFileNameTest
[ RUN      ] MakeFileNameTest.GenerateWhenNumberIsZero
[       OK ] MakeFileNameTest.GenerateWhenNumberIsZero (0 ms)
[ RUN      ] MakeFileNameTest.GenerateFileNameNumberGtZero
[       OK ] MakeFileNameTest.GenerateFileNameNumberGtZero (0 ms)
[ RUN      ] MakeFileNameTest.GenerateFileNameWithSlashNumberIsZero
[       OK ] MakeFileNameTest.GenerateFileNameWithSlashNumberIsZero (0 ms)
[ RUN      ] MakeFileNameTest.GenerateFileNameWithSlashNumberGtZero
[       OK ] MakeFileNameTest.GenerateFileNameWithSlashNumberGtZero (0 ms)
[ RUN      ] MakeFileNameTest.GenerateWhenNumberIsZeroAndDirIsEmpty
[       OK ] MakeFileNameTest.GenerateWhenNumberIsZeroAndDirIsEmpty (0 ms)
[ RUN      ] MakeFileNameTest.GenerateWhenNumberIsNotZeroAndDirIsEmpty
[       OK ] MakeFileNameTest.GenerateWhenNumberIsNotZeroAndDirIsEmpty (0 ms)
[----------] 6 tests from MakeFileNameTest (0 ms total)

[----------] 8 tests from ConcatPathsTest
[ RUN      ] ConcatPathsTest.WorksWhenDirDoesNotEndWithPathSep
[       OK ] ConcatPathsTest.WorksWhenDirDoesNotEndWithPathSep (0 ms)
[ RUN      ] ConcatPathsTest.WorksWhenPath1EndsWithPathSep
[       OK ] ConcatPathsTest.WorksWhenPath1EndsWithPathSep (0 ms)
[ RUN      ] ConcatPathsTest.Path1BeingEmpty
[       OK ] ConcatPathsTest.Path1BeingEmpty (0 ms)
[ RUN      ] ConcatPathsTest.Path2BeingEmpty
[       OK ] ConcatPathsTest.Path2BeingEmpty (0 ms)
[ RUN      ] ConcatPathsTest.BothPathBeingEmpty
[       OK ] ConcatPathsTest.BothPathBeingEmpty (0 ms)
[ RUN      ] ConcatPathsTest.Path1ContainsPathSep
[       OK ] ConcatPathsTest.Path1ContainsPathSep (0 ms)
[ RUN      ] ConcatPathsTest.Path2ContainsPathSep
[       OK ] ConcatPathsTest.Path2ContainsPathSep (0 ms)
[ RUN      ] ConcatPathsTest.Path2EndsWithPathSep
[       OK ] ConcatPathsTest.Path2EndsWithPathSep (0 ms)
[----------] 8 tests from ConcatPathsTest (0 ms total)

[----------] 5 tests from RemoveTrailingPathSeparatorTest
[ RUN      ] RemoveTrailingPathSeparatorTest.EmptyString
[       OK ] RemoveTrailingPathSeparatorTest.EmptyString (0 ms)
[ RUN      ] RemoveTrailingPathSeparatorTest.FileNoSlashString
[       OK ] RemoveTrailingPathSeparatorTest.FileNoSlashString (0 ms)
[ RUN      ] RemoveTrailingPathSeparatorTest.ShouldRemoveTrailingSeparator
[       OK ] RemoveTrailingPathSeparatorTest.ShouldRemoveTrailingSeparator (0 ms)
[ RUN      ] RemoveTrailingPathSeparatorTest.ShouldRemoveLastSeparator
[       OK ] RemoveTrailingPathSeparatorTest.ShouldRemoveLastSeparator (0 ms)
[ RUN      ] RemoveTrailingPathSeparatorTest.ShouldReturnUnmodified
[       OK ] RemoveTrailingPathSeparatorTest.ShouldReturnUnmodified (0 ms)
[----------] 5 tests from RemoveTrailingPathSeparatorTest (1 ms total)

[----------] 3 tests from DirectoryTest
[ RUN      ] DirectoryTest.RootDirectoryExists
[       OK ] DirectoryTest.RootDirectoryExists (0 ms)
[ RUN      ] DirectoryTest.EmptyPathDirectoryDoesNotExist
[       OK ] DirectoryTest.EmptyPathDirectoryDoesNotExist (0 ms)
[ RUN      ] DirectoryTest.CurrentDirectoryExists
[       OK ] DirectoryTest.CurrentDirectoryExists (0 ms)
[----------] 3 tests from DirectoryTest (0 ms total)

[----------] 3 tests from NormalizeTest
[ RUN      ] NormalizeTest.MultipleConsecutiveSepaparatorsInMidstring
[       OK ] NormalizeTest.MultipleConsecutiveSepaparatorsInMidstring (0 ms)
[ RUN      ] NormalizeTest.MultipleConsecutiveSepaparatorsAtStringStart
[       OK ] NormalizeTest.MultipleConsecutiveSepaparatorsAtStringStart (0 ms)
[ RUN      ] NormalizeTest.MultipleConsecutiveSepaparatorsAtStringEnd
[       OK ] NormalizeTest.MultipleConsecutiveSepaparatorsAtStringEnd (0 ms)
[----------] 3 tests from NormalizeTest (0 ms total)

[----------] 3 tests from AssignmentOperatorTest
[ RUN      ] AssignmentOperatorTest.DefaultAssignedToNonDefault
[       OK ] AssignmentOperatorTest.DefaultAssignedToNonDefault (0 ms)
[ RUN      ] AssignmentOperatorTest.NonDefaultAssignedToDefault
[       OK ] AssignmentOperatorTest.NonDefaultAssignedToDefault (0 ms)
[ RUN      ] AssignmentOperatorTest.ConstAssignedToNonConst
[       OK ] AssignmentOperatorTest.ConstAssignedToNonConst (0 ms)
[----------] 3 tests from AssignmentOperatorTest (0 ms total)

[----------] 4 tests from DirectoryCreationTest
[ RUN      ] DirectoryCreationTest.CreateDirectoriesRecursively
[       OK ] DirectoryCreationTest.CreateDirectoriesRecursively (0 ms)
[ RUN      ] DirectoryCreationTest.CreateDirectoriesForAlreadyExistingPath
[       OK ] DirectoryCreationTest.CreateDirectoriesForAlreadyExistingPath (0 ms)
[ RUN      ] DirectoryCreationTest.CreateDirectoriesAndUniqueFilename
[       OK ] DirectoryCreationTest.CreateDirectoriesAndUniqueFilename (0 ms)
[ RUN      ] DirectoryCreationTest.CreateDirectoriesFail
[       OK ] DirectoryCreationTest.CreateDirectoriesFail (0 ms)
[----------] 4 tests from DirectoryCreationTest (0 ms total)

[----------] 1 test from NoDirectoryCreationTest
[ RUN      ] NoDirectoryCreationTest.CreateNoDirectoriesForDefaultXmlFile
[       OK ] NoDirectoryCreationTest.CreateNoDirectoriesForDefaultXmlFile (0 ms)
[----------] 1 test from NoDirectoryCreationTest (0 ms total)

[----------] 10 tests from FilePathTest
[ RUN      ] FilePathTest.DefaultConstructor
[       OK ] FilePathTest.DefaultConstructor (0 ms)
[ RUN      ] FilePathTest.CharAndCopyConstructors
[       OK ] FilePathTest.CharAndCopyConstructors (0 ms)
[ RUN      ] FilePathTest.StringConstructor
[       OK ] FilePathTest.StringConstructor (0 ms)
[ RUN      ] FilePathTest.Set
[       OK ] FilePathTest.Set (0 ms)
[ RUN      ] FilePathTest.ToString
[       OK ] FilePathTest.ToString (0 ms)
[ RUN      ] FilePathTest.RemoveExtension
[       OK ] FilePathTest.RemoveExtension (0 ms)
[ RUN      ] FilePathTest.RemoveExtensionWhenThereIsNoExtension
[       OK ] FilePathTest.RemoveExtensionWhenThereIsNoExtension (0 ms)
[ RUN      ] FilePathTest.IsDirectory
[       OK ] FilePathTest.IsDirectory (0 ms)
[ RUN      ] FilePathTest.IsAbsolutePath
[       OK ] FilePathTest.IsAbsolutePath (0 ms)
[ RUN      ] FilePathTest.IsRootDirectory
[       OK ] FilePathTest.IsRootDirectory (0 ms)
[----------] 10 tests from FilePathTest (0 ms total)

[----------] Global test environment tear-down
[==========] 57 tests from 13 test cases ran. (1 ms total)
[  PASSED  ] 57 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest-filepath_test" end time: Feb 23 18:43 PST
"gtest-filepath_test" time elapsed: 00:00:00
----------------------------------------------------------

23/60 Testing: gtest-linked_ptr_test
23/60 Test: gtest-linked_ptr_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest-linked_ptr_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest-linked_ptr_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from LinkedPtrTest
[ RUN      ] LinkedPtrTest.GeneralTest
[       OK ] LinkedPtrTest.GeneralTest (0 ms)
[----------] 1 test from LinkedPtrTest (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest-linked_ptr_test" end time: Feb 23 18:43 PST
"gtest-linked_ptr_test" time elapsed: 00:00:00
----------------------------------------------------------

24/60 Testing: gtest-listener_test
24/60 Test: gtest-listener_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest-listener_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest-listener_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------

Repeating all tests (iteration 1) . . .

[==========] Running 2 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 2 tests from ListenerTest
[ RUN      ] ListenerTest.DoesFoo
[       OK ] ListenerTest.DoesFoo (0 ms)
[ RUN      ] ListenerTest.DoesBar
[       OK ] ListenerTest.DoesBar (0 ms)
[----------] 2 tests from ListenerTest (0 ms total)

[----------] Global test environment tear-down
[==========] 2 tests from 1 test case ran. (1 ms total)
[  PASSED  ] 2 tests.

Repeating all tests (iteration 2) . . .

[==========] Running 2 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 2 tests from ListenerTest
[ RUN      ] ListenerTest.DoesFoo
[       OK ] ListenerTest.DoesFoo (0 ms)
[ RUN      ] ListenerTest.DoesBar
[       OK ] ListenerTest.DoesBar (0 ms)
[----------] 2 tests from ListenerTest (0 ms total)

[----------] Global test environment tear-down
[==========] 2 tests from 1 test case ran. (0 ms total)
[  PASSED  ] 2 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest-listener_test" end time: Feb 23 18:43 PST
"gtest-listener_test" time elapsed: 00:00:00
----------------------------------------------------------

25/60 Testing: gtest_main_unittest
25/60 Test: gtest_main_unittest
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_main_unittest"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_main_unittest" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from GTestMainTest
[ RUN      ] GTestMainTest.ShouldSucceed
[       OK ] GTestMainTest.ShouldSucceed (0 ms)
[----------] 1 test from GTestMainTest (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest_main_unittest" end time: Feb 23 18:43 PST
"gtest_main_unittest" time elapsed: 00:00:00
----------------------------------------------------------

26/60 Testing: gtest-message_test
26/60 Test: gtest-message_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest-message_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest-message_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 17 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 17 tests from MessageTest
[ RUN      ] MessageTest.DefaultConstructor
[       OK ] MessageTest.DefaultConstructor (0 ms)
[ RUN      ] MessageTest.CopyConstructor
[       OK ] MessageTest.CopyConstructor (0 ms)
[ RUN      ] MessageTest.ConstructsFromCString
[       OK ] MessageTest.ConstructsFromCString (0 ms)
[ RUN      ] MessageTest.StreamsFloat
[       OK ] MessageTest.StreamsFloat (0 ms)
[ RUN      ] MessageTest.StreamsDouble
[       OK ] MessageTest.StreamsDouble (0 ms)
[ RUN      ] MessageTest.StreamsPointer
[       OK ] MessageTest.StreamsPointer (0 ms)
[ RUN      ] MessageTest.StreamsNullPointer
[       OK ] MessageTest.StreamsNullPointer (0 ms)
[ RUN      ] MessageTest.StreamsCString
[       OK ] MessageTest.StreamsCString (0 ms)
[ RUN      ] MessageTest.StreamsNullCString
[       OK ] MessageTest.StreamsNullCString (0 ms)
[ RUN      ] MessageTest.StreamsString
[       OK ] MessageTest.StreamsString (0 ms)
[ RUN      ] MessageTest.StreamsStringWithEmbeddedNUL
[       OK ] MessageTest.StreamsStringWithEmbeddedNUL (0 ms)
[ RUN      ] MessageTest.StreamsNULChar
[       OK ] MessageTest.StreamsNULChar (0 ms)
[ RUN      ] MessageTest.StreamsInt
[       OK ] MessageTest.StreamsInt (0 ms)
[ RUN      ] MessageTest.StreamsBasicIoManip
[       OK ] MessageTest.StreamsBasicIoManip (0 ms)
[ RUN      ] MessageTest.GetString
[       OK ] MessageTest.GetString (0 ms)
[ RUN      ] MessageTest.StreamsToOStream
[       OK ] MessageTest.StreamsToOStream (0 ms)
[ RUN      ] MessageTest.DoesNotTakeUpMuchStackSpace
[       OK ] MessageTest.DoesNotTakeUpMuchStackSpace (0 ms)
[----------] 17 tests from MessageTest (0 ms total)

[----------] Global test environment tear-down
[==========] 17 tests from 1 test case ran. (0 ms total)
[  PASSED  ] 17 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest-message_test" end time: Feb 23 18:43 PST
"gtest-message_test" time elapsed: 00:00:00
----------------------------------------------------------

27/60 Testing: gtest_no_test_unittest
27/60 Test: gtest_no_test_unittest
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_no_test_unittest"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_no_test_unittest" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
/home/kapil/630/a6/googletest/googletest/test/gtest_no_test_unittest.cc:52: Failure
      Expected: 1
To be equal to: 2
[==========] Running 0 tests from 0 test cases.
[==========] 0 tests from 0 test cases ran. (0 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 0 tests, listed below:

 0 FAILED TESTS
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest_no_test_unittest" end time: Feb 23 18:43 PST
"gtest_no_test_unittest" time elapsed: 00:00:00
----------------------------------------------------------

28/60 Testing: gtest-options_test
28/60 Test: gtest-options_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest-options_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest-options_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 12 tests from 3 test cases.
[----------] Global test environment set-up.
[----------] 5 tests from XmlOutputTest
[ RUN      ] XmlOutputTest.GetOutputFormatDefault
[       OK ] XmlOutputTest.GetOutputFormatDefault (0 ms)
[ RUN      ] XmlOutputTest.GetOutputFormat
[       OK ] XmlOutputTest.GetOutputFormat (0 ms)
[ RUN      ] XmlOutputTest.GetOutputFileDefault
[       OK ] XmlOutputTest.GetOutputFileDefault (0 ms)
[ RUN      ] XmlOutputTest.GetOutputFileSingleFile
[       OK ] XmlOutputTest.GetOutputFileSingleFile (0 ms)
[ RUN      ] XmlOutputTest.GetOutputFileFromDirectoryPath
[       OK ] XmlOutputTest.GetOutputFileFromDirectoryPath (0 ms)
[----------] 5 tests from XmlOutputTest (0 ms total)

[----------] 1 test from OutputFileHelpersTest
[ RUN      ] OutputFileHelpersTest.GetCurrentExecutableName
[       OK ] OutputFileHelpersTest.GetCurrentExecutableName (0 ms)
[----------] 1 test from OutputFileHelpersTest (0 ms total)

[----------] 6 tests from XmlOutputChangeDirTest
[ RUN      ] XmlOutputChangeDirTest.PreserveOriginalWorkingDirWithDefault
[       OK ] XmlOutputChangeDirTest.PreserveOriginalWorkingDirWithDefault (0 ms)
[ RUN      ] XmlOutputChangeDirTest.PreserveOriginalWorkingDirWithDefaultXML
[       OK ] XmlOutputChangeDirTest.PreserveOriginalWorkingDirWithDefaultXML (0 ms)
[ RUN      ] XmlOutputChangeDirTest.PreserveOriginalWorkingDirWithRelativeFile
[       OK ] XmlOutputChangeDirTest.PreserveOriginalWorkingDirWithRelativeFile (0 ms)
[ RUN      ] XmlOutputChangeDirTest.PreserveOriginalWorkingDirWithRelativePath
[       OK ] XmlOutputChangeDirTest.PreserveOriginalWorkingDirWithRelativePath (0 ms)
[ RUN      ] XmlOutputChangeDirTest.PreserveOriginalWorkingDirWithAbsoluteFile
[       OK ] XmlOutputChangeDirTest.PreserveOriginalWorkingDirWithAbsoluteFile (0 ms)
[ RUN      ] XmlOutputChangeDirTest.PreserveOriginalWorkingDirWithAbsolutePath
[       OK ] XmlOutputChangeDirTest.PreserveOriginalWorkingDirWithAbsolutePath (0 ms)
[----------] 6 tests from XmlOutputChangeDirTest (0 ms total)

[----------] Global test environment tear-down
[==========] 12 tests from 3 test cases ran. (0 ms total)
[  PASSED  ] 12 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest-options_test" end time: Feb 23 18:43 PST
"gtest-options_test" time elapsed: 00:00:00
----------------------------------------------------------

29/60 Testing: gtest-param-test_test
29/60 Test: gtest-param-test_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest-param-test_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest-param-test_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
[==========] Running 79 tests from 29 test cases.
[----------] Global test environment set-up.
[----------] 1 test from ParameterizedDeathTest
[ RUN      ] ParameterizedDeathTest.GetParamDiesFromTestF
[       OK ] ParameterizedDeathTest.GetParamDiesFromTestF (108 ms)
[----------] 1 test from ParameterizedDeathTest (108 ms total)

[----------] 1 test from IteratorTest
[ RUN      ] IteratorTest.ParamIteratorConformsToForwardIteratorConcept
[       OK ] IteratorTest.ParamIteratorConformsToForwardIteratorConcept (0 ms)
[----------] 1 test from IteratorTest (0 ms total)

[----------] 7 tests from RangeTest
[ RUN      ] RangeTest.IntRangeWithDefaultStep
[       OK ] RangeTest.IntRangeWithDefaultStep (0 ms)
[ RUN      ] RangeTest.IntRangeSingleValue
[       OK ] RangeTest.IntRangeSingleValue (0 ms)
[ RUN      ] RangeTest.IntRangeEmpty
[       OK ] RangeTest.IntRangeEmpty (0 ms)
[ RUN      ] RangeTest.IntRangeWithCustomStep
[       OK ] RangeTest.IntRangeWithCustomStep (0 ms)
[ RUN      ] RangeTest.IntRangeWithCustomStepOverUpperBound
[       OK ] RangeTest.IntRangeWithCustomStepOverUpperBound (0 ms)
[ RUN      ] RangeTest.WorksWithACustomType
[       OK ] RangeTest.WorksWithACustomType (0 ms)
[ RUN      ] RangeTest.WorksWithACustomTypeWithDifferentIncrementType
[       OK ] RangeTest.WorksWithACustomTypeWithDifferentIncrementType (0 ms)
[----------] 7 tests from RangeTest (0 ms total)

[----------] 7 tests from ValuesInTest
[ RUN      ] ValuesInTest.ValuesInArray
[       OK ] ValuesInTest.ValuesInArray (0 ms)
[ RUN      ] ValuesInTest.ValuesInConstArray
[       OK ] ValuesInTest.ValuesInConstArray (0 ms)
[ RUN      ] ValuesInTest.ValuesInSingleElementArray
[       OK ] ValuesInTest.ValuesInSingleElementArray (0 ms)
[ RUN      ] ValuesInTest.ValuesInVector
[       OK ] ValuesInTest.ValuesInVector (0 ms)
[ RUN      ] ValuesInTest.ValuesInIteratorRange
[       OK ] ValuesInTest.ValuesInIteratorRange (0 ms)
[ RUN      ] ValuesInTest.ValuesInSingleElementIteratorRange
[       OK ] ValuesInTest.ValuesInSingleElementIteratorRange (0 ms)
[ RUN      ] ValuesInTest.ValuesInEmptyIteratorRange
[       OK ] ValuesInTest.ValuesInEmptyIteratorRange (0 ms)
[----------] 7 tests from ValuesInTest (0 ms total)

[----------] 4 tests from ValuesTest
[ RUN      ] ValuesTest.ValuesWorks
[       OK ] ValuesTest.ValuesWorks (0 ms)
[ RUN      ] ValuesTest.ValuesWorksForValuesOfCompatibleTypes
[       OK ] ValuesTest.ValuesWorksForValuesOfCompatibleTypes (0 ms)
[ RUN      ] ValuesTest.ValuesWorksForMaxLengthList
[       OK ] ValuesTest.ValuesWorksForMaxLengthList (0 ms)
[ RUN      ] ValuesTest.ValuesWithSingleParameter
[       OK ] ValuesTest.ValuesWithSingleParameter (0 ms)
[----------] 4 tests from ValuesTest (0 ms total)

[----------] 1 test from BoolTest
[ RUN      ] BoolTest.BoolWorks
[       OK ] BoolTest.BoolWorks (0 ms)
[----------] 1 test from BoolTest (0 ms total)

[----------] 7 tests from CombineTest
[ RUN      ] CombineTest.CombineWithTwoParameters
[       OK ] CombineTest.CombineWithTwoParameters (0 ms)
[ RUN      ] CombineTest.CombineWithThreeParameters
[       OK ] CombineTest.CombineWithThreeParameters (0 ms)
[ RUN      ] CombineTest.CombineWithFirstParameterSingleValue
[       OK ] CombineTest.CombineWithFirstParameterSingleValue (0 ms)
[ RUN      ] CombineTest.CombineWithSecondParameterSingleValue
[       OK ] CombineTest.CombineWithSecondParameterSingleValue (0 ms)
[ RUN      ] CombineTest.CombineWithFirstParameterEmptyRange
[       OK ] CombineTest.CombineWithFirstParameterEmptyRange (0 ms)
[ RUN      ] CombineTest.CombineWithSecondParameterEmptyRange
[       OK ] CombineTest.CombineWithSecondParameterEmptyRange (0 ms)
[ RUN      ] CombineTest.CombineWithMaxNumberOfParameters
[       OK ] CombineTest.CombineWithMaxNumberOfParameters (0 ms)
[----------] 7 tests from CombineTest (0 ms total)

[----------] 1 test from ParamGeneratorTest
[ RUN      ] ParamGeneratorTest.AssignmentWorks
[       OK ] ParamGeneratorTest.AssignmentWorks (0 ms)
[----------] 1 test from ParamGeneratorTest (0 ms total)

[----------] 1 test from CustomNamingTest
[ RUN      ] CustomNamingTest.CheckNameRegistry
[       OK ] CustomNamingTest.CheckNameRegistry (0 ms)
[----------] 1 test from CustomNamingTest (0 ms total)

[----------] 1 test from NonParameterizedBaseTest
[ RUN      ] NonParameterizedBaseTest.FixtureIsInitialized
[       OK ] NonParameterizedBaseTest.FixtureIsInitialized (0 ms)
[----------] 1 test from NonParameterizedBaseTest (0 ms total)

[----------] 1 test from CompileTest
[ RUN      ] CompileTest.CombineIsDefinedOnlyWhenGtestHasParamTestIsDefined
[       OK ] CompileTest.CombineIsDefinedOnlyWhenGtestHasParamTestIsDefined (0 ms)
[----------] 1 test from CompileTest (0 ms total)

[----------] 3 tests from TestExpansionModule/TestGenerationTest
[ RUN      ] TestExpansionModule/TestGenerationTest.TestsExpandedAndRun/0
[       OK ] TestExpansionModule/TestGenerationTest.TestsExpandedAndRun/0 (0 ms)
[ RUN      ] TestExpansionModule/TestGenerationTest.TestsExpandedAndRun/1
[       OK ] TestExpansionModule/TestGenerationTest.TestsExpandedAndRun/1 (0 ms)
[ RUN      ] TestExpansionModule/TestGenerationTest.TestsExpandedAndRun/2
[       OK ] TestExpansionModule/TestGenerationTest.TestsExpandedAndRun/2 (0 ms)
[----------] 3 tests from TestExpansionModule/TestGenerationTest (1 ms total)

[----------] 1 test from GenEvalModule/GeneratorEvaluationTest
[ RUN      ] GenEvalModule/GeneratorEvaluationTest.GeneratorsEvaluatedInMain/0
[       OK ] GenEvalModule/GeneratorEvaluationTest.GeneratorsEvaluatedInMain/0 (0 ms)
[----------] 1 test from GenEvalModule/GeneratorEvaluationTest (0 ms total)

[----------] 1 test from ExternalGeneratorModule/ExternalGeneratorTest
[ RUN      ] ExternalGeneratorModule/ExternalGeneratorTest.ExternalGenerator/0
[       OK ] ExternalGeneratorModule/ExternalGeneratorTest.ExternalGenerator/0 (0 ms)
[----------] 1 test from ExternalGeneratorModule/ExternalGeneratorTest (0 ms total)

[----------] 2 tests from MultiplesOf33/ExternalInstantiationTest
[ RUN      ] MultiplesOf33/ExternalInstantiationTest.IsMultipleOf33/0
[       OK ] MultiplesOf33/ExternalInstantiationTest.IsMultipleOf33/0 (0 ms)
[ RUN      ] MultiplesOf33/ExternalInstantiationTest.IsMultipleOf33/1
[       OK ] MultiplesOf33/ExternalInstantiationTest.IsMultipleOf33/1 (0 ms)
[----------] 2 tests from MultiplesOf33/ExternalInstantiationTest (0 ms total)

[----------] 2 tests from Sequence1/MultipleInstantiationTest
[ RUN      ] Sequence1/MultipleInstantiationTest.AllowsMultipleInstances/0
[       OK ] Sequence1/MultipleInstantiationTest.AllowsMultipleInstances/0 (0 ms)
[ RUN      ] Sequence1/MultipleInstantiationTest.AllowsMultipleInstances/1
[       OK ] Sequence1/MultipleInstantiationTest.AllowsMultipleInstances/1 (0 ms)
[----------] 2 tests from Sequence1/MultipleInstantiationTest (0 ms total)

[----------] 2 tests from Sequence2/MultipleInstantiationTest
[ RUN      ] Sequence2/MultipleInstantiationTest.AllowsMultipleInstances/0
[       OK ] Sequence2/MultipleInstantiationTest.AllowsMultipleInstances/0 (0 ms)
[ RUN      ] Sequence2/MultipleInstantiationTest.AllowsMultipleInstances/1
[       OK ] Sequence2/MultipleInstantiationTest.AllowsMultipleInstances/1 (0 ms)
[----------] 2 tests from Sequence2/MultipleInstantiationTest (0 ms total)

[----------] 2 tests from Sequence1/InstantiationInMultipleTranslaionUnitsTest
[ RUN      ] Sequence1/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/0
[       OK ] Sequence1/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/0 (0 ms)
[ RUN      ] Sequence1/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/1
[       OK ] Sequence1/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/1 (0 ms)
[----------] 2 tests from Sequence1/InstantiationInMultipleTranslaionUnitsTest (0 ms total)

[----------] 3 tests from Sequence2/InstantiationInMultipleTranslaionUnitsTest
[ RUN      ] Sequence2/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/0
[       OK ] Sequence2/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/0 (0 ms)
[ RUN      ] Sequence2/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/1
[       OK ] Sequence2/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/1 (0 ms)
[ RUN      ] Sequence2/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/2
[       OK ] Sequence2/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/2 (0 ms)
[----------] 3 tests from Sequence2/InstantiationInMultipleTranslaionUnitsTest (0 ms total)

[----------] 3 tests from FourElemSequence/SeparateInstanceTest
[ RUN      ] FourElemSequence/SeparateInstanceTest.TestsRunInSeparateInstances/0
[       OK ] FourElemSequence/SeparateInstanceTest.TestsRunInSeparateInstances/0 (0 ms)
[ RUN      ] FourElemSequence/SeparateInstanceTest.TestsRunInSeparateInstances/1
[       OK ] FourElemSequence/SeparateInstanceTest.TestsRunInSeparateInstances/1 (0 ms)
[ RUN      ] FourElemSequence/SeparateInstanceTest.TestsRunInSeparateInstances/2
[       OK ] FourElemSequence/SeparateInstanceTest.TestsRunInSeparateInstances/2 (0 ms)
[----------] 3 tests from FourElemSequence/SeparateInstanceTest (0 ms total)

[----------] 5 tests from ZeroToFiveSequence/NamingTest
[ RUN      ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/0
[       OK ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/0 (0 ms)
[ RUN      ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/1
[       OK ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/1 (0 ms)
[ RUN      ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/2
[       OK ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/2 (0 ms)
[ RUN      ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/3
[       OK ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/3 (0 ms)
[ RUN      ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/4
[       OK ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/4 (0 ms)
[----------] 5 tests from ZeroToFiveSequence/NamingTest (0 ms total)

[----------] 1 test from CustomParamNameFunctor/CustomFunctorNamingTest
[ RUN      ] CustomParamNameFunctor/CustomFunctorNamingTest.CustomTestNames/FunctorName
[       OK ] CustomParamNameFunctor/CustomFunctorNamingTest.CustomTestNames/FunctorName (0 ms)
[----------] 1 test from CustomParamNameFunctor/CustomFunctorNamingTest (0 ms total)

[----------] 3 tests from AllAllowedCharacters/CustomFunctorNamingTest
[ RUN      ] AllAllowedCharacters/CustomFunctorNamingTest.CustomTestNames/abcdefghijklmnopqrstuvwxyz
[       OK ] AllAllowedCharacters/CustomFunctorNamingTest.CustomTestNames/abcdefghijklmnopqrstuvwxyz (0 ms)
[ RUN      ] AllAllowedCharacters/CustomFunctorNamingTest.CustomTestNames/ABCDEFGHIJKLMNOPQRSTUVWXYZ
[       OK ] AllAllowedCharacters/CustomFunctorNamingTest.CustomTestNames/ABCDEFGHIJKLMNOPQRSTUVWXYZ (0 ms)
[ RUN      ] AllAllowedCharacters/CustomFunctorNamingTest.CustomTestNames/01234567890_
[       OK ] AllAllowedCharacters/CustomFunctorNamingTest.CustomTestNames/01234567890_ (0 ms)
[----------] 3 tests from AllAllowedCharacters/CustomFunctorNamingTest (0 ms total)

[----------] 1 test from CustomParamNameFunction/CustomFunctionNamingTest
[ RUN      ] CustomParamNameFunction/CustomFunctionNamingTest.CustomTestNames/FunctionName
[       OK ] CustomParamNameFunction/CustomFunctionNamingTest.CustomTestNames/FunctionName (0 ms)
[----------] 1 test from CustomParamNameFunction/CustomFunctionNamingTest (0 ms total)

[----------] 5 tests from PrintToString/CustomIntegerNamingTest
[ RUN      ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/0
[       OK ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/0 (0 ms)
[ RUN      ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/1
[       OK ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/1 (0 ms)
[ RUN      ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/2
[       OK ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/2 (0 ms)
[ RUN      ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/3
[       OK ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/3 (0 ms)
[ RUN      ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/4
[       OK ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/4 (0 ms)
[----------] 5 tests from PrintToString/CustomIntegerNamingTest (0 ms total)

[----------] 2 tests from PrintToString/CustomStructNamingTest
[ RUN      ] PrintToString/CustomStructNamingTest.TestsReportCorrectNames/0
[       OK ] PrintToString/CustomStructNamingTest.TestsReportCorrectNames/0 (0 ms)
[ RUN      ] PrintToString/CustomStructNamingTest.TestsReportCorrectNames/1
[       OK ] PrintToString/CustomStructNamingTest.TestsReportCorrectNames/1 (0 ms)
[----------] 2 tests from PrintToString/CustomStructNamingTest (0 ms total)

[----------] 5 tests from StatefulNamingFunctor/StatefulNamingTest
[ RUN      ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/0
[       OK ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/0 (0 ms)
[ RUN      ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/1
[       OK ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/1 (0 ms)
[ RUN      ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/2
[       OK ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/2 (0 ms)
[ RUN      ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/3
[       OK ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/3 (0 ms)
[ RUN      ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/4
[       OK ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/4 (0 ms)
[----------] 5 tests from StatefulNamingFunctor/StatefulNamingTest (0 ms total)

[----------] 1 test from InstantiationWithComments/CommentTest
[ RUN      ] InstantiationWithComments/CommentTest.TestsCorrectlyReportUnstreamableParams/0
[       OK ] InstantiationWithComments/CommentTest.TestsCorrectlyReportUnstreamableParams/0 (0 ms)
[----------] 1 test from InstantiationWithComments/CommentTest (0 ms total)

[----------] 5 tests from RangeZeroToFive/ParameterizedDerivedTest
[ RUN      ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/0
[       OK ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/0 (0 ms)
[ RUN      ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/1
[       OK ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/1 (0 ms)
[ RUN      ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/2
[       OK ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/2 (0 ms)
[ RUN      ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/3
[       OK ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/3 (0 ms)
[ RUN      ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/4
[       OK ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/4 (0 ms)
[----------] 5 tests from RangeZeroToFive/ParameterizedDerivedTest (0 ms total)

[----------] Global test environment tear-down
[==========] 79 tests from 29 test cases ran. (109 ms total)
[  PASSED  ] 79 tests.
<end of output>
Test time =   0.11 sec
----------------------------------------------------------
Test Passed.
"gtest-param-test_test" end time: Feb 23 18:43 PST
"gtest-param-test_test" time elapsed: 00:00:00
----------------------------------------------------------

30/60 Testing: gtest-port_test
30/60 Test: gtest-port_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest-port_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest-port_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 53 tests from 18 test cases.
[----------] Global test environment set-up.
[----------] 2 tests from GtestCheckDeathTest
[ RUN      ] GtestCheckDeathTest.DiesWithCorrectOutputOnFailure
[       OK ] GtestCheckDeathTest.DiesWithCorrectOutputOnFailure (107 ms)
[ RUN      ] GtestCheckDeathTest.LivesSilentlyOnSuccess
[       OK ] GtestCheckDeathTest.LivesSilentlyOnSuccess (0 ms)
[----------] 2 tests from GtestCheckDeathTest (107 ms total)

[----------] 1 test from CaptureDeathTest
[ RUN      ] CaptureDeathTest.CannotReenterStdoutCapture
[       OK ] CaptureDeathTest.CannotReenterStdoutCapture (105 ms)
[----------] 1 test from CaptureDeathTest (105 ms total)

[----------] 1 test from MutexDeathTest
[ RUN      ] MutexDeathTest.AssertHeldShouldAssertWhenNotLocked
[       OK ] MutexDeathTest.AssertHeldShouldAssertWhenNotLocked (106 ms)
[----------] 1 test from MutexDeathTest (106 ms total)

[----------] 4 tests from IsXDigitTest
[ RUN      ] IsXDigitTest.WorksForNarrowAscii
[       OK ] IsXDigitTest.WorksForNarrowAscii (0 ms)
[ RUN      ] IsXDigitTest.ReturnsFalseForNarrowNonAscii
[       OK ] IsXDigitTest.ReturnsFalseForNarrowNonAscii (0 ms)
[ RUN      ] IsXDigitTest.WorksForWideAscii
[       OK ] IsXDigitTest.WorksForWideAscii (0 ms)
[ RUN      ] IsXDigitTest.ReturnsFalseForWideNonAscii
[       OK ] IsXDigitTest.ReturnsFalseForWideNonAscii (0 ms)
[----------] 4 tests from IsXDigitTest (0 ms total)

[----------] 6 tests from ImplicitCastTest
[ RUN      ] ImplicitCastTest.ConvertsPointers
[       OK ] ImplicitCastTest.ConvertsPointers (0 ms)
[ RUN      ] ImplicitCastTest.CanUseInheritance
[       OK ] ImplicitCastTest.CanUseInheritance (0 ms)
[ RUN      ] ImplicitCastTest.CanUseNonConstCastOperator
[       OK ] ImplicitCastTest.CanUseNonConstCastOperator (0 ms)
[ RUN      ] ImplicitCastTest.CanUseConstCastOperatorOnConstValues
[       OK ] ImplicitCastTest.CanUseConstCastOperatorOnConstValues (0 ms)
[ RUN      ] ImplicitCastTest.CanSelectBetweenConstAndNonConstCasrAppropriately
[       OK ] ImplicitCastTest.CanSelectBetweenConstAndNonConstCasrAppropriately (0 ms)
[ RUN      ] ImplicitCastTest.CanUseImplicitConstructor
[       OK ] ImplicitCastTest.CanUseImplicitConstructor (0 ms)
[----------] 6 tests from ImplicitCastTest (0 ms total)

[----------] 3 tests from IteratorTraitsTest
[ RUN      ] IteratorTraitsTest.WorksForSTLContainerIterators
[       OK ] IteratorTraitsTest.WorksForSTLContainerIterators (0 ms)
[ RUN      ] IteratorTraitsTest.WorksForPointerToNonConst
[       OK ] IteratorTraitsTest.WorksForPointerToNonConst (0 ms)
[ RUN      ] IteratorTraitsTest.WorksForPointerToConst
[       OK ] IteratorTraitsTest.WorksForPointerToConst (0 ms)
[----------] 3 tests from IteratorTraitsTest (0 ms total)

[----------] 1 test from ScopedPtrTest
[ RUN      ] ScopedPtrTest.DefinesElementType
[       OK ] ScopedPtrTest.DefinesElementType (0 ms)
[----------] 1 test from ScopedPtrTest (0 ms total)

[----------] 2 tests from GtestCheckSyntaxTest
[ RUN      ] GtestCheckSyntaxTest.BehavesLikeASingleStatement
[       OK ] GtestCheckSyntaxTest.BehavesLikeASingleStatement (0 ms)
[ RUN      ] GtestCheckSyntaxTest.WorksWithSwitch
[       OK ] GtestCheckSyntaxTest.WorksWithSwitch (0 ms)
[----------] 2 tests from GtestCheckSyntaxTest (0 ms total)

[----------] 4 tests from FormatFileLocationTest
[ RUN      ] FormatFileLocationTest.FormatsFileLocation
[       OK ] FormatFileLocationTest.FormatsFileLocation (0 ms)
[ RUN      ] FormatFileLocationTest.FormatsUnknownFile
[       OK ] FormatFileLocationTest.FormatsUnknownFile (0 ms)
[ RUN      ] FormatFileLocationTest.FormatsUknownLine
[       OK ] FormatFileLocationTest.FormatsUknownLine (0 ms)
[ RUN      ] FormatFileLocationTest.FormatsUknownFileAndLine
[       OK ] FormatFileLocationTest.FormatsUknownFileAndLine (0 ms)
[----------] 4 tests from FormatFileLocationTest (0 ms total)

[----------] 4 tests from FormatCompilerIndependentFileLocationTest
[ RUN      ] FormatCompilerIndependentFileLocationTest.FormatsFileLocation
[       OK ] FormatCompilerIndependentFileLocationTest.FormatsFileLocation (0 ms)
[ RUN      ] FormatCompilerIndependentFileLocationTest.FormatsUknownFile
[       OK ] FormatCompilerIndependentFileLocationTest.FormatsUknownFile (0 ms)
[ RUN      ] FormatCompilerIndependentFileLocationTest.FormatsUknownLine
[       OK ] FormatCompilerIndependentFileLocationTest.FormatsUknownLine (0 ms)
[ RUN      ] FormatCompilerIndependentFileLocationTest.FormatsUknownFileAndLine
[       OK ] FormatCompilerIndependentFileLocationTest.FormatsUknownFileAndLine (0 ms)
[----------] 4 tests from FormatCompilerIndependentFileLocationTest (0 ms total)

[----------] 1 test from GetThreadCountTest
[ RUN      ] GetThreadCountTest.ReturnsCorrectValue
[       OK ] GetThreadCountTest.ReturnsCorrectValue (0 ms)
[----------] 1 test from GetThreadCountTest (0 ms total)

[----------] 1 test from RegexEngineSelectionTest
[ RUN      ] RegexEngineSelectionTest.SelectsCorrectRegexEngine
[       OK ] RegexEngineSelectionTest.SelectsCorrectRegexEngine (0 ms)
[----------] 1 test from RegexEngineSelectionTest (1 ms total)

[----------] 4 tests from RETest/0, where TypeParam = std::string
[ RUN      ] RETest/0.ImplicitConstructorWorks
[       OK ] RETest/0.ImplicitConstructorWorks (0 ms)
[ RUN      ] RETest/0.RejectsInvalidRegex
[       OK ] RETest/0.RejectsInvalidRegex (0 ms)
[ RUN      ] RETest/0.FullMatchWorks
[       OK ] RETest/0.FullMatchWorks (0 ms)
[ RUN      ] RETest/0.PartialMatchWorks
[       OK ] RETest/0.PartialMatchWorks (0 ms)
[----------] 4 tests from RETest/0 (0 ms total)

[----------] 4 tests from RETest/1, where TypeParam = char const*
[ RUN      ] RETest/1.ImplicitConstructorWorks
[       OK ] RETest/1.ImplicitConstructorWorks (0 ms)
[ RUN      ] RETest/1.RejectsInvalidRegex
[       OK ] RETest/1.RejectsInvalidRegex (0 ms)
[ RUN      ] RETest/1.FullMatchWorks
[       OK ] RETest/1.FullMatchWorks (0 ms)
[ RUN      ] RETest/1.PartialMatchWorks
[       OK ] RETest/1.PartialMatchWorks (0 ms)
[----------] 4 tests from RETest/1 (0 ms total)

[----------] 3 tests from CaptureTest
[ RUN      ] CaptureTest.CapturesStdout
[       OK ] CaptureTest.CapturesStdout (0 ms)
[ RUN      ] CaptureTest.CapturesStderr
[       OK ] CaptureTest.CapturesStderr (0 ms)
[ RUN      ] CaptureTest.CapturesStdoutAndStderr
[       OK ] CaptureTest.CapturesStdoutAndStderr (0 ms)
[----------] 3 tests from CaptureTest (0 ms total)

[----------] 9 tests from ThreadLocalTest
[ RUN      ] ThreadLocalTest.DefaultConstructorInitializesToDefaultValues
[       OK ] ThreadLocalTest.DefaultConstructorInitializesToDefaultValues (0 ms)
[ RUN      ] ThreadLocalTest.SingleParamConstructorInitializesToParam
[       OK ] ThreadLocalTest.SingleParamConstructorInitializesToParam (0 ms)
[ RUN      ] ThreadLocalTest.ValueDefaultContructorIsNotRequiredForParamVersion
[       OK ] ThreadLocalTest.ValueDefaultContructorIsNotRequiredForParamVersion (0 ms)
[ RUN      ] ThreadLocalTest.GetAndPointerReturnSameValue
[       OK ] ThreadLocalTest.GetAndPointerReturnSameValue (0 ms)
[ RUN      ] ThreadLocalTest.PointerAndConstPointerReturnSameValue
[       OK ] ThreadLocalTest.PointerAndConstPointerReturnSameValue (0 ms)
[ RUN      ] ThreadLocalTest.ParameterizedConstructorSetsDefault
[       OK ] ThreadLocalTest.ParameterizedConstructorSetsDefault (0 ms)
[ RUN      ] ThreadLocalTest.DestroysManagedObjectForOwnThreadWhenDying
[       OK ] ThreadLocalTest.DestroysManagedObjectForOwnThreadWhenDying (0 ms)
[ RUN      ] ThreadLocalTest.DestroysManagedObjectAtThreadExit
[       OK ] ThreadLocalTest.DestroysManagedObjectAtThreadExit (1 ms)
[ RUN      ] ThreadLocalTest.ThreadLocalMutationsAffectOnlyCurrentThread
[       OK ] ThreadLocalTest.ThreadLocalMutationsAffectOnlyCurrentThread (0 ms)
[----------] 9 tests from ThreadLocalTest (1 ms total)

[----------] 1 test from ThreadWithParamTest
[ RUN      ] ThreadWithParamTest.ConstructorExecutesThreadFunc
[       OK ] ThreadWithParamTest.ConstructorExecutesThreadFunc (0 ms)
[----------] 1 test from ThreadWithParamTest (0 ms total)

[----------] 2 tests from MutexTest
[ RUN      ] MutexTest.AssertHeldShouldNotAssertWhenLocked
[       OK ] MutexTest.AssertHeldShouldNotAssertWhenLocked (0 ms)
[ RUN      ] MutexTest.OnlyOneThreadCanLockAtATime
[       OK ] MutexTest.OnlyOneThreadCanLockAtATime (2029 ms)
[----------] 2 tests from MutexTest (2029 ms total)

[----------] Global test environment tear-down
[==========] 53 tests from 18 test cases ran. (2350 ms total)
[  PASSED  ] 53 tests.
<end of output>
Test time =   2.35 sec
----------------------------------------------------------
Test Passed.
"gtest-port_test" end time: Feb 23 18:43 PST
"gtest-port_test" time elapsed: 00:00:02
----------------------------------------------------------

31/60 Testing: gtest_pred_impl_unittest
31/60 Test: gtest_pred_impl_unittest
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_pred_impl_unittest"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_pred_impl_unittest" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 160 tests from 20 test cases.
[----------] Global test environment set-up.
[----------] 8 tests from EXPECT_PRED1Test
[ RUN      ] EXPECT_PRED1Test.FunctionOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED1Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED1Test.FunctionOnUserTypeSuccess
[       OK ] EXPECT_PRED1Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED1Test.FunctorOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED1Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED1Test.FunctorOnUserTypeSuccess
[       OK ] EXPECT_PRED1Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED1Test.FunctionOnBuiltInTypeFailure
[       OK ] EXPECT_PRED1Test.FunctionOnBuiltInTypeFailure (1 ms)
[ RUN      ] EXPECT_PRED1Test.FunctionOnUserTypeFailure
[       OK ] EXPECT_PRED1Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED1Test.FunctorOnBuiltInTypeFailure
[       OK ] EXPECT_PRED1Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED1Test.FunctorOnUserTypeFailure
[       OK ] EXPECT_PRED1Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from EXPECT_PRED1Test (1 ms total)

[----------] 8 tests from ASSERT_PRED1Test
[ RUN      ] ASSERT_PRED1Test.FunctionOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED1Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED1Test.FunctionOnUserTypeSuccess
[       OK ] ASSERT_PRED1Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED1Test.FunctorOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED1Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED1Test.FunctorOnUserTypeSuccess
[       OK ] ASSERT_PRED1Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED1Test.FunctionOnBuiltInTypeFailure
[       OK ] ASSERT_PRED1Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED1Test.FunctionOnUserTypeFailure
[       OK ] ASSERT_PRED1Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED1Test.FunctorOnBuiltInTypeFailure
[       OK ] ASSERT_PRED1Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED1Test.FunctorOnUserTypeFailure
[       OK ] ASSERT_PRED1Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from ASSERT_PRED1Test (0 ms total)

[----------] 8 tests from EXPECT_PRED_FORMAT1Test
[ RUN      ] EXPECT_PRED_FORMAT1Test.FunctionOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED_FORMAT1Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT1Test.FunctionOnUserTypeSuccess
[       OK ] EXPECT_PRED_FORMAT1Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT1Test.FunctorOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED_FORMAT1Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT1Test.FunctorOnUserTypeSuccess
[       OK ] EXPECT_PRED_FORMAT1Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT1Test.FunctionOnBuiltInTypeFailure
[       OK ] EXPECT_PRED_FORMAT1Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT1Test.FunctionOnUserTypeFailure
[       OK ] EXPECT_PRED_FORMAT1Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT1Test.FunctorOnBuiltInTypeFailure
[       OK ] EXPECT_PRED_FORMAT1Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT1Test.FunctorOnUserTypeFailure
[       OK ] EXPECT_PRED_FORMAT1Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from EXPECT_PRED_FORMAT1Test (1 ms total)

[----------] 8 tests from ASSERT_PRED_FORMAT1Test
[ RUN      ] ASSERT_PRED_FORMAT1Test.FunctionOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED_FORMAT1Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT1Test.FunctionOnUserTypeSuccess
[       OK ] ASSERT_PRED_FORMAT1Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT1Test.FunctorOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED_FORMAT1Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT1Test.FunctorOnUserTypeSuccess
[       OK ] ASSERT_PRED_FORMAT1Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT1Test.FunctionOnBuiltInTypeFailure
[       OK ] ASSERT_PRED_FORMAT1Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT1Test.FunctionOnUserTypeFailure
[       OK ] ASSERT_PRED_FORMAT1Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT1Test.FunctorOnBuiltInTypeFailure
[       OK ] ASSERT_PRED_FORMAT1Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT1Test.FunctorOnUserTypeFailure
[       OK ] ASSERT_PRED_FORMAT1Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from ASSERT_PRED_FORMAT1Test (0 ms total)

[----------] 8 tests from EXPECT_PRED2Test
[ RUN      ] EXPECT_PRED2Test.FunctionOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED2Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED2Test.FunctionOnUserTypeSuccess
[       OK ] EXPECT_PRED2Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED2Test.FunctorOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED2Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED2Test.FunctorOnUserTypeSuccess
[       OK ] EXPECT_PRED2Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED2Test.FunctionOnBuiltInTypeFailure
[       OK ] EXPECT_PRED2Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED2Test.FunctionOnUserTypeFailure
[       OK ] EXPECT_PRED2Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED2Test.FunctorOnBuiltInTypeFailure
[       OK ] EXPECT_PRED2Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED2Test.FunctorOnUserTypeFailure
[       OK ] EXPECT_PRED2Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from EXPECT_PRED2Test (0 ms total)

[----------] 8 tests from ASSERT_PRED2Test
[ RUN      ] ASSERT_PRED2Test.FunctionOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED2Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED2Test.FunctionOnUserTypeSuccess
[       OK ] ASSERT_PRED2Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED2Test.FunctorOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED2Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED2Test.FunctorOnUserTypeSuccess
[       OK ] ASSERT_PRED2Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED2Test.FunctionOnBuiltInTypeFailure
[       OK ] ASSERT_PRED2Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED2Test.FunctionOnUserTypeFailure
[       OK ] ASSERT_PRED2Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED2Test.FunctorOnBuiltInTypeFailure
[       OK ] ASSERT_PRED2Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED2Test.FunctorOnUserTypeFailure
[       OK ] ASSERT_PRED2Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from ASSERT_PRED2Test (0 ms total)

[----------] 8 tests from EXPECT_PRED_FORMAT2Test
[ RUN      ] EXPECT_PRED_FORMAT2Test.FunctionOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED_FORMAT2Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT2Test.FunctionOnUserTypeSuccess
[       OK ] EXPECT_PRED_FORMAT2Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT2Test.FunctorOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED_FORMAT2Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT2Test.FunctorOnUserTypeSuccess
[       OK ] EXPECT_PRED_FORMAT2Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT2Test.FunctionOnBuiltInTypeFailure
[       OK ] EXPECT_PRED_FORMAT2Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT2Test.FunctionOnUserTypeFailure
[       OK ] EXPECT_PRED_FORMAT2Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT2Test.FunctorOnBuiltInTypeFailure
[       OK ] EXPECT_PRED_FORMAT2Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT2Test.FunctorOnUserTypeFailure
[       OK ] EXPECT_PRED_FORMAT2Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from EXPECT_PRED_FORMAT2Test (0 ms total)

[----------] 8 tests from ASSERT_PRED_FORMAT2Test
[ RUN      ] ASSERT_PRED_FORMAT2Test.FunctionOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED_FORMAT2Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT2Test.FunctionOnUserTypeSuccess
[       OK ] ASSERT_PRED_FORMAT2Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT2Test.FunctorOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED_FORMAT2Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT2Test.FunctorOnUserTypeSuccess
[       OK ] ASSERT_PRED_FORMAT2Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT2Test.FunctionOnBuiltInTypeFailure
[       OK ] ASSERT_PRED_FORMAT2Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT2Test.FunctionOnUserTypeFailure
[       OK ] ASSERT_PRED_FORMAT2Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT2Test.FunctorOnBuiltInTypeFailure
[       OK ] ASSERT_PRED_FORMAT2Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT2Test.FunctorOnUserTypeFailure
[       OK ] ASSERT_PRED_FORMAT2Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from ASSERT_PRED_FORMAT2Test (1 ms total)

[----------] 8 tests from EXPECT_PRED3Test
[ RUN      ] EXPECT_PRED3Test.FunctionOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED3Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED3Test.FunctionOnUserTypeSuccess
[       OK ] EXPECT_PRED3Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED3Test.FunctorOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED3Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED3Test.FunctorOnUserTypeSuccess
[       OK ] EXPECT_PRED3Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED3Test.FunctionOnBuiltInTypeFailure
[       OK ] EXPECT_PRED3Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED3Test.FunctionOnUserTypeFailure
[       OK ] EXPECT_PRED3Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED3Test.FunctorOnBuiltInTypeFailure
[       OK ] EXPECT_PRED3Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED3Test.FunctorOnUserTypeFailure
[       OK ] EXPECT_PRED3Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from EXPECT_PRED3Test (0 ms total)

[----------] 8 tests from ASSERT_PRED3Test
[ RUN      ] ASSERT_PRED3Test.FunctionOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED3Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED3Test.FunctionOnUserTypeSuccess
[       OK ] ASSERT_PRED3Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED3Test.FunctorOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED3Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED3Test.FunctorOnUserTypeSuccess
[       OK ] ASSERT_PRED3Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED3Test.FunctionOnBuiltInTypeFailure
[       OK ] ASSERT_PRED3Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED3Test.FunctionOnUserTypeFailure
[       OK ] ASSERT_PRED3Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED3Test.FunctorOnBuiltInTypeFailure
[       OK ] ASSERT_PRED3Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED3Test.FunctorOnUserTypeFailure
[       OK ] ASSERT_PRED3Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from ASSERT_PRED3Test (1 ms total)

[----------] 8 tests from EXPECT_PRED_FORMAT3Test
[ RUN      ] EXPECT_PRED_FORMAT3Test.FunctionOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED_FORMAT3Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT3Test.FunctionOnUserTypeSuccess
[       OK ] EXPECT_PRED_FORMAT3Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT3Test.FunctorOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED_FORMAT3Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT3Test.FunctorOnUserTypeSuccess
[       OK ] EXPECT_PRED_FORMAT3Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT3Test.FunctionOnBuiltInTypeFailure
[       OK ] EXPECT_PRED_FORMAT3Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT3Test.FunctionOnUserTypeFailure
[       OK ] EXPECT_PRED_FORMAT3Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT3Test.FunctorOnBuiltInTypeFailure
[       OK ] EXPECT_PRED_FORMAT3Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT3Test.FunctorOnUserTypeFailure
[       OK ] EXPECT_PRED_FORMAT3Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from EXPECT_PRED_FORMAT3Test (0 ms total)

[----------] 8 tests from ASSERT_PRED_FORMAT3Test
[ RUN      ] ASSERT_PRED_FORMAT3Test.FunctionOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED_FORMAT3Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT3Test.FunctionOnUserTypeSuccess
[       OK ] ASSERT_PRED_FORMAT3Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT3Test.FunctorOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED_FORMAT3Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT3Test.FunctorOnUserTypeSuccess
[       OK ] ASSERT_PRED_FORMAT3Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT3Test.FunctionOnBuiltInTypeFailure
[       OK ] ASSERT_PRED_FORMAT3Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT3Test.FunctionOnUserTypeFailure
[       OK ] ASSERT_PRED_FORMAT3Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT3Test.FunctorOnBuiltInTypeFailure
[       OK ] ASSERT_PRED_FORMAT3Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT3Test.FunctorOnUserTypeFailure
[       OK ] ASSERT_PRED_FORMAT3Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from ASSERT_PRED_FORMAT3Test (1 ms total)

[----------] 8 tests from EXPECT_PRED4Test
[ RUN      ] EXPECT_PRED4Test.FunctionOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED4Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED4Test.FunctionOnUserTypeSuccess
[       OK ] EXPECT_PRED4Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED4Test.FunctorOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED4Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED4Test.FunctorOnUserTypeSuccess
[       OK ] EXPECT_PRED4Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED4Test.FunctionOnBuiltInTypeFailure
[       OK ] EXPECT_PRED4Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED4Test.FunctionOnUserTypeFailure
[       OK ] EXPECT_PRED4Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED4Test.FunctorOnBuiltInTypeFailure
[       OK ] EXPECT_PRED4Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED4Test.FunctorOnUserTypeFailure
[       OK ] EXPECT_PRED4Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from EXPECT_PRED4Test (1 ms total)

[----------] 8 tests from ASSERT_PRED4Test
[ RUN      ] ASSERT_PRED4Test.FunctionOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED4Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED4Test.FunctionOnUserTypeSuccess
[       OK ] ASSERT_PRED4Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED4Test.FunctorOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED4Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED4Test.FunctorOnUserTypeSuccess
[       OK ] ASSERT_PRED4Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED4Test.FunctionOnBuiltInTypeFailure
[       OK ] ASSERT_PRED4Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED4Test.FunctionOnUserTypeFailure
[       OK ] ASSERT_PRED4Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED4Test.FunctorOnBuiltInTypeFailure
[       OK ] ASSERT_PRED4Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED4Test.FunctorOnUserTypeFailure
[       OK ] ASSERT_PRED4Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from ASSERT_PRED4Test (0 ms total)

[----------] 8 tests from EXPECT_PRED_FORMAT4Test
[ RUN      ] EXPECT_PRED_FORMAT4Test.FunctionOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED_FORMAT4Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT4Test.FunctionOnUserTypeSuccess
[       OK ] EXPECT_PRED_FORMAT4Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT4Test.FunctorOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED_FORMAT4Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT4Test.FunctorOnUserTypeSuccess
[       OK ] EXPECT_PRED_FORMAT4Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT4Test.FunctionOnBuiltInTypeFailure
[       OK ] EXPECT_PRED_FORMAT4Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT4Test.FunctionOnUserTypeFailure
[       OK ] EXPECT_PRED_FORMAT4Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT4Test.FunctorOnBuiltInTypeFailure
[       OK ] EXPECT_PRED_FORMAT4Test.FunctorOnBuiltInTypeFailure (1 ms)
[ RUN      ] EXPECT_PRED_FORMAT4Test.FunctorOnUserTypeFailure
[       OK ] EXPECT_PRED_FORMAT4Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from EXPECT_PRED_FORMAT4Test (1 ms total)

[----------] 8 tests from ASSERT_PRED_FORMAT4Test
[ RUN      ] ASSERT_PRED_FORMAT4Test.FunctionOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED_FORMAT4Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT4Test.FunctionOnUserTypeSuccess
[       OK ] ASSERT_PRED_FORMAT4Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT4Test.FunctorOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED_FORMAT4Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT4Test.FunctorOnUserTypeSuccess
[       OK ] ASSERT_PRED_FORMAT4Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT4Test.FunctionOnBuiltInTypeFailure
[       OK ] ASSERT_PRED_FORMAT4Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT4Test.FunctionOnUserTypeFailure
[       OK ] ASSERT_PRED_FORMAT4Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT4Test.FunctorOnBuiltInTypeFailure
[       OK ] ASSERT_PRED_FORMAT4Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT4Test.FunctorOnUserTypeFailure
[       OK ] ASSERT_PRED_FORMAT4Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from ASSERT_PRED_FORMAT4Test (0 ms total)

[----------] 8 tests from EXPECT_PRED5Test
[ RUN      ] EXPECT_PRED5Test.FunctionOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED5Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED5Test.FunctionOnUserTypeSuccess
[       OK ] EXPECT_PRED5Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED5Test.FunctorOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED5Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED5Test.FunctorOnUserTypeSuccess
[       OK ] EXPECT_PRED5Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED5Test.FunctionOnBuiltInTypeFailure
[       OK ] EXPECT_PRED5Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED5Test.FunctionOnUserTypeFailure
[       OK ] EXPECT_PRED5Test.FunctionOnUserTypeFailure (1 ms)
[ RUN      ] EXPECT_PRED5Test.FunctorOnBuiltInTypeFailure
[       OK ] EXPECT_PRED5Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED5Test.FunctorOnUserTypeFailure
[       OK ] EXPECT_PRED5Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from EXPECT_PRED5Test (1 ms total)

[----------] 8 tests from ASSERT_PRED5Test
[ RUN      ] ASSERT_PRED5Test.FunctionOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED5Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED5Test.FunctionOnUserTypeSuccess
[       OK ] ASSERT_PRED5Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED5Test.FunctorOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED5Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED5Test.FunctorOnUserTypeSuccess
[       OK ] ASSERT_PRED5Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED5Test.FunctionOnBuiltInTypeFailure
[       OK ] ASSERT_PRED5Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED5Test.FunctionOnUserTypeFailure
[       OK ] ASSERT_PRED5Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED5Test.FunctorOnBuiltInTypeFailure
[       OK ] ASSERT_PRED5Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED5Test.FunctorOnUserTypeFailure
[       OK ] ASSERT_PRED5Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from ASSERT_PRED5Test (0 ms total)

[----------] 8 tests from EXPECT_PRED_FORMAT5Test
[ RUN      ] EXPECT_PRED_FORMAT5Test.FunctionOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED_FORMAT5Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT5Test.FunctionOnUserTypeSuccess
[       OK ] EXPECT_PRED_FORMAT5Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT5Test.FunctorOnBuiltInTypeSuccess
[       OK ] EXPECT_PRED_FORMAT5Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT5Test.FunctorOnUserTypeSuccess
[       OK ] EXPECT_PRED_FORMAT5Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT5Test.FunctionOnBuiltInTypeFailure
[       OK ] EXPECT_PRED_FORMAT5Test.FunctionOnBuiltInTypeFailure (1 ms)
[ RUN      ] EXPECT_PRED_FORMAT5Test.FunctionOnUserTypeFailure
[       OK ] EXPECT_PRED_FORMAT5Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT5Test.FunctorOnBuiltInTypeFailure
[       OK ] EXPECT_PRED_FORMAT5Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] EXPECT_PRED_FORMAT5Test.FunctorOnUserTypeFailure
[       OK ] EXPECT_PRED_FORMAT5Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from EXPECT_PRED_FORMAT5Test (1 ms total)

[----------] 8 tests from ASSERT_PRED_FORMAT5Test
[ RUN      ] ASSERT_PRED_FORMAT5Test.FunctionOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED_FORMAT5Test.FunctionOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT5Test.FunctionOnUserTypeSuccess
[       OK ] ASSERT_PRED_FORMAT5Test.FunctionOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT5Test.FunctorOnBuiltInTypeSuccess
[       OK ] ASSERT_PRED_FORMAT5Test.FunctorOnBuiltInTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT5Test.FunctorOnUserTypeSuccess
[       OK ] ASSERT_PRED_FORMAT5Test.FunctorOnUserTypeSuccess (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT5Test.FunctionOnBuiltInTypeFailure
[       OK ] ASSERT_PRED_FORMAT5Test.FunctionOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT5Test.FunctionOnUserTypeFailure
[       OK ] ASSERT_PRED_FORMAT5Test.FunctionOnUserTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT5Test.FunctorOnBuiltInTypeFailure
[       OK ] ASSERT_PRED_FORMAT5Test.FunctorOnBuiltInTypeFailure (0 ms)
[ RUN      ] ASSERT_PRED_FORMAT5Test.FunctorOnUserTypeFailure
[       OK ] ASSERT_PRED_FORMAT5Test.FunctorOnUserTypeFailure (0 ms)
[----------] 8 tests from ASSERT_PRED_FORMAT5Test (0 ms total)

[----------] Global test environment tear-down
[==========] 160 tests from 20 test cases ran. (10 ms total)
[  PASSED  ] 160 tests.
<end of output>
Test time =   0.02 sec
----------------------------------------------------------
Test Passed.
"gtest_pred_impl_unittest" end time: Feb 23 18:43 PST
"gtest_pred_impl_unittest" time elapsed: 00:00:00
----------------------------------------------------------

32/60 Testing: gtest_premature_exit_test
32/60 Test: gtest_premature_exit_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_premature_exit_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_premature_exit_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
[==========] Running 2 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 1 test from PrematureExitDeathTest
[ RUN      ] PrematureExitDeathTest.FileExistsDuringExecutionOfDeathTest
[       OK ] PrematureExitDeathTest.FileExistsDuringExecutionOfDeathTest (0 ms)
[----------] 1 test from PrematureExitDeathTest (0 ms total)

[----------] 1 test from PrematureExitTest
[ RUN      ] PrematureExitTest.PrematureExitFileExistsDuringTestExecution
[       OK ] PrematureExitTest.PrematureExitFileExistsDuringTestExecution (0 ms)
[----------] 1 test from PrematureExitTest (0 ms total)

[----------] Global test environment tear-down
[==========] 2 tests from 2 test cases ran. (0 ms total)
[  PASSED  ] 2 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest_premature_exit_test" end time: Feb 23 18:43 PST
"gtest_premature_exit_test" time elapsed: 00:00:00
----------------------------------------------------------

33/60 Testing: gtest-printers_test
33/60 Test: gtest-printers_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest-printers_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest-printers_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 110 tests from 27 test cases.
[----------] Global test environment set-up.
[----------] 4 tests from PrintEnumTest
[ RUN      ] PrintEnumTest.AnonymousEnum
[       OK ] PrintEnumTest.AnonymousEnum (0 ms)
[ RUN      ] PrintEnumTest.EnumWithoutPrinter
[       OK ] PrintEnumTest.EnumWithoutPrinter (0 ms)
[ RUN      ] PrintEnumTest.EnumWithStreaming
[       OK ] PrintEnumTest.EnumWithStreaming (0 ms)
[ RUN      ] PrintEnumTest.EnumWithPrintTo
[       OK ] PrintEnumTest.EnumWithPrintTo (0 ms)
[----------] 4 tests from PrintEnumTest (0 ms total)

[----------] 1 test from PrintClassTest
[ RUN      ] PrintClassTest.BiggestIntConvertible
[       OK ] PrintClassTest.BiggestIntConvertible (0 ms)
[----------] 1 test from PrintClassTest (0 ms total)

[----------] 3 tests from PrintCharTest
[ RUN      ] PrintCharTest.PlainChar
[       OK ] PrintCharTest.PlainChar (0 ms)
[ RUN      ] PrintCharTest.SignedChar
[       OK ] PrintCharTest.SignedChar (0 ms)
[ RUN      ] PrintCharTest.UnsignedChar
[       OK ] PrintCharTest.UnsignedChar (0 ms)
[----------] 3 tests from PrintCharTest (0 ms total)

[----------] 5 tests from PrintBuiltInTypeTest
[ RUN      ] PrintBuiltInTypeTest.Bool
[       OK ] PrintBuiltInTypeTest.Bool (0 ms)
[ RUN      ] PrintBuiltInTypeTest.Wchar_t
[       OK ] PrintBuiltInTypeTest.Wchar_t (0 ms)
[ RUN      ] PrintBuiltInTypeTest.Integer
[       OK ] PrintBuiltInTypeTest.Integer (0 ms)
[ RUN      ] PrintBuiltInTypeTest.Size_t
[       OK ] PrintBuiltInTypeTest.Size_t (0 ms)
[ RUN      ] PrintBuiltInTypeTest.FloatingPoints
[       OK ] PrintBuiltInTypeTest.FloatingPoints (0 ms)
[----------] 5 tests from PrintBuiltInTypeTest (0 ms total)

[----------] 1 test from PrintTypeSizeTest
[ RUN      ] PrintTypeSizeTest.Wchar_t
[       OK ] PrintTypeSizeTest.Wchar_t (0 ms)
[----------] 1 test from PrintTypeSizeTest (0 ms total)

[----------] 4 tests from PrintCStringTest
[ RUN      ] PrintCStringTest.Const
[       OK ] PrintCStringTest.Const (0 ms)
[ RUN      ] PrintCStringTest.NonConst
[       OK ] PrintCStringTest.NonConst (0 ms)
[ RUN      ] PrintCStringTest.Null
[       OK ] PrintCStringTest.Null (1 ms)
[ RUN      ] PrintCStringTest.EscapesProperly
[       OK ] PrintCStringTest.EscapesProperly (0 ms)
[----------] 4 tests from PrintCStringTest (1 ms total)

[----------] 4 tests from PrintWideCStringTest
[ RUN      ] PrintWideCStringTest.Const
[       OK ] PrintWideCStringTest.Const (0 ms)
[ RUN      ] PrintWideCStringTest.NonConst
[       OK ] PrintWideCStringTest.NonConst (0 ms)
[ RUN      ] PrintWideCStringTest.Null
[       OK ] PrintWideCStringTest.Null (0 ms)
[ RUN      ] PrintWideCStringTest.EscapesProperly
[       OK ] PrintWideCStringTest.EscapesProperly (0 ms)
[----------] 4 tests from PrintWideCStringTest (0 ms total)

[----------] 4 tests from PrintCharPointerTest
[ RUN      ] PrintCharPointerTest.SignedChar
[       OK ] PrintCharPointerTest.SignedChar (0 ms)
[ RUN      ] PrintCharPointerTest.ConstSignedChar
[       OK ] PrintCharPointerTest.ConstSignedChar (0 ms)
[ RUN      ] PrintCharPointerTest.UnsignedChar
[       OK ] PrintCharPointerTest.UnsignedChar (0 ms)
[ RUN      ] PrintCharPointerTest.ConstUnsignedChar
[       OK ] PrintCharPointerTest.ConstUnsignedChar (0 ms)
[----------] 4 tests from PrintCharPointerTest (0 ms total)

[----------] 3 tests from PrintPointerToBuiltInTypeTest
[ RUN      ] PrintPointerToBuiltInTypeTest.Bool
[       OK ] PrintPointerToBuiltInTypeTest.Bool (0 ms)
[ RUN      ] PrintPointerToBuiltInTypeTest.Void
[       OK ] PrintPointerToBuiltInTypeTest.Void (0 ms)
[ RUN      ] PrintPointerToBuiltInTypeTest.ConstVoid
[       OK ] PrintPointerToBuiltInTypeTest.ConstVoid (0 ms)
[----------] 3 tests from PrintPointerToBuiltInTypeTest (0 ms total)

[----------] 1 test from PrintPointerToPointerTest
[ RUN      ] PrintPointerToPointerTest.IntPointerPointer
[       OK ] PrintPointerToPointerTest.IntPointerPointer (0 ms)
[----------] 1 test from PrintPointerToPointerTest (0 ms total)

[----------] 3 tests from PrintPointerTest
[ RUN      ] PrintPointerTest.NonMemberFunctionPointer
[       OK ] PrintPointerTest.NonMemberFunctionPointer (0 ms)
[ RUN      ] PrintPointerTest.MemberVariablePointer
[       OK ] PrintPointerTest.MemberVariablePointer (0 ms)
[ RUN      ] PrintPointerTest.MemberFunctionPointer
[       OK ] PrintPointerTest.MemberFunctionPointer (0 ms)
[----------] 3 tests from PrintPointerTest (0 ms total)

[----------] 9 tests from PrintArrayTest
[ RUN      ] PrintArrayTest.OneDimensionalArray
[       OK ] PrintArrayTest.OneDimensionalArray (0 ms)
[ RUN      ] PrintArrayTest.TwoDimensionalArray
[       OK ] PrintArrayTest.TwoDimensionalArray (0 ms)
[ RUN      ] PrintArrayTest.ConstArray
[       OK ] PrintArrayTest.ConstArray (0 ms)
[ RUN      ] PrintArrayTest.CharArrayWithNoTerminatingNul
[       OK ] PrintArrayTest.CharArrayWithNoTerminatingNul (0 ms)
[ RUN      ] PrintArrayTest.ConstCharArrayWithTerminatingNul
[       OK ] PrintArrayTest.ConstCharArrayWithTerminatingNul (0 ms)
[ RUN      ] PrintArrayTest.WCharArrayWithNoTerminatingNul
[       OK ] PrintArrayTest.WCharArrayWithNoTerminatingNul (0 ms)
[ RUN      ] PrintArrayTest.WConstCharArrayWithTerminatingNul
[       OK ] PrintArrayTest.WConstCharArrayWithTerminatingNul (0 ms)
[ RUN      ] PrintArrayTest.ObjectArray
[       OK ] PrintArrayTest.ObjectArray (0 ms)
[ RUN      ] PrintArrayTest.BigArray
[       OK ] PrintArrayTest.BigArray (0 ms)
[----------] 9 tests from PrintArrayTest (1 ms total)

[----------] 2 tests from PrintStringTest
[ RUN      ] PrintStringTest.StringInStdNamespace
[       OK ] PrintStringTest.StringInStdNamespace (0 ms)
[ RUN      ] PrintStringTest.StringAmbiguousHex
[       OK ] PrintStringTest.StringAmbiguousHex (0 ms)
[----------] 2 tests from PrintStringTest (0 ms total)

[----------] 2 tests from PrintWideStringTest
[ RUN      ] PrintWideStringTest.StringInStdNamespace
[       OK ] PrintWideStringTest.StringInStdNamespace (0 ms)
[ RUN      ] PrintWideStringTest.StringAmbiguousHex
[       OK ] PrintWideStringTest.StringAmbiguousHex (0 ms)
[----------] 2 tests from PrintWideStringTest (0 ms total)

[----------] 3 tests from PrintTypeWithGenericStreamingTest
[ RUN      ] PrintTypeWithGenericStreamingTest.NonTemplateType
[       OK ] PrintTypeWithGenericStreamingTest.NonTemplateType (0 ms)
[ RUN      ] PrintTypeWithGenericStreamingTest.TemplateType
[       OK ] PrintTypeWithGenericStreamingTest.TemplateType (0 ms)
[ RUN      ] PrintTypeWithGenericStreamingTest.TypeImplicitlyConvertible
[       OK ] PrintTypeWithGenericStreamingTest.TypeImplicitlyConvertible (0 ms)
[----------] 3 tests from PrintTypeWithGenericStreamingTest (0 ms total)

[----------] 15 tests from PrintStlContainerTest
[ RUN      ] PrintStlContainerTest.EmptyDeque
[       OK ] PrintStlContainerTest.EmptyDeque (0 ms)
[ RUN      ] PrintStlContainerTest.NonEmptyDeque
[       OK ] PrintStlContainerTest.NonEmptyDeque (0 ms)
[ RUN      ] PrintStlContainerTest.List
[       OK ] PrintStlContainerTest.List (0 ms)
[ RUN      ] PrintStlContainerTest.Map
[       OK ] PrintStlContainerTest.Map (0 ms)
[ RUN      ] PrintStlContainerTest.MultiMap
[       OK ] PrintStlContainerTest.MultiMap (0 ms)
[ RUN      ] PrintStlContainerTest.Set
[       OK ] PrintStlContainerTest.Set (0 ms)
[ RUN      ] PrintStlContainerTest.MultiSet
[       OK ] PrintStlContainerTest.MultiSet (0 ms)
[ RUN      ] PrintStlContainerTest.Pair
[       OK ] PrintStlContainerTest.Pair (0 ms)
[ RUN      ] PrintStlContainerTest.Vector
[       OK ] PrintStlContainerTest.Vector (0 ms)
[ RUN      ] PrintStlContainerTest.LongSequence
[       OK ] PrintStlContainerTest.LongSequence (0 ms)
[ RUN      ] PrintStlContainerTest.NestedContainer
[       OK ] PrintStlContainerTest.NestedContainer (0 ms)
[ RUN      ] PrintStlContainerTest.OneDimensionalNativeArray
[       OK ] PrintStlContainerTest.OneDimensionalNativeArray (0 ms)
[ RUN      ] PrintStlContainerTest.TwoDimensionalNativeArray
[       OK ] PrintStlContainerTest.TwoDimensionalNativeArray (0 ms)
[ RUN      ] PrintStlContainerTest.Iterator
[       OK ] PrintStlContainerTest.Iterator (0 ms)
[ RUN      ] PrintStlContainerTest.ConstIterator
[       OK ] PrintStlContainerTest.ConstIterator (0 ms)
[----------] 15 tests from PrintStlContainerTest (0 ms total)

[----------] 2 tests from PrintTr1TupleTest
[ RUN      ] PrintTr1TupleTest.VariousSizes
[       OK ] PrintTr1TupleTest.VariousSizes (0 ms)
[ RUN      ] PrintTr1TupleTest.NestedTuple
[       OK ] PrintTr1TupleTest.NestedTuple (0 ms)
[----------] 2 tests from PrintTr1TupleTest (0 ms total)

[----------] 2 tests from PrintUnprintableTypeTest
[ RUN      ] PrintUnprintableTypeTest.InGlobalNamespace
[       OK ] PrintUnprintableTypeTest.InGlobalNamespace (0 ms)
[ RUN      ] PrintUnprintableTypeTest.InUserNamespace
[       OK ] PrintUnprintableTypeTest.InUserNamespace (0 ms)
[----------] 2 tests from PrintUnprintableTypeTest (0 ms total)

[----------] 1 test from PrintUnpritableTypeTest
[ RUN      ] PrintUnpritableTypeTest.BigObject
[       OK ] PrintUnpritableTypeTest.BigObject (0 ms)
[----------] 1 test from PrintUnpritableTypeTest (0 ms total)

[----------] 2 tests from PrintStreamableTypeTest
[ RUN      ] PrintStreamableTypeTest.InGlobalNamespace
[       OK ] PrintStreamableTypeTest.InGlobalNamespace (0 ms)
[ RUN      ] PrintStreamableTypeTest.TemplateTypeInUserNamespace
[       OK ] PrintStreamableTypeTest.TemplateTypeInUserNamespace (0 ms)
[----------] 2 tests from PrintStreamableTypeTest (0 ms total)

[----------] 3 tests from PrintPrintableTypeTest
[ RUN      ] PrintPrintableTypeTest.InUserNamespace
[       OK ] PrintPrintableTypeTest.InUserNamespace (0 ms)
[ RUN      ] PrintPrintableTypeTest.PointerInUserNamespace
[       OK ] PrintPrintableTypeTest.PointerInUserNamespace (0 ms)
[ RUN      ] PrintPrintableTypeTest.TemplateInUserNamespace
[       OK ] PrintPrintableTypeTest.TemplateInUserNamespace (0 ms)
[----------] 3 tests from PrintPrintableTypeTest (0 ms total)

[----------] 4 tests from PrintReferenceTest
[ RUN      ] PrintReferenceTest.PrintsAddressAndValue
[       OK ] PrintReferenceTest.PrintsAddressAndValue (0 ms)
[ RUN      ] PrintReferenceTest.HandlesFunctionPointer
[       OK ] PrintReferenceTest.HandlesFunctionPointer (0 ms)
[ RUN      ] PrintReferenceTest.HandlesMemberFunctionPointer
[       OK ] PrintReferenceTest.HandlesMemberFunctionPointer (0 ms)
[ RUN      ] PrintReferenceTest.HandlesMemberVariablePointer
[       OK ] PrintReferenceTest.HandlesMemberVariablePointer (0 ms)
[----------] 4 tests from PrintReferenceTest (0 ms total)

[----------] 13 tests from FormatForComparisonFailureMessageTest
[ RUN      ] FormatForComparisonFailureMessageTest.WorksForScalar
[       OK ] FormatForComparisonFailureMessageTest.WorksForScalar (0 ms)
[ RUN      ] FormatForComparisonFailureMessageTest.WorksForNonCharPointer
[       OK ] FormatForComparisonFailureMessageTest.WorksForNonCharPointer (0 ms)
[ RUN      ] FormatForComparisonFailureMessageTest.FormatsNonCharArrayAsPointer
[       OK ] FormatForComparisonFailureMessageTest.FormatsNonCharArrayAsPointer (0 ms)
[ RUN      ] FormatForComparisonFailureMessageTest.WorksForCharPointerVsPointer
[       OK ] FormatForComparisonFailureMessageTest.WorksForCharPointerVsPointer (0 ms)
[ RUN      ] FormatForComparisonFailureMessageTest.WorksForWCharPointerVsPointer
[       OK ] FormatForComparisonFailureMessageTest.WorksForWCharPointerVsPointer (0 ms)
[ RUN      ] FormatForComparisonFailureMessageTest.WorksForCharPointerVsStdString
[       OK ] FormatForComparisonFailureMessageTest.WorksForCharPointerVsStdString (0 ms)
[ RUN      ] FormatForComparisonFailureMessageTest.WorksForWCharPointerVsStdWString
[       OK ] FormatForComparisonFailureMessageTest.WorksForWCharPointerVsStdWString (0 ms)
[ RUN      ] FormatForComparisonFailureMessageTest.WorksForCharArrayVsPointer
[       OK ] FormatForComparisonFailureMessageTest.WorksForCharArrayVsPointer (0 ms)
[ RUN      ] FormatForComparisonFailureMessageTest.WorksForCharArrayVsCharArray
[       OK ] FormatForComparisonFailureMessageTest.WorksForCharArrayVsCharArray (0 ms)
[ RUN      ] FormatForComparisonFailureMessageTest.WorksForWCharArrayVsPointer
[       OK ] FormatForComparisonFailureMessageTest.WorksForWCharArrayVsPointer (0 ms)
[ RUN      ] FormatForComparisonFailureMessageTest.WorksForWCharArrayVsWCharArray
[       OK ] FormatForComparisonFailureMessageTest.WorksForWCharArrayVsWCharArray (0 ms)
[ RUN      ] FormatForComparisonFailureMessageTest.WorksForCharArrayVsStdString
[       OK ] FormatForComparisonFailureMessageTest.WorksForCharArrayVsStdString (0 ms)
[ RUN      ] FormatForComparisonFailureMessageTest.WorksForWCharArrayVsStdWString
[       OK ] FormatForComparisonFailureMessageTest.WorksForWCharArrayVsStdWString (0 ms)
[----------] 13 tests from FormatForComparisonFailureMessageTest (0 ms total)

[----------] 8 tests from PrintToStringTest
[ RUN      ] PrintToStringTest.WorksForScalar
[       OK ] PrintToStringTest.WorksForScalar (0 ms)
[ RUN      ] PrintToStringTest.WorksForPointerToConstChar
[       OK ] PrintToStringTest.WorksForPointerToConstChar (0 ms)
[ RUN      ] PrintToStringTest.WorksForPointerToNonConstChar
[       OK ] PrintToStringTest.WorksForPointerToNonConstChar (0 ms)
[ RUN      ] PrintToStringTest.EscapesForPointerToConstChar
[       OK ] PrintToStringTest.EscapesForPointerToConstChar (0 ms)
[ RUN      ] PrintToStringTest.EscapesForPointerToNonConstChar
[       OK ] PrintToStringTest.EscapesForPointerToNonConstChar (0 ms)
[ RUN      ] PrintToStringTest.WorksForArray
[       OK ] PrintToStringTest.WorksForArray (0 ms)
[ RUN      ] PrintToStringTest.WorksForCharArray
[       OK ] PrintToStringTest.WorksForCharArray (0 ms)
[ RUN      ] PrintToStringTest.WorksForCharArrayWithEmbeddedNul
[       OK ] PrintToStringTest.WorksForCharArrayWithEmbeddedNul (0 ms)
[----------] 8 tests from PrintToStringTest (1 ms total)

[----------] 3 tests from UniversalTersePrintTest
[ RUN      ] UniversalTersePrintTest.WorksForNonReference
[       OK ] UniversalTersePrintTest.WorksForNonReference (0 ms)
[ RUN      ] UniversalTersePrintTest.WorksForReference
[       OK ] UniversalTersePrintTest.WorksForReference (0 ms)
[ RUN      ] UniversalTersePrintTest.WorksForCString
[       OK ] UniversalTersePrintTest.WorksForCString (0 ms)
[----------] 3 tests from UniversalTersePrintTest (0 ms total)

[----------] 4 tests from UniversalPrintTest
[ RUN      ] UniversalPrintTest.WorksForNonReference
[       OK ] UniversalPrintTest.WorksForNonReference (0 ms)
[ RUN      ] UniversalPrintTest.WorksForReference
[       OK ] UniversalPrintTest.WorksForReference (0 ms)
[ RUN      ] UniversalPrintTest.WorksForCString
[       OK ] UniversalPrintTest.WorksForCString (0 ms)
[ RUN      ] UniversalPrintTest.WorksForCharArray
[       OK ] UniversalPrintTest.WorksForCharArray (0 ms)
[----------] 4 tests from UniversalPrintTest (0 ms total)

[----------] 4 tests from UniversalTersePrintTupleFieldsToStringsTestWithTr1
[ RUN      ] UniversalTersePrintTupleFieldsToStringsTestWithTr1.PrintsEmptyTuple
[       OK ] UniversalTersePrintTupleFieldsToStringsTestWithTr1.PrintsEmptyTuple (0 ms)
[ RUN      ] UniversalTersePrintTupleFieldsToStringsTestWithTr1.PrintsOneTuple
[       OK ] UniversalTersePrintTupleFieldsToStringsTestWithTr1.PrintsOneTuple (0 ms)
[ RUN      ] UniversalTersePrintTupleFieldsToStringsTestWithTr1.PrintsTwoTuple
[       OK ] UniversalTersePrintTupleFieldsToStringsTestWithTr1.PrintsTwoTuple (0 ms)
[ RUN      ] UniversalTersePrintTupleFieldsToStringsTestWithTr1.PrintsTersely
[       OK ] UniversalTersePrintTupleFieldsToStringsTestWithTr1.PrintsTersely (0 ms)
[----------] 4 tests from UniversalTersePrintTupleFieldsToStringsTestWithTr1 (0 ms total)

[----------] Global test environment tear-down
[==========] 110 tests from 27 test cases ran. (4 ms total)
[  PASSED  ] 110 tests.
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"gtest-printers_test" end time: Feb 23 18:43 PST
"gtest-printers_test" time elapsed: 00:00:00
----------------------------------------------------------

34/60 Testing: gtest_prod_test
34/60 Test: gtest_prod_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_prod_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_prod_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 2 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 1 test from PrivateCodeTest
[ RUN      ] PrivateCodeTest.CanAccessPrivateMembers
[       OK ] PrivateCodeTest.CanAccessPrivateMembers (0 ms)
[----------] 1 test from PrivateCodeTest (0 ms total)

[----------] 1 test from PrivateCodeFixtureTest
[ RUN      ] PrivateCodeFixtureTest.CanAccessPrivateMembers
[       OK ] PrivateCodeFixtureTest.CanAccessPrivateMembers (0 ms)
[----------] 1 test from PrivateCodeFixtureTest (0 ms total)

[----------] Global test environment tear-down
[==========] 2 tests from 2 test cases ran. (0 ms total)
[  PASSED  ] 2 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest_prod_test" end time: Feb 23 18:43 PST
"gtest_prod_test" time elapsed: 00:00:00
----------------------------------------------------------

35/60 Testing: gtest_repeat_test
35/60 Test: gtest_repeat_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_repeat_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_repeat_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
[==========] Running 13 tests from 3 test cases.
[----------] Global test environment set-up.
[----------] 1 test from BarDeathTest
[ RUN      ] BarDeathTest.ThreadSafeAndFast
[       OK ] BarDeathTest.ThreadSafeAndFast (210 ms)
[----------] 1 test from BarDeathTest (210 ms total)

[----------] 2 tests from FooTest
[ RUN      ] FooTest.ShouldFail
/home/kapil/630/a6/googletest/googletest/test/gtest_repeat_test.cc:96: Failure
      Expected: 0
To be equal to: 1
Expected failure.
[  FAILED  ] FooTest.ShouldFail (0 ms)
[ RUN      ] FooTest.ShouldPass
[       OK ] FooTest.ShouldPass (0 ms)
[----------] 2 tests from FooTest (0 ms total)

[----------] 10 tests from MyParamSequence/MyParamTest
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/0
[       OK ] MyParamSequence/MyParamTest.ShouldPass/0 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/1
[       OK ] MyParamSequence/MyParamTest.ShouldPass/1 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/2
[       OK ] MyParamSequence/MyParamTest.ShouldPass/2 (1 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/3
[       OK ] MyParamSequence/MyParamTest.ShouldPass/3 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/4
[       OK ] MyParamSequence/MyParamTest.ShouldPass/4 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/5
[       OK ] MyParamSequence/MyParamTest.ShouldPass/5 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/6
[       OK ] MyParamSequence/MyParamTest.ShouldPass/6 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/7
[       OK ] MyParamSequence/MyParamTest.ShouldPass/7 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/8
[       OK ] MyParamSequence/MyParamTest.ShouldPass/8 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/9
[       OK ] MyParamSequence/MyParamTest.ShouldPass/9 (0 ms)
[----------] 10 tests from MyParamSequence/MyParamTest (1 ms total)

[----------] Global test environment tear-down
[==========] 13 tests from 3 test cases ran. (211 ms total)
[  PASSED  ] 12 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] FooTest.ShouldFail

 1 FAILED TEST
[==========] Running 13 tests from 3 test cases.
[----------] Global test environment set-up.
[----------] 1 test from BarDeathTest
[ RUN      ] BarDeathTest.ThreadSafeAndFast
[       OK ] BarDeathTest.ThreadSafeAndFast (209 ms)
[----------] 1 test from BarDeathTest (209 ms total)

[----------] 2 tests from FooTest
[ RUN      ] FooTest.ShouldFail
/home/kapil/630/a6/googletest/googletest/test/gtest_repeat_test.cc:96: Failure
      Expected: 0
To be equal to: 1
Expected failure.
[  FAILED  ] FooTest.ShouldFail (0 ms)
[ RUN      ] FooTest.ShouldPass
[       OK ] FooTest.ShouldPass (0 ms)
[----------] 2 tests from FooTest (0 ms total)

[----------] 10 tests from MyParamSequence/MyParamTest
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/0
[       OK ] MyParamSequence/MyParamTest.ShouldPass/0 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/1
[       OK ] MyParamSequence/MyParamTest.ShouldPass/1 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/2
[       OK ] MyParamSequence/MyParamTest.ShouldPass/2 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/3
[       OK ] MyParamSequence/MyParamTest.ShouldPass/3 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/4
[       OK ] MyParamSequence/MyParamTest.ShouldPass/4 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/5
[       OK ] MyParamSequence/MyParamTest.ShouldPass/5 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/6
[       OK ] MyParamSequence/MyParamTest.ShouldPass/6 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/7
[       OK ] MyParamSequence/MyParamTest.ShouldPass/7 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/8
[       OK ] MyParamSequence/MyParamTest.ShouldPass/8 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/9
[       OK ] MyParamSequence/MyParamTest.ShouldPass/9 (0 ms)
[----------] 10 tests from MyParamSequence/MyParamTest (0 ms total)

[----------] Global test environment tear-down
[==========] 13 tests from 3 test cases ran. (209 ms total)
[  PASSED  ] 12 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] FooTest.ShouldFail

 1 FAILED TEST

Repeating all tests (iteration 1) . . .

[==========] Running 13 tests from 3 test cases.
[----------] Global test environment set-up.
[----------] 1 test from BarDeathTest
[ RUN      ] BarDeathTest.ThreadSafeAndFast
[       OK ] BarDeathTest.ThreadSafeAndFast (213 ms)
[----------] 1 test from BarDeathTest (213 ms total)

[----------] 2 tests from FooTest
[ RUN      ] FooTest.ShouldFail
/home/kapil/630/a6/googletest/googletest/test/gtest_repeat_test.cc:96: Failure
      Expected: 0
To be equal to: 1
Expected failure.
[  FAILED  ] FooTest.ShouldFail (0 ms)
[ RUN      ] FooTest.ShouldPass
[       OK ] FooTest.ShouldPass (0 ms)
[----------] 2 tests from FooTest (0 ms total)

[----------] 10 tests from MyParamSequence/MyParamTest
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/0
[       OK ] MyParamSequence/MyParamTest.ShouldPass/0 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/1
[       OK ] MyParamSequence/MyParamTest.ShouldPass/1 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/2
[       OK ] MyParamSequence/MyParamTest.ShouldPass/2 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/3
[       OK ] MyParamSequence/MyParamTest.ShouldPass/3 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/4
[       OK ] MyParamSequence/MyParamTest.ShouldPass/4 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/5
[       OK ] MyParamSequence/MyParamTest.ShouldPass/5 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/6
[       OK ] MyParamSequence/MyParamTest.ShouldPass/6 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/7
[       OK ] MyParamSequence/MyParamTest.ShouldPass/7 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/8
[       OK ] MyParamSequence/MyParamTest.ShouldPass/8 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/9
[       OK ] MyParamSequence/MyParamTest.ShouldPass/9 (0 ms)
[----------] 10 tests from MyParamSequence/MyParamTest (0 ms total)

[----------] Global test environment tear-down
[==========] 13 tests from 3 test cases ran. (213 ms total)
[  PASSED  ] 12 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] FooTest.ShouldFail

 1 FAILED TEST

Repeating all tests (iteration 2) . . .

[==========] Running 13 tests from 3 test cases.
[----------] Global test environment set-up.
[----------] 1 test from BarDeathTest
[ RUN      ] BarDeathTest.ThreadSafeAndFast
[       OK ] BarDeathTest.ThreadSafeAndFast (211 ms)
[----------] 1 test from BarDeathTest (211 ms total)

[----------] 2 tests from FooTest
[ RUN      ] FooTest.ShouldFail
/home/kapil/630/a6/googletest/googletest/test/gtest_repeat_test.cc:96: Failure
      Expected: 0
To be equal to: 1
Expected failure.
[  FAILED  ] FooTest.ShouldFail (0 ms)
[ RUN      ] FooTest.ShouldPass
[       OK ] FooTest.ShouldPass (0 ms)
[----------] 2 tests from FooTest (0 ms total)

[----------] 10 tests from MyParamSequence/MyParamTest
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/0
[       OK ] MyParamSequence/MyParamTest.ShouldPass/0 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/1
[       OK ] MyParamSequence/MyParamTest.ShouldPass/1 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/2
[       OK ] MyParamSequence/MyParamTest.ShouldPass/2 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/3
[       OK ] MyParamSequence/MyParamTest.ShouldPass/3 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/4
[       OK ] MyParamSequence/MyParamTest.ShouldPass/4 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/5
[       OK ] MyParamSequence/MyParamTest.ShouldPass/5 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/6
[       OK ] MyParamSequence/MyParamTest.ShouldPass/6 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/7
[       OK ] MyParamSequence/MyParamTest.ShouldPass/7 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/8
[       OK ] MyParamSequence/MyParamTest.ShouldPass/8 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/9
[       OK ] MyParamSequence/MyParamTest.ShouldPass/9 (0 ms)
[----------] 10 tests from MyParamSequence/MyParamTest (0 ms total)

[----------] Global test environment tear-down
[==========] 13 tests from 3 test cases ran. (211 ms total)
[  PASSED  ] 12 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] FooTest.ShouldFail

 1 FAILED TEST

Repeating all tests (iteration 3) . . .

[==========] Running 13 tests from 3 test cases.
[----------] Global test environment set-up.
[----------] 1 test from BarDeathTest
[ RUN      ] BarDeathTest.ThreadSafeAndFast
[       OK ] BarDeathTest.ThreadSafeAndFast (210 ms)
[----------] 1 test from BarDeathTest (210 ms total)

[----------] 2 tests from FooTest
[ RUN      ] FooTest.ShouldFail
/home/kapil/630/a6/googletest/googletest/test/gtest_repeat_test.cc:96: Failure
      Expected: 0
To be equal to: 1
Expected failure.
[  FAILED  ] FooTest.ShouldFail (0 ms)
[ RUN      ] FooTest.ShouldPass
[       OK ] FooTest.ShouldPass (0 ms)
[----------] 2 tests from FooTest (0 ms total)

[----------] 10 tests from MyParamSequence/MyParamTest
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/0
[       OK ] MyParamSequence/MyParamTest.ShouldPass/0 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/1
[       OK ] MyParamSequence/MyParamTest.ShouldPass/1 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/2
[       OK ] MyParamSequence/MyParamTest.ShouldPass/2 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/3
[       OK ] MyParamSequence/MyParamTest.ShouldPass/3 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/4
[       OK ] MyParamSequence/MyParamTest.ShouldPass/4 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/5
[       OK ] MyParamSequence/MyParamTest.ShouldPass/5 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/6
[       OK ] MyParamSequence/MyParamTest.ShouldPass/6 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/7
[       OK ] MyParamSequence/MyParamTest.ShouldPass/7 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/8
[       OK ] MyParamSequence/MyParamTest.ShouldPass/8 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/9
[       OK ] MyParamSequence/MyParamTest.ShouldPass/9 (0 ms)
[----------] 10 tests from MyParamSequence/MyParamTest (0 ms total)

[----------] Global test environment tear-down
[==========] 13 tests from 3 test cases ran. (210 ms total)
[  PASSED  ] 12 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] FooTest.ShouldFail

 1 FAILED TEST

Repeating all tests (iteration 4) . . .

[==========] Running 13 tests from 3 test cases.
[----------] Global test environment set-up.
[----------] 1 test from BarDeathTest
[ RUN      ] BarDeathTest.ThreadSafeAndFast
[       OK ] BarDeathTest.ThreadSafeAndFast (212 ms)
[----------] 1 test from BarDeathTest (212 ms total)

[----------] 2 tests from FooTest
[ RUN      ] FooTest.ShouldFail
/home/kapil/630/a6/googletest/googletest/test/gtest_repeat_test.cc:96: Failure
      Expected: 0
To be equal to: 1
Expected failure.
[  FAILED  ] FooTest.ShouldFail (0 ms)
[ RUN      ] FooTest.ShouldPass
[       OK ] FooTest.ShouldPass (0 ms)
[----------] 2 tests from FooTest (0 ms total)

[----------] 10 tests from MyParamSequence/MyParamTest
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/0
[       OK ] MyParamSequence/MyParamTest.ShouldPass/0 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/1
[       OK ] MyParamSequence/MyParamTest.ShouldPass/1 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/2
[       OK ] MyParamSequence/MyParamTest.ShouldPass/2 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/3
[       OK ] MyParamSequence/MyParamTest.ShouldPass/3 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/4
[       OK ] MyParamSequence/MyParamTest.ShouldPass/4 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/5
[       OK ] MyParamSequence/MyParamTest.ShouldPass/5 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/6
[       OK ] MyParamSequence/MyParamTest.ShouldPass/6 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/7
[       OK ] MyParamSequence/MyParamTest.ShouldPass/7 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/8
[       OK ] MyParamSequence/MyParamTest.ShouldPass/8 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/9
[       OK ] MyParamSequence/MyParamTest.ShouldPass/9 (0 ms)
[----------] 10 tests from MyParamSequence/MyParamTest (0 ms total)

[----------] Global test environment tear-down
[==========] 13 tests from 3 test cases ran. (212 ms total)
[  PASSED  ] 12 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] FooTest.ShouldFail

 1 FAILED TEST

Repeating all tests (iteration 5) . . .

[==========] Running 13 tests from 3 test cases.
[----------] Global test environment set-up.
[----------] 1 test from BarDeathTest
[ RUN      ] BarDeathTest.ThreadSafeAndFast
[       OK ] BarDeathTest.ThreadSafeAndFast (211 ms)
[----------] 1 test from BarDeathTest (211 ms total)

[----------] 2 tests from FooTest
[ RUN      ] FooTest.ShouldFail
/home/kapil/630/a6/googletest/googletest/test/gtest_repeat_test.cc:96: Failure
      Expected: 0
To be equal to: 1
Expected failure.
[  FAILED  ] FooTest.ShouldFail (0 ms)
[ RUN      ] FooTest.ShouldPass
[       OK ] FooTest.ShouldPass (0 ms)
[----------] 2 tests from FooTest (0 ms total)

[----------] 10 tests from MyParamSequence/MyParamTest
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/0
[       OK ] MyParamSequence/MyParamTest.ShouldPass/0 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/1
[       OK ] MyParamSequence/MyParamTest.ShouldPass/1 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/2
[       OK ] MyParamSequence/MyParamTest.ShouldPass/2 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/3
[       OK ] MyParamSequence/MyParamTest.ShouldPass/3 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/4
[       OK ] MyParamSequence/MyParamTest.ShouldPass/4 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/5
[       OK ] MyParamSequence/MyParamTest.ShouldPass/5 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/6
[       OK ] MyParamSequence/MyParamTest.ShouldPass/6 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/7
[       OK ] MyParamSequence/MyParamTest.ShouldPass/7 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/8
[       OK ] MyParamSequence/MyParamTest.ShouldPass/8 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/9
[       OK ] MyParamSequence/MyParamTest.ShouldPass/9 (0 ms)
[----------] 10 tests from MyParamSequence/MyParamTest (0 ms total)

[----------] Global test environment tear-down
[==========] 13 tests from 3 test cases ran. (211 ms total)
[  PASSED  ] 12 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] FooTest.ShouldFail

 1 FAILED TEST

Repeating all tests (iteration 1) . . .

Note: Google Test filter = None
[==========] Running 0 tests from 0 test cases.
[==========] 0 tests from 0 test cases ran. (0 ms total)
[  PASSED  ] 0 tests.

Repeating all tests (iteration 2) . . .

Note: Google Test filter = None
[==========] Running 0 tests from 0 test cases.
[==========] 0 tests from 0 test cases ran. (0 ms total)
[  PASSED  ] 0 tests.

Repeating all tests (iteration 1) . . .

Note: Google Test filter = None
[==========] Running 0 tests from 0 test cases.
[==========] 0 tests from 0 test cases ran. (0 ms total)
[  PASSED  ] 0 tests.

Repeating all tests (iteration 2) . . .

Note: Google Test filter = None
[==========] Running 0 tests from 0 test cases.
[==========] 0 tests from 0 test cases ran. (0 ms total)
[  PASSED  ] 0 tests.

Repeating all tests (iteration 3) . . .

Note: Google Test filter = None
[==========] Running 0 tests from 0 test cases.
[==========] 0 tests from 0 test cases ran. (0 ms total)
[  PASSED  ] 0 tests.

Repeating all tests (iteration 1) . . .

Note: Google Test filter = *-*ShouldFail
[==========] Running 12 tests from 3 test cases.
[----------] Global test environment set-up.
[----------] 1 test from BarDeathTest
[ RUN      ] BarDeathTest.ThreadSafeAndFast
[       OK ] BarDeathTest.ThreadSafeAndFast (210 ms)
[----------] 1 test from BarDeathTest (210 ms total)

[----------] 1 test from FooTest
[ RUN      ] FooTest.ShouldPass
[       OK ] FooTest.ShouldPass (0 ms)
[----------] 1 test from FooTest (0 ms total)

[----------] 10 tests from MyParamSequence/MyParamTest
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/0
[       OK ] MyParamSequence/MyParamTest.ShouldPass/0 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/1
[       OK ] MyParamSequence/MyParamTest.ShouldPass/1 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/2
[       OK ] MyParamSequence/MyParamTest.ShouldPass/2 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/3
[       OK ] MyParamSequence/MyParamTest.ShouldPass/3 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/4
[       OK ] MyParamSequence/MyParamTest.ShouldPass/4 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/5
[       OK ] MyParamSequence/MyParamTest.ShouldPass/5 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/6
[       OK ] MyParamSequence/MyParamTest.ShouldPass/6 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/7
[       OK ] MyParamSequence/MyParamTest.ShouldPass/7 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/8
[       OK ] MyParamSequence/MyParamTest.ShouldPass/8 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/9
[       OK ] MyParamSequence/MyParamTest.ShouldPass/9 (0 ms)
[----------] 10 tests from MyParamSequence/MyParamTest (0 ms total)

[----------] Global test environment tear-down
[==========] 12 tests from 3 test cases ran. (210 ms total)
[  PASSED  ] 12 tests.

Repeating all tests (iteration 2) . . .

Note: Google Test filter = *-*ShouldFail
[==========] Running 12 tests from 3 test cases.
[----------] Global test environment set-up.
[----------] 1 test from BarDeathTest
[ RUN      ] BarDeathTest.ThreadSafeAndFast
[       OK ] BarDeathTest.ThreadSafeAndFast (212 ms)
[----------] 1 test from BarDeathTest (212 ms total)

[----------] 1 test from FooTest
[ RUN      ] FooTest.ShouldPass
[       OK ] FooTest.ShouldPass (0 ms)
[----------] 1 test from FooTest (0 ms total)

[----------] 10 tests from MyParamSequence/MyParamTest
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/0
[       OK ] MyParamSequence/MyParamTest.ShouldPass/0 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/1
[       OK ] MyParamSequence/MyParamTest.ShouldPass/1 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/2
[       OK ] MyParamSequence/MyParamTest.ShouldPass/2 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/3
[       OK ] MyParamSequence/MyParamTest.ShouldPass/3 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/4
[       OK ] MyParamSequence/MyParamTest.ShouldPass/4 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/5
[       OK ] MyParamSequence/MyParamTest.ShouldPass/5 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/6
[       OK ] MyParamSequence/MyParamTest.ShouldPass/6 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/7
[       OK ] MyParamSequence/MyParamTest.ShouldPass/7 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/8
[       OK ] MyParamSequence/MyParamTest.ShouldPass/8 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/9
[       OK ] MyParamSequence/MyParamTest.ShouldPass/9 (0 ms)
[----------] 10 tests from MyParamSequence/MyParamTest (0 ms total)

[----------] Global test environment tear-down
[==========] 12 tests from 3 test cases ran. (212 ms total)
[  PASSED  ] 12 tests.

Repeating all tests (iteration 3) . . .

Note: Google Test filter = *-*ShouldFail
[==========] Running 12 tests from 3 test cases.
[----------] Global test environment set-up.
[----------] 1 test from BarDeathTest
[ RUN      ] BarDeathTest.ThreadSafeAndFast
[       OK ] BarDeathTest.ThreadSafeAndFast (210 ms)
[----------] 1 test from BarDeathTest (210 ms total)

[----------] 1 test from FooTest
[ RUN      ] FooTest.ShouldPass
[       OK ] FooTest.ShouldPass (0 ms)
[----------] 1 test from FooTest (0 ms total)

[----------] 10 tests from MyParamSequence/MyParamTest
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/0
[       OK ] MyParamSequence/MyParamTest.ShouldPass/0 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/1
[       OK ] MyParamSequence/MyParamTest.ShouldPass/1 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/2
[       OK ] MyParamSequence/MyParamTest.ShouldPass/2 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/3
[       OK ] MyParamSequence/MyParamTest.ShouldPass/3 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/4
[       OK ] MyParamSequence/MyParamTest.ShouldPass/4 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/5
[       OK ] MyParamSequence/MyParamTest.ShouldPass/5 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/6
[       OK ] MyParamSequence/MyParamTest.ShouldPass/6 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/7
[       OK ] MyParamSequence/MyParamTest.ShouldPass/7 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/8
[       OK ] MyParamSequence/MyParamTest.ShouldPass/8 (0 ms)
[ RUN      ] MyParamSequence/MyParamTest.ShouldPass/9
[       OK ] MyParamSequence/MyParamTest.ShouldPass/9 (0 ms)
[----------] 10 tests from MyParamSequence/MyParamTest (0 ms total)

[----------] Global test environment tear-down
[==========] 12 tests from 3 test cases ran. (210 ms total)
[  PASSED  ] 12 tests.

Repeating all tests (iteration 1) . . .

Note: Google Test filter = *ShouldFail
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FooTest
[ RUN      ] FooTest.ShouldFail
/home/kapil/630/a6/googletest/googletest/test/gtest_repeat_test.cc:96: Failure
      Expected: 0
To be equal to: 1
Expected failure.
[  FAILED  ] FooTest.ShouldFail (0 ms)
[----------] 1 test from FooTest (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] FooTest.ShouldFail

 1 FAILED TEST

Repeating all tests (iteration 2) . . .

Note: Google Test filter = *ShouldFail
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FooTest
[ RUN      ] FooTest.ShouldFail
/home/kapil/630/a6/googletest/googletest/test/gtest_repeat_test.cc:96: Failure
      Expected: 0
To be equal to: 1
Expected failure.
[  FAILED  ] FooTest.ShouldFail (0 ms)
[----------] 1 test from FooTest (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] FooTest.ShouldFail

 1 FAILED TEST

Repeating all tests (iteration 3) . . .

Note: Google Test filter = *ShouldFail
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FooTest
[ RUN      ] FooTest.ShouldFail
/home/kapil/630/a6/googletest/googletest/test/gtest_repeat_test.cc:96: Failure
      Expected: 0
To be equal to: 1
Expected failure.
[  FAILED  ] FooTest.ShouldFail (0 ms)
[----------] 1 test from FooTest (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] FooTest.ShouldFail

 1 FAILED TEST

Repeating all tests (iteration 4) . . .

Note: Google Test filter = *ShouldFail
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FooTest
[ RUN      ] FooTest.ShouldFail
/home/kapil/630/a6/googletest/googletest/test/gtest_repeat_test.cc:96: Failure
      Expected: 0
To be equal to: 1
Expected failure.
[  FAILED  ] FooTest.ShouldFail (0 ms)
[----------] 1 test from FooTest (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] FooTest.ShouldFail

 1 FAILED TEST
PASS
<end of output>
Test time =   2.11 sec
----------------------------------------------------------
Test Passed.
"gtest_repeat_test" end time: Feb 23 18:43 PST
"gtest_repeat_test" time elapsed: 00:00:02
----------------------------------------------------------

36/60 Testing: gtest_sole_header_test
36/60 Test: gtest_sole_header_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_sole_header_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_sole_header_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 2 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 2 tests from NoFatalFailureTest
[ RUN      ] NoFatalFailureTest.ExpectNoFatalFailure
[       OK ] NoFatalFailureTest.ExpectNoFatalFailure (0 ms)
[ RUN      ] NoFatalFailureTest.AssertNoFatalFailure
[       OK ] NoFatalFailureTest.AssertNoFatalFailure (0 ms)
[----------] 2 tests from NoFatalFailureTest (0 ms total)

[----------] Global test environment tear-down
[==========] 2 tests from 1 test case ran. (0 ms total)
[  PASSED  ] 2 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest_sole_header_test" end time: Feb 23 18:43 PST
"gtest_sole_header_test" time elapsed: 00:00:00
----------------------------------------------------------

37/60 Testing: gtest_stress_test
37/60 Test: gtest_stress_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_stress_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_stress_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
[==========] Running 7 tests from 6 test cases.
[----------] Global test environment set-up.
[----------] 1 test from StressTest
[ RUN      ] StressTest.CanUseScopedTraceAndAssertionsInManyThreads

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #49 running...
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #49

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #1 running...

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:
[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #3 running...

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #8 running...
: Thread #4 running...


[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #0 running...
[  INFO ]/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #44 /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #2 running...

[  INFO ]
[  INFO ]  /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #29


[  INFO ] 
[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #41
[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:
[  INFO ] 

/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:[  INFO ] 
: : /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: 
[  INFO ] running... running...
[  INFO ]
[  INFO ]
 /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90: running...: Thread #33 running...[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90::  /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:
[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #5


Thread #43[  INFO ] [  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90: running...

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #7 running...
: /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #35 running...
[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90::  /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90::  running...
: /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3

[  INFO ] 
[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #6

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #47 running...

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: 
[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #30 running...

Thread #[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #28 running...

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #Thread #37 running.../home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3

31 running...

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #12 running...

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #27
[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90: running...
[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: 
[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #

Thread #
[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:
: Thread #13 running...
40[  INFO ] running...

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #38
[  INFO ]  running...
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #10 running...

[  INFO ]Thread #45 running...

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread # /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: 19
Thread #Thread #3421 running...[  INFO ][  INFO ]  /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90::  /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:
[  INFO ]Thread #18 running...

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #24 running... /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #42 running...
15 running...
[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #11 running...
 running...
: Thread #23 running...
: Thread #14 running...
[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #32 running...


/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #17 running...
Thread #26 running...
 running...
Thread #16 running...
Thread #46 running...Thread #9 running...Thread #22 running...
25 running...



[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #36 running...
Thread #48 running...
39 running...

[  INFO ] /home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:90:: Thread #20 running...
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
 running...
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 0 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 1 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 2 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 3 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 4 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 5 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 6 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 7 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 8 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 9 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 10 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #10
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 11 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 12 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 13 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 14 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 15 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 16 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 17 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 18 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #18
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 19 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 20 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #17
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 21 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #21
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #14
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #1
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #0
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #5
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 22 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #3
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #15
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 23 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 24 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #20
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #7
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #23
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #19
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 25 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 26 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #6
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #12
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 27 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #27
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 28 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #28
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #4
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #11
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #8
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 29 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 30 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #30
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #16
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #24
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #26
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #9
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 31 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #31
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 32 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #32
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 33 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #33
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #29
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 34 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #34
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 35 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #35
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 36 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 37 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #37
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #22
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 38 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 39 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #39
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 40 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #40
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 41 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #41
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #2
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 42 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #42
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 43 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #43
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #36
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 44 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #44
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 45 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #45
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #13
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 46 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #46
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 47 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #47
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #38
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 48 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #48
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:113: Failure
Expected: (i) < (0), actual: 49 vs 0
This should always fail.
Google Test trace:
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:95: Iteration #49
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:92: Thread #25
[  FAILED  ] StressTest.CanUseScopedTraceAndAssertionsInManyThreads (129 ms)
[----------] 1 test from StressTest (129 ms total)

[----------] 2 tests from NoFatalFailureTest
[ RUN      ] NoFatalFailureTest.ExpectNoFatalFailureIgnoresFailuresInOtherThreads
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:165: Failure
Failed
Fatal failure in some other thread. (This failure is expected.)
[  FAILED  ] NoFatalFailureTest.ExpectNoFatalFailureIgnoresFailuresInOtherThreads (0 ms)
[ RUN      ] NoFatalFailureTest.AssertNoFatalFailureIgnoresFailuresInOtherThreads
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:165: Failure
Failed
Fatal failure in some other thread. (This failure is expected.)
[  FAILED  ] NoFatalFailureTest.AssertNoFatalFailureIgnoresFailuresInOtherThreads (0 ms)
[----------] 2 tests from NoFatalFailureTest (0 ms total)

[----------] 1 test from FatalFailureTest
[ RUN      ] FatalFailureTest.ExpectFatalFailureIgnoresFailuresInOtherThreads
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:165: Failure
Failed
Fatal failure in some other thread. (This failure is expected.)
/home/kapil/630/a6/googletest/googletest/src/gtest.cc:683: Failure
Expected: 1 fatal failure
  Actual: 0 failures
[  FAILED  ] FatalFailureTest.ExpectFatalFailureIgnoresFailuresInOtherThreads (0 ms)
[----------] 1 test from FatalFailureTest (0 ms total)

[----------] 1 test from FatalFailureOnAllThreadsTest
[ RUN      ] FatalFailureOnAllThreadsTest.ExpectFatalFailureOnAllThreads
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:212: Failure
Failed
This is an expected non-fatal failure.
[  FAILED  ] FatalFailureOnAllThreadsTest.ExpectFatalFailureOnAllThreads (0 ms)
[----------] 1 test from FatalFailureOnAllThreadsTest (0 ms total)

[----------] 1 test from NonFatalFailureTest
[ RUN      ] NonFatalFailureTest.ExpectNonFatalFailureIgnoresFailuresInOtherThreads
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:168: Failure
Failed
Non-fatal failure in some other thread. (This failure is expected.)
/home/kapil/630/a6/googletest/googletest/src/gtest.cc:683: Failure
Expected: 1 non-fatal failure
  Actual: 0 failures
[  FAILED  ] NonFatalFailureTest.ExpectNonFatalFailureIgnoresFailuresInOtherThreads (0 ms)
[----------] 1 test from NonFatalFailureTest (0 ms total)

[----------] 1 test from NonFatalFailureOnAllThreadsTest
[ RUN      ] NonFatalFailureOnAllThreadsTest.ExpectNonFatalFailureOnAllThreads
/home/kapil/630/a6/googletest/googletest/test/gtest_stress_test.cc:231: Failure
Failed
This is an expected non-fatal failure.
[  FAILED  ] NonFatalFailureOnAllThreadsTest.ExpectNonFatalFailureOnAllThreads (0 ms)
[----------] 1 test from NonFatalFailureOnAllThreadsTest (0 ms total)

[----------] Global test environment tear-down
[==========] 7 tests from 6 test cases ran. (130 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 7 tests, listed below:
[  FAILED  ] StressTest.CanUseScopedTraceAndAssertionsInManyThreads
[  FAILED  ] NoFatalFailureTest.ExpectNoFatalFailureIgnoresFailuresInOtherThreads
[  FAILED  ] NoFatalFailureTest.AssertNoFatalFailureIgnoresFailuresInOtherThreads
[  FAILED  ] FatalFailureTest.ExpectFatalFailureIgnoresFailuresInOtherThreads
[  FAILED  ] FatalFailureOnAllThreadsTest.ExpectFatalFailureOnAllThreads
[  FAILED  ] NonFatalFailureTest.ExpectNonFatalFailureIgnoresFailuresInOtherThreads
[  FAILED  ] NonFatalFailureOnAllThreadsTest.ExpectNonFatalFailureOnAllThreads

 7 FAILED TESTS

PASS
<end of output>
Test time =   0.13 sec
----------------------------------------------------------
Test Passed.
"gtest_stress_test" end time: Feb 23 18:43 PST
"gtest_stress_test" time elapsed: 00:00:00
----------------------------------------------------------

38/60 Testing: gtest-test-part_test
38/60 Test: gtest-test-part_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest-test-part_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest-test-part_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 14 tests from 3 test cases.
[----------] Global test environment set-up.
[----------] 1 test from TestPartResultArrayDeathTest
[ RUN      ] TestPartResultArrayDeathTest.DiesWhenIndexIsOutOfBound

Invalid index (-1) into TestPartResultArray.

Invalid index (1) into TestPartResultArray.
[       OK ] TestPartResultArrayDeathTest.DiesWhenIndexIsOutOfBound (212 ms)
[----------] 1 test from TestPartResultArrayDeathTest (212 ms total)

[----------] 10 tests from TestPartResultTest
[ RUN      ] TestPartResultTest.ConstructorWorks
[       OK ] TestPartResultTest.ConstructorWorks (0 ms)
[ RUN      ] TestPartResultTest.ResultAccessorsWork
[       OK ] TestPartResultTest.ResultAccessorsWork (0 ms)
[ RUN      ] TestPartResultTest.type
[       OK ] TestPartResultTest.type (0 ms)
[ RUN      ] TestPartResultTest.file_name
[       OK ] TestPartResultTest.file_name (0 ms)
[ RUN      ] TestPartResultTest.line_number
[       OK ] TestPartResultTest.line_number (0 ms)
[ RUN      ] TestPartResultTest.message
[       OK ] TestPartResultTest.message (0 ms)
[ RUN      ] TestPartResultTest.Passed
[       OK ] TestPartResultTest.Passed (0 ms)
[ RUN      ] TestPartResultTest.Failed
[       OK ] TestPartResultTest.Failed (0 ms)
[ RUN      ] TestPartResultTest.FatallyFailed
[       OK ] TestPartResultTest.FatallyFailed (0 ms)
[ RUN      ] TestPartResultTest.NonfatallyFailed
[       OK ] TestPartResultTest.NonfatallyFailed (0 ms)
[----------] 10 tests from TestPartResultTest (0 ms total)

[----------] 3 tests from TestPartResultArrayTest
[ RUN      ] TestPartResultArrayTest.InitialSizeIsZero
[       OK ] TestPartResultArrayTest.InitialSizeIsZero (0 ms)
[ RUN      ] TestPartResultArrayTest.ContainsGivenResultAfterAppend
[       OK ] TestPartResultArrayTest.ContainsGivenResultAfterAppend (0 ms)
[ RUN      ] TestPartResultArrayTest.ContainsGivenResultsAfterTwoAppends
[       OK ] TestPartResultArrayTest.ContainsGivenResultsAfterTwoAppends (0 ms)
[----------] 3 tests from TestPartResultArrayTest (0 ms total)

[----------] Global test environment tear-down
[==========] 14 tests from 3 test cases ran. (212 ms total)
[  PASSED  ] 14 tests.
<end of output>
Test time =   0.21 sec
----------------------------------------------------------
Test Passed.
"gtest-test-part_test" end time: Feb 23 18:43 PST
"gtest-test-part_test" time elapsed: 00:00:00
----------------------------------------------------------

39/60 Testing: gtest_throw_on_failure_ex_test
39/60 Test: gtest_throw_on_failure_ex_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_throw_on_failure_ex_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_throw_on_failure_ex_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
/home/kapil/630/a6/googletest/googletest/test/gtest_throw_on_failure_ex_test.cc:65: Failure
      Expected: 2
To be equal to: 3
Expected failure
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest_throw_on_failure_ex_test" end time: Feb 23 18:43 PST
"gtest_throw_on_failure_ex_test" time elapsed: 00:00:00
----------------------------------------------------------

40/60 Testing: gtest-typed-test_test
40/60 Test: gtest-typed-test_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest-typed-test_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest-typed-test_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 47 tests from 21 test cases.
[----------] Global test environment set-up.
[----------] 4 tests from TypedTestCasePStateDeathTest
[ RUN      ] TypedTestCasePStateDeathTest.DetectsDuplicates
[       OK ] TypedTestCasePStateDeathTest.DetectsDuplicates (106 ms)
[ RUN      ] TypedTestCasePStateDeathTest.DetectsExtraTest
[       OK ] TypedTestCasePStateDeathTest.DetectsExtraTest (104 ms)
[ RUN      ] TypedTestCasePStateDeathTest.DetectsMissedTest
[       OK ] TypedTestCasePStateDeathTest.DetectsMissedTest (104 ms)
[ RUN      ] TypedTestCasePStateDeathTest.DetectsTestAfterRegistration
[       OK ] TypedTestCasePStateDeathTest.DetectsTestAfterRegistration (105 ms)
[----------] 4 tests from TypedTestCasePStateDeathTest (419 ms total)

[----------] 2 tests from CommonTest/0, where TypeParam = char
[ RUN      ] CommonTest/0.ValuesAreCorrect
[       OK ] CommonTest/0.ValuesAreCorrect (0 ms)
[ RUN      ] CommonTest/0.ValuesAreStillCorrect
[       OK ] CommonTest/0.ValuesAreStillCorrect (0 ms)
[----------] 2 tests from CommonTest/0 (0 ms total)

[----------] 2 tests from CommonTest/1, where TypeParam = int
[ RUN      ] CommonTest/1.ValuesAreCorrect
[       OK ] CommonTest/1.ValuesAreCorrect (0 ms)
[ RUN      ] CommonTest/1.ValuesAreStillCorrect
[       OK ] CommonTest/1.ValuesAreStillCorrect (0 ms)
[----------] 2 tests from CommonTest/1 (0 ms total)

[----------] 1 test from TypedTest1/0, where TypeParam = int
[ RUN      ] TypedTest1/0.A
[       OK ] TypedTest1/0.A (0 ms)
[----------] 1 test from TypedTest1/0 (0 ms total)

[----------] 1 test from TypedTest2/0, where TypeParam = int
[ RUN      ] TypedTest2/0.A
[       OK ] TypedTest2/0.A (0 ms)
[----------] 1 test from TypedTest2/0 (0 ms total)

[----------] 1 test from NumericTest/0, where TypeParam = int
[ RUN      ] NumericTest/0.DefaultIsZero
[       OK ] NumericTest/0.DefaultIsZero (0 ms)
[----------] 1 test from NumericTest/0 (0 ms total)

[----------] 1 test from NumericTest/1, where TypeParam = long
[ RUN      ] NumericTest/1.DefaultIsZero
[       OK ] NumericTest/1.DefaultIsZero (0 ms)
[----------] 1 test from NumericTest/1 (0 ms total)

[----------] 2 tests from TypedTestCasePStateTest
[ RUN      ] TypedTestCasePStateTest.SucceedsForMatchingList
[       OK ] TypedTestCasePStateTest.SucceedsForMatchingList (0 ms)
[ RUN      ] TypedTestCasePStateTest.IgnoresOrderAndSpaces
[       OK ] TypedTestCasePStateTest.IgnoresOrderAndSpaces (0 ms)
[----------] 2 tests from TypedTestCasePStateTest (0 ms total)

[----------] 2 tests from My/DerivedTest/0, where TypeParam = short
[ RUN      ] My/DerivedTest/0.ValuesAreCorrect
[       OK ] My/DerivedTest/0.ValuesAreCorrect (0 ms)
[ RUN      ] My/DerivedTest/0.ValuesAreStillCorrect
[       OK ] My/DerivedTest/0.ValuesAreStillCorrect (0 ms)
[----------] 2 tests from My/DerivedTest/0 (0 ms total)

[----------] 2 tests from My/DerivedTest/1, where TypeParam = long
[ RUN      ] My/DerivedTest/1.ValuesAreCorrect
[       OK ] My/DerivedTest/1.ValuesAreCorrect (0 ms)
[ RUN      ] My/DerivedTest/1.ValuesAreStillCorrect
[       OK ] My/DerivedTest/1.ValuesAreStillCorrect (0 ms)
[----------] 2 tests from My/DerivedTest/1 (0 ms total)

[----------] 2 tests from Int/TypedTestP1/0, where TypeParam = int
[ RUN      ] Int/TypedTestP1/0.A
[       OK ] Int/TypedTestP1/0.A (0 ms)
[ RUN      ] Int/TypedTestP1/0.B
[       OK ] Int/TypedTestP1/0.B (0 ms)
[----------] 2 tests from Int/TypedTestP1/0 (0 ms total)

[----------] 1 test from Int/TypedTestP2/0, where TypeParam = int
[ RUN      ] Int/TypedTestP2/0.A
[       OK ] Int/TypedTestP2/0.A (0 ms)
[----------] 1 test from Int/TypedTestP2/0 (0 ms total)

[----------] 1 test from Double/TypedTestP2/0, where TypeParam = double
[ RUN      ] Double/TypedTestP2/0.A
[       OK ] Double/TypedTestP2/0.A (0 ms)
[----------] 1 test from Double/TypedTestP2/0 (0 ms total)

[----------] 2 tests from My/ContainerTest/0, where TypeParam = std::vector<double, std::allocator<double> >
[ RUN      ] My/ContainerTest/0.CanBeDefaultConstructed
[       OK ] My/ContainerTest/0.CanBeDefaultConstructed (0 ms)
[ RUN      ] My/ContainerTest/0.InitialSizeIsZero
[       OK ] My/ContainerTest/0.InitialSizeIsZero (0 ms)
[----------] 2 tests from My/ContainerTest/0 (0 ms total)

[----------] 2 tests from My/ContainerTest/1, where TypeParam = std::set<char, std::less<char>, std::allocator<char> >
[ RUN      ] My/ContainerTest/1.CanBeDefaultConstructed
[       OK ] My/ContainerTest/1.CanBeDefaultConstructed (0 ms)
[ RUN      ] My/ContainerTest/1.InitialSizeIsZero
[       OK ] My/ContainerTest/1.InitialSizeIsZero (0 ms)
[----------] 2 tests from My/ContainerTest/1 (0 ms total)

[----------] 2 tests from My/NumericTest/0, where TypeParam = int
[ RUN      ] My/NumericTest/0.DefaultIsZero
[       OK ] My/NumericTest/0.DefaultIsZero (0 ms)
[ RUN      ] My/NumericTest/0.ZeroIsLessThanOne
[       OK ] My/NumericTest/0.ZeroIsLessThanOne (0 ms)
[----------] 2 tests from My/NumericTest/0 (0 ms total)

[----------] 2 tests from My/NumericTest/1, where TypeParam = double
[ RUN      ] My/NumericTest/1.DefaultIsZero
[       OK ] My/NumericTest/1.DefaultIsZero (0 ms)
[ RUN      ] My/NumericTest/1.ZeroIsLessThanOne
[       OK ] My/NumericTest/1.ZeroIsLessThanOne (0 ms)
[----------] 2 tests from My/NumericTest/1 (0 ms total)

[----------] 5 tests from My/TrimmedTest/0, where TypeParam = int
[ RUN      ] My/TrimmedTest/0.Test1
[       OK ] My/TrimmedTest/0.Test1 (0 ms)
[ RUN      ] My/TrimmedTest/0.Test2
[       OK ] My/TrimmedTest/0.Test2 (0 ms)
[ RUN      ] My/TrimmedTest/0.Test3
[       OK ] My/TrimmedTest/0.Test3 (0 ms)
[ RUN      ] My/TrimmedTest/0.Test4
[       OK ] My/TrimmedTest/0.Test4 (0 ms)
[ RUN      ] My/TrimmedTest/0.Test5
[       OK ] My/TrimmedTest/0.Test5 (0 ms)
[----------] 5 tests from My/TrimmedTest/0 (0 ms total)

[----------] 5 tests from My/TrimmedTest/1, where TypeParam = double
[ RUN      ] My/TrimmedTest/1.Test1
[       OK ] My/TrimmedTest/1.Test1 (0 ms)
[ RUN      ] My/TrimmedTest/1.Test2
[       OK ] My/TrimmedTest/1.Test2 (0 ms)
[ RUN      ] My/TrimmedTest/1.Test3
[       OK ] My/TrimmedTest/1.Test3 (0 ms)
[ RUN      ] My/TrimmedTest/1.Test4
[       OK ] My/TrimmedTest/1.Test4 (0 ms)
[ RUN      ] My/TrimmedTest/1.Test5
[       OK ] My/TrimmedTest/1.Test5 (0 ms)
[----------] 5 tests from My/TrimmedTest/1 (0 ms total)

[----------] 5 tests from My/TrimmedTest/2, where TypeParam = library2::MyPair<int, int>
[ RUN      ] My/TrimmedTest/2.Test1
[       OK ] My/TrimmedTest/2.Test1 (0 ms)
[ RUN      ] My/TrimmedTest/2.Test2
[       OK ] My/TrimmedTest/2.Test2 (0 ms)
[ RUN      ] My/TrimmedTest/2.Test3
[       OK ] My/TrimmedTest/2.Test3 (0 ms)
[ RUN      ] My/TrimmedTest/2.Test4
[       OK ] My/TrimmedTest/2.Test4 (0 ms)
[ RUN      ] My/TrimmedTest/2.Test5
[       OK ] My/TrimmedTest/2.Test5 (0 ms)
[----------] 5 tests from My/TrimmedTest/2 (0 ms total)

[----------] 2 tests from Vector/ContainerTest/0, where TypeParam = std::vector<int, std::allocator<int> >
[ RUN      ] Vector/ContainerTest/0.CanBeDefaultConstructed
[       OK ] Vector/ContainerTest/0.CanBeDefaultConstructed (0 ms)
[ RUN      ] Vector/ContainerTest/0.InitialSizeIsZero
[       OK ] Vector/ContainerTest/0.InitialSizeIsZero (0 ms)
[----------] 2 tests from Vector/ContainerTest/0 (0 ms total)

[----------] Global test environment tear-down
[==========] 47 tests from 21 test cases ran. (419 ms total)
[  PASSED  ] 47 tests.
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"gtest-typed-test_test" end time: Feb 23 18:43 PST
"gtest-typed-test_test" time elapsed: 00:00:00
----------------------------------------------------------

41/60 Testing: gtest_unittest
41/60 Test: gtest_unittest
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_unittest"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_unittest" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 420 tests from 101 test cases.
[----------] Global test environment set-up.
[----------] 1 test from RandomDeathTest
[ RUN      ] RandomDeathTest.GeneratesCrashesOnInvalidRange
[       OK ] RandomDeathTest.GeneratesCrashesOnInvalidRange (211 ms)
[----------] 1 test from RandomDeathTest (211 ms total)

[----------] 1 test from ContainerUtilityDeathTest
[ RUN      ] ContainerUtilityDeathTest.ShuffleRange
[       OK ] ContainerUtilityDeathTest.ShuffleRange (415 ms)
[----------] 1 test from ContainerUtilityDeathTest (415 ms total)

[----------] 1 test from TestResultDeathTest
[ RUN      ] TestResultDeathTest.GetTestPartResult
[       OK ] TestResultDeathTest.GetTestPartResult (209 ms)
[----------] 1 test from TestResultDeathTest (209 ms total)

[----------] 2 tests from Int32FromEnvOrDieDeathTest
[ RUN      ] Int32FromEnvOrDieDeathTest.AbortsOnFailure
WARNING: The value of environment variable GTEST_VAR is expected to be a 32-bit integer, but actually has value "xxx".
[       OK ] Int32FromEnvOrDieDeathTest.AbortsOnFailure (1 ms)
[ RUN      ] Int32FromEnvOrDieDeathTest.AbortsOnInt32Overflow
WARNING: The value of environment variable GTEST_VAR is expected to be a 32-bit integer, but actually has value 1234567891234567891234, which overflows.
[       OK ] Int32FromEnvOrDieDeathTest.AbortsOnInt32Overflow (1 ms)
[----------] 2 tests from Int32FromEnvOrDieDeathTest (2 ms total)

[----------] 1 test from ShouldShardDeathTest
[ RUN      ] ShouldShardDeathTest.AbortsWhenShardingEnvVarsAreInvalid
Invalid environment variables: we require 0 <= GTEST_SHARD_INDEX < GTEST_TOTAL_SHARDS, but you have GTEST_SHARD_INDEX=4, GTEST_TOTAL_SHARDS=4.
Invalid environment variables: we require 0 <= GTEST_SHARD_INDEX < GTEST_TOTAL_SHARDS, but you have GTEST_SHARD_INDEX=4, GTEST_TOTAL_SHARDS=-2.
Invalid environment variables: you have GTEST_SHARD_INDEX = 5, but have left GTEST_TOTAL_SHARDS unset.
Invalid environment variables: you have GTEST_TOTAL_SHARDS = 5, but have left GTEST_SHARD_INDEX unset.
[       OK ] ShouldShardDeathTest.AbortsWhenShardingEnvVarsAreInvalid (3 ms)
[----------] 1 test from ShouldShardDeathTest (3 ms total)

[----------] 1 test from EventListenerDeathTest
[ RUN      ] EventListenerDeathTest.EventsNotForwardedInDeathTestSubprecesses
[       OK ] EventListenerDeathTest.EventsNotForwardedInDeathTestSubprecesses (104 ms)
[----------] 1 test from EventListenerDeathTest (104 ms total)

[----------] 1 test from CommandLineFlagsTest
[ RUN      ] CommandLineFlagsTest.CanBeAccessedInCodeOnceGTestHIsIncluded
[       OK ] CommandLineFlagsTest.CanBeAccessedInCodeOnceGTestHIsIncluded (0 ms)
[----------] 1 test from CommandLineFlagsTest (0 ms total)

[----------] 7 tests from StreamingListenerTest
[ RUN      ] StreamingListenerTest.OnTestProgramEnd
[       OK ] StreamingListenerTest.OnTestProgramEnd (0 ms)
[ RUN      ] StreamingListenerTest.OnTestIterationEnd
[       OK ] StreamingListenerTest.OnTestIterationEnd (0 ms)
[ RUN      ] StreamingListenerTest.OnTestCaseStart
[       OK ] StreamingListenerTest.OnTestCaseStart (0 ms)
[ RUN      ] StreamingListenerTest.OnTestCaseEnd
[       OK ] StreamingListenerTest.OnTestCaseEnd (0 ms)
[ RUN      ] StreamingListenerTest.OnTestStart
[       OK ] StreamingListenerTest.OnTestStart (0 ms)
[ RUN      ] StreamingListenerTest.OnTestEnd
[       OK ] StreamingListenerTest.OnTestEnd (0 ms)
[ RUN      ] StreamingListenerTest.OnTestPartResult
[       OK ] StreamingListenerTest.OnTestPartResult (0 ms)
[----------] 7 tests from StreamingListenerTest (0 ms total)

[----------] 3 tests from GetRandomSeedFromFlagTest
[ RUN      ] GetRandomSeedFromFlagTest.HandlesZero
[       OK ] GetRandomSeedFromFlagTest.HandlesZero (0 ms)
[ RUN      ] GetRandomSeedFromFlagTest.PreservesValidSeed
[       OK ] GetRandomSeedFromFlagTest.PreservesValidSeed (0 ms)
[ RUN      ] GetRandomSeedFromFlagTest.NormalizesInvalidSeed
[       OK ] GetRandomSeedFromFlagTest.NormalizesInvalidSeed (0 ms)
[----------] 3 tests from GetRandomSeedFromFlagTest (0 ms total)

[----------] 1 test from GetNextRandomSeedTest
[ RUN      ] GetNextRandomSeedTest.WorksForValidInput
[       OK ] GetNextRandomSeedTest.WorksForValidInput (0 ms)
[----------] 1 test from GetNextRandomSeedTest (0 ms total)

[----------] 2 tests from GetTypeIdTest
[ RUN      ] GetTypeIdTest.ReturnsSameValueForSameType
[       OK ] GetTypeIdTest.ReturnsSameValueForSameType (0 ms)
[ RUN      ] GetTypeIdTest.ReturnsDifferentValuesForDifferentTypes
[       OK ] GetTypeIdTest.ReturnsDifferentValuesForDifferentTypes (0 ms)
[----------] 2 tests from GetTypeIdTest (0 ms total)

[----------] 1 test from GetTestTypeIdTest
[ RUN      ] GetTestTypeIdTest.ReturnsTheSameValueInsideOrOutsideOfGoogleTest
[       OK ] GetTestTypeIdTest.ReturnsTheSameValueInsideOrOutsideOfGoogleTest (0 ms)
[----------] 1 test from GetTestTypeIdTest (0 ms total)

[----------] 3 tests from FormatTimeInMillisAsSecondsTest
[ RUN      ] FormatTimeInMillisAsSecondsTest.FormatsZero
[       OK ] FormatTimeInMillisAsSecondsTest.FormatsZero (0 ms)
[ RUN      ] FormatTimeInMillisAsSecondsTest.FormatsPositiveNumber
[       OK ] FormatTimeInMillisAsSecondsTest.FormatsPositiveNumber (0 ms)
[ RUN      ] FormatTimeInMillisAsSecondsTest.FormatsNegativeNumber
[       OK ] FormatTimeInMillisAsSecondsTest.FormatsNegativeNumber (0 ms)
[----------] 3 tests from FormatTimeInMillisAsSecondsTest (0 ms total)

[----------] 5 tests from FormatEpochTimeInMillisAsIso8601Test
[ RUN      ] FormatEpochTimeInMillisAsIso8601Test.PrintsTwoDigitSegments
[       OK ] FormatEpochTimeInMillisAsIso8601Test.PrintsTwoDigitSegments (0 ms)
[ RUN      ] FormatEpochTimeInMillisAsIso8601Test.MillisecondsDoNotAffectResult
[       OK ] FormatEpochTimeInMillisAsIso8601Test.MillisecondsDoNotAffectResult (0 ms)
[ RUN      ] FormatEpochTimeInMillisAsIso8601Test.PrintsLeadingZeroes
[       OK ] FormatEpochTimeInMillisAsIso8601Test.PrintsLeadingZeroes (0 ms)
[ RUN      ] FormatEpochTimeInMillisAsIso8601Test.Prints24HourTime
[       OK ] FormatEpochTimeInMillisAsIso8601Test.Prints24HourTime (0 ms)
[ RUN      ] FormatEpochTimeInMillisAsIso8601Test.PrintsEpochStart
[       OK ] FormatEpochTimeInMillisAsIso8601Test.PrintsEpochStart (0 ms)
[----------] 5 tests from FormatEpochTimeInMillisAsIso8601Test (0 ms total)

[----------] 2 tests from NullLiteralTest
[ RUN      ] NullLiteralTest.IsTrueForNullLiterals
[       OK ] NullLiteralTest.IsTrueForNullLiterals (0 ms)
[ RUN      ] NullLiteralTest.IsFalseForNonNullLiterals
[       OK ] NullLiteralTest.IsFalseForNonNullLiterals (0 ms)
[----------] 2 tests from NullLiteralTest (0 ms total)

[----------] 6 tests from CodePointToUtf8Test
[ RUN      ] CodePointToUtf8Test.CanEncodeNul
[       OK ] CodePointToUtf8Test.CanEncodeNul (0 ms)
[ RUN      ] CodePointToUtf8Test.CanEncodeAscii
[       OK ] CodePointToUtf8Test.CanEncodeAscii (0 ms)
[ RUN      ] CodePointToUtf8Test.CanEncode8To11Bits
[       OK ] CodePointToUtf8Test.CanEncode8To11Bits (0 ms)
[ RUN      ] CodePointToUtf8Test.CanEncode12To16Bits
[       OK ] CodePointToUtf8Test.CanEncode12To16Bits (0 ms)
[ RUN      ] CodePointToUtf8Test.CanEncode17To21Bits
[       OK ] CodePointToUtf8Test.CanEncode17To21Bits (0 ms)
[ RUN      ] CodePointToUtf8Test.CanEncodeInvalidCodePoint
[       OK ] CodePointToUtf8Test.CanEncodeInvalidCodePoint (0 ms)
[----------] 6 tests from CodePointToUtf8Test (0 ms total)

[----------] 9 tests from WideStringToUtf8Test
[ RUN      ] WideStringToUtf8Test.CanEncodeNul
[       OK ] WideStringToUtf8Test.CanEncodeNul (0 ms)
[ RUN      ] WideStringToUtf8Test.CanEncodeAscii
[       OK ] WideStringToUtf8Test.CanEncodeAscii (0 ms)
[ RUN      ] WideStringToUtf8Test.CanEncode8To11Bits
[       OK ] WideStringToUtf8Test.CanEncode8To11Bits (0 ms)
[ RUN      ] WideStringToUtf8Test.CanEncode12To16Bits
[       OK ] WideStringToUtf8Test.CanEncode12To16Bits (0 ms)
[ RUN      ] WideStringToUtf8Test.StopsOnNulCharacter
[       OK ] WideStringToUtf8Test.StopsOnNulCharacter (0 ms)
[ RUN      ] WideStringToUtf8Test.StopsWhenLengthLimitReached
[       OK ] WideStringToUtf8Test.StopsWhenLengthLimitReached (0 ms)
[ RUN      ] WideStringToUtf8Test.CanEncode17To21Bits
[       OK ] WideStringToUtf8Test.CanEncode17To21Bits (0 ms)
[ RUN      ] WideStringToUtf8Test.CanEncodeInvalidCodePoint
[       OK ] WideStringToUtf8Test.CanEncodeInvalidCodePoint (0 ms)
[ RUN      ] WideStringToUtf8Test.ConcatenatesCodepointsCorrectly
[       OK ] WideStringToUtf8Test.ConcatenatesCodepointsCorrectly (0 ms)
[----------] 9 tests from WideStringToUtf8Test (0 ms total)

[----------] 2 tests from RandomTest
[ RUN      ] RandomTest.GeneratesNumbersWithinRange
[       OK ] RandomTest.GeneratesNumbersWithinRange (0 ms)
[ RUN      ] RandomTest.RepeatsWhenReseeded
[       OK ] RandomTest.RepeatsWhenReseeded (0 ms)
[----------] 2 tests from RandomTest (0 ms total)

[----------] 3 tests from ContainerUtilityTest
[ RUN      ] ContainerUtilityTest.CountIf
[       OK ] ContainerUtilityTest.CountIf (0 ms)
[ RUN      ] ContainerUtilityTest.ForEach
[       OK ] ContainerUtilityTest.ForEach (0 ms)
[ RUN      ] ContainerUtilityTest.GetElementOr
[       OK ] ContainerUtilityTest.GetElementOr (0 ms)
[----------] 3 tests from ContainerUtilityTest (0 ms total)

[----------] 7 tests from VectorShuffleTest
[ RUN      ] VectorShuffleTest.HandlesEmptyRange
[       OK ] VectorShuffleTest.HandlesEmptyRange (0 ms)
[ RUN      ] VectorShuffleTest.HandlesRangeOfSizeOne
[       OK ] VectorShuffleTest.HandlesRangeOfSizeOne (0 ms)
[ RUN      ] VectorShuffleTest.ShufflesEntireVector
[       OK ] VectorShuffleTest.ShufflesEntireVector (0 ms)
[ RUN      ] VectorShuffleTest.ShufflesStartOfVector
[       OK ] VectorShuffleTest.ShufflesStartOfVector (0 ms)
[ RUN      ] VectorShuffleTest.ShufflesEndOfVector
[       OK ] VectorShuffleTest.ShufflesEndOfVector (0 ms)
[ RUN      ] VectorShuffleTest.ShufflesMiddleOfVector
[       OK ] VectorShuffleTest.ShufflesMiddleOfVector (0 ms)
[ RUN      ] VectorShuffleTest.ShufflesRepeatably
[       OK ] VectorShuffleTest.ShufflesRepeatably (0 ms)
[----------] 7 tests from VectorShuffleTest (0 ms total)

[----------] 1 test from AssertHelperTest
[ RUN      ] AssertHelperTest.AssertHelperIsSmall
[       OK ] AssertHelperTest.AssertHelperIsSmall (0 ms)
[----------] 1 test from AssertHelperTest (0 ms total)

[----------] 2 tests from StringTest
[ RUN      ] StringTest.EndsWithCaseInsensitive
[       OK ] StringTest.EndsWithCaseInsensitive (0 ms)
[ RUN      ] StringTest.CaseInsensitiveWideCStringEquals
[       OK ] StringTest.CaseInsensitiveWideCStringEquals (0 ms)
[----------] 2 tests from StringTest (0 ms total)

[----------] 4 tests from TestPropertyTest
[ RUN      ] TestPropertyTest.StringValue
[       OK ] TestPropertyTest.StringValue (0 ms)
[ RUN      ] TestPropertyTest.ReplaceStringValue
[       OK ] TestPropertyTest.ReplaceStringValue (0 ms)
[ RUN      ] TestPropertyTest.ConstructorWorks
[       OK ] TestPropertyTest.ConstructorWorks (0 ms)
[ RUN      ] TestPropertyTest.SetValue
[       OK ] TestPropertyTest.SetValue (0 ms)
[----------] 4 tests from TestPropertyTest (0 ms total)

[----------] 2 tests from ScopedFakeTestPartResultReporterTest
[ RUN      ] ScopedFakeTestPartResultReporterTest.InterceptsTestFailures
[       OK ] ScopedFakeTestPartResultReporterTest.InterceptsTestFailures (0 ms)
[ RUN      ] ScopedFakeTestPartResultReporterTest.DeprecatedConstructor
[       OK ] ScopedFakeTestPartResultReporterTest.DeprecatedConstructor (0 ms)
[----------] 2 tests from ScopedFakeTestPartResultReporterTest (0 ms total)

[----------] 1 test from ScopedFakeTestPartResultReporterWithThreadsTest
[ RUN      ] ScopedFakeTestPartResultReporterWithThreadsTest.InterceptsTestFailuresInAllThreads
[       OK ] ScopedFakeTestPartResultReporterWithThreadsTest.InterceptsTestFailuresInAllThreads (0 ms)
[----------] 1 test from ScopedFakeTestPartResultReporterWithThreadsTest (0 ms total)

[----------] 6 tests from ExpectFatalFailureTest
[ RUN      ] ExpectFatalFailureTest.CatchesFatalFaliure
[       OK ] ExpectFatalFailureTest.CatchesFatalFaliure (1 ms)
[ RUN      ] ExpectFatalFailureTest.AcceptsStdStringObject
[       OK ] ExpectFatalFailureTest.AcceptsStdStringObject (0 ms)
[ RUN      ] ExpectFatalFailureTest.CatchesFatalFailureOnAllThreads
[       OK ] ExpectFatalFailureTest.CatchesFatalFailureOnAllThreads (0 ms)
[ RUN      ] ExpectFatalFailureTest.CanBeUsedInNonVoidFunction
[       OK ] ExpectFatalFailureTest.CanBeUsedInNonVoidFunction (0 ms)
[ RUN      ] ExpectFatalFailureTest.DoesNotAbort
[       OK ] ExpectFatalFailureTest.DoesNotAbort (0 ms)
[ RUN      ] ExpectFatalFailureTest.AcceptsMacroThatExpandsToUnprotectedComma
[       OK ] ExpectFatalFailureTest.AcceptsMacroThatExpandsToUnprotectedComma (0 ms)
[----------] 6 tests from ExpectFatalFailureTest (1 ms total)

[----------] 4 tests from ExpectNonfatalFailureTest
[ RUN      ] ExpectNonfatalFailureTest.CatchesNonfatalFailure
[       OK ] ExpectNonfatalFailureTest.CatchesNonfatalFailure (0 ms)
[ RUN      ] ExpectNonfatalFailureTest.AcceptsStdStringObject
[       OK ] ExpectNonfatalFailureTest.AcceptsStdStringObject (0 ms)
[ RUN      ] ExpectNonfatalFailureTest.CatchesNonfatalFailureOnAllThreads
[       OK ] ExpectNonfatalFailureTest.CatchesNonfatalFailureOnAllThreads (0 ms)
[ RUN      ] ExpectNonfatalFailureTest.AcceptsMacroThatExpandsToUnprotectedComma
[       OK ] ExpectNonfatalFailureTest.AcceptsMacroThatExpandsToUnprotectedComma (0 ms)
[----------] 4 tests from ExpectNonfatalFailureTest (0 ms total)

[----------] 2 tests from ExpectFailureWithThreadsTest
[ RUN      ] ExpectFailureWithThreadsTest.ExpectFatalFailureOnAllThreads
[       OK ] ExpectFailureWithThreadsTest.ExpectFatalFailureOnAllThreads (0 ms)
[ RUN      ] ExpectFailureWithThreadsTest.ExpectNonFatalFailureOnAllThreads
[       OK ] ExpectFailureWithThreadsTest.ExpectNonFatalFailureOnAllThreads (0 ms)
[----------] 2 tests from ExpectFailureWithThreadsTest (0 ms total)

[----------] 3 tests from TestResultTest
[ RUN      ] TestResultTest.total_part_count
[       OK ] TestResultTest.total_part_count (0 ms)
[ RUN      ] TestResultTest.Passed
[       OK ] TestResultTest.Passed (0 ms)
[ RUN      ] TestResultTest.Failed
[       OK ] TestResultTest.Failed (0 ms)
[----------] 3 tests from TestResultTest (0 ms total)

[----------] 5 tests from TestResultPropertyTest
[ RUN      ] TestResultPropertyTest.NoPropertiesFoundWhenNoneAreAdded
[       OK ] TestResultPropertyTest.NoPropertiesFoundWhenNoneAreAdded (0 ms)
[ RUN      ] TestResultPropertyTest.OnePropertyFoundWhenAdded
[       OK ] TestResultPropertyTest.OnePropertyFoundWhenAdded (0 ms)
[ RUN      ] TestResultPropertyTest.MultiplePropertiesFoundWhenAdded
[       OK ] TestResultPropertyTest.MultiplePropertiesFoundWhenAdded (0 ms)
[ RUN      ] TestResultPropertyTest.OverridesValuesForDuplicateKeys
[       OK ] TestResultPropertyTest.OverridesValuesForDuplicateKeys (0 ms)
[ RUN      ] TestResultPropertyTest.GetTestProperty
[       OK ] TestResultPropertyTest.GetTestProperty (212 ms)
[----------] 5 tests from TestResultPropertyTest (212 ms total)

[----------] 2 tests from GTestFlagSaverTest
[ RUN      ] GTestFlagSaverTest.ModifyGTestFlags
[       OK ] GTestFlagSaverTest.ModifyGTestFlags (0 ms)
[ RUN      ] GTestFlagSaverTest.VerifyGTestFlags
[       OK ] GTestFlagSaverTest.VerifyGTestFlags (0 ms)
[----------] 2 tests from GTestFlagSaverTest (0 ms total)

[----------] 4 tests from Int32FromGTestEnvTest
[ RUN      ] Int32FromGTestEnvTest.ReturnsDefaultWhenVariableIsNotSet
[       OK ] Int32FromGTestEnvTest.ReturnsDefaultWhenVariableIsNotSet (0 ms)
[ RUN      ] Int32FromGTestEnvTest.ReturnsDefaultWhenValueOverflows
(expecting 2 warnings)
WARNING: Environment variable GTEST_TEMP is expected to be a 32-bit integer, but actually has value 12345678987654321, which overflows.
The default value 20 is used.
WARNING: Environment variable GTEST_TEMP is expected to be a 32-bit integer, but actually has value -12345678987654321, which overflows.
The default value 30 is used.
[       OK ] Int32FromGTestEnvTest.ReturnsDefaultWhenValueOverflows (0 ms)
[ RUN      ] Int32FromGTestEnvTest.ReturnsDefaultWhenValueIsInvalid
(expecting 2 warnings)
WARNING: Environment variable GTEST_TEMP is expected to be a 32-bit integer, but actually has value "A1".
The default value 40 is used.
WARNING: Environment variable GTEST_TEMP is expected to be a 32-bit integer, but actually has value "12X".
The default value 50 is used.
[       OK ] Int32FromGTestEnvTest.ReturnsDefaultWhenValueIsInvalid (0 ms)
[ RUN      ] Int32FromGTestEnvTest.ParsesAndReturnsValidValue
[       OK ] Int32FromGTestEnvTest.ParsesAndReturnsValidValue (0 ms)
[----------] 4 tests from Int32FromGTestEnvTest (0 ms total)

[----------] 4 tests from ParseInt32FlagTest
[ RUN      ] ParseInt32FlagTest.ReturnsFalseForInvalidFlag
[       OK ] ParseInt32FlagTest.ReturnsFalseForInvalidFlag (0 ms)
[ RUN      ] ParseInt32FlagTest.ReturnsDefaultWhenValueOverflows
(expecting 2 warnings)
[       OK ] ParseInt32FlagTest.ReturnsDefaultWhenValueOverflows (0 ms)
[ RUN      ] ParseInt32FlagTest.ReturnsDefaultWhenValueIsInvalid
(expecting 2 warnings)
[       OK ] ParseInt32FlagTest.ReturnsDefaultWhenValueIsInvalid (0 ms)
[ RUN      ] ParseInt32FlagTest.ParsesAndReturnsValidValue
[       OK ] ParseInt32FlagTest.ParsesAndReturnsValidValue (0 ms)
[----------] 4 tests from ParseInt32FlagTest (0 ms total)

[----------] 1 test from Int32FromEnvOrDieTest
[ RUN      ] Int32FromEnvOrDieTest.ParsesAndReturnsValidValue
[       OK ] Int32FromEnvOrDieTest.ParsesAndReturnsValidValue (0 ms)
[----------] 1 test from Int32FromEnvOrDieTest (0 ms total)

[----------] 2 tests from ShouldRunTestOnShardTest
[ RUN      ] ShouldRunTestOnShardTest.IsPartitionWhenThereIsOneShard
[       OK ] ShouldRunTestOnShardTest.IsPartitionWhenThereIsOneShard (0 ms)
[ RUN      ] ShouldRunTestOnShardTest.IsPartitionWhenThereAreFiveShards
[       OK ] ShouldRunTestOnShardTest.IsPartitionWhenThereAreFiveShards (0 ms)
[----------] 2 tests from ShouldRunTestOnShardTest (0 ms total)

[----------] 3 tests from ShouldShardTest
[ RUN      ] ShouldShardTest.ReturnsFalseWhenNeitherEnvVarIsSet
[       OK ] ShouldShardTest.ReturnsFalseWhenNeitherEnvVarIsSet (0 ms)
[ RUN      ] ShouldShardTest.ReturnsFalseWhenTotalShardIsOne
[       OK ] ShouldShardTest.ReturnsFalseWhenTotalShardIsOne (0 ms)
[ RUN      ] ShouldShardTest.WorksWhenShardEnvVarsAreValid
[       OK ] ShouldShardTest.WorksWhenShardEnvVarsAreValid (0 ms)
[----------] 3 tests from ShouldShardTest (0 ms total)

[----------] 2 tests from UnitTestTest
[ RUN      ] UnitTestTest.CanGetOriginalWorkingDir
[       OK ] UnitTestTest.CanGetOriginalWorkingDir (0 ms)
[ RUN      ] UnitTestTest.ReturnsPlausibleTimestamp
[       OK ] UnitTestTest.ReturnsPlausibleTimestamp (0 ms)
[----------] 2 tests from UnitTestTest (0 ms total)

[----------] 5 tests from UnitTestRecordPropertyTest
[ RUN      ] UnitTestRecordPropertyTest.OnePropertyFoundWhenAdded
[       OK ] UnitTestRecordPropertyTest.OnePropertyFoundWhenAdded (0 ms)
[ RUN      ] UnitTestRecordPropertyTest.MultiplePropertiesFoundWhenAdded
[       OK ] UnitTestRecordPropertyTest.MultiplePropertiesFoundWhenAdded (0 ms)
[ RUN      ] UnitTestRecordPropertyTest.OverridesValuesForDuplicateKeys
[       OK ] UnitTestRecordPropertyTest.OverridesValuesForDuplicateKeys (0 ms)
[ RUN      ] UnitTestRecordPropertyTest.AddFailureInsideTestsWhenUsingTestCaseReservedKeys
[       OK ] UnitTestRecordPropertyTest.AddFailureInsideTestsWhenUsingTestCaseReservedKeys (0 ms)
[ RUN      ] UnitTestRecordPropertyTest.AddRecordWithReservedKeysGeneratesCorrectPropertyList
[       OK ] UnitTestRecordPropertyTest.AddRecordWithReservedKeysGeneratesCorrectPropertyList (0 ms)
[----------] 5 tests from UnitTestRecordPropertyTest (0 ms total)

[----------] 3 tests from Pred1Test
[ RUN      ] Pred1Test.WithoutFormat
[       OK ] Pred1Test.WithoutFormat (0 ms)
[ RUN      ] Pred1Test.WithFormat
[       OK ] Pred1Test.WithFormat (0 ms)
[ RUN      ] Pred1Test.SingleEvaluationOnFailure
[       OK ] Pred1Test.SingleEvaluationOnFailure (1 ms)
[----------] 3 tests from Pred1Test (1 ms total)

[----------] 3 tests from PredTest
[ RUN      ] PredTest.WithoutFormat
[       OK ] PredTest.WithoutFormat (0 ms)
[ RUN      ] PredTest.WithFormat
[       OK ] PredTest.WithFormat (0 ms)
[ RUN      ] PredTest.SingleEvaluationOnFailure
[       OK ] PredTest.SingleEvaluationOnFailure (0 ms)
[----------] 3 tests from PredTest (0 ms total)

[----------] 2 tests from PredicateAssertionTest
[ RUN      ] PredicateAssertionTest.AcceptsOverloadedFunction
[       OK ] PredicateAssertionTest.AcceptsOverloadedFunction (0 ms)
[ RUN      ] PredicateAssertionTest.AcceptsTemplateFunction
[       OK ] PredicateAssertionTest.AcceptsTemplateFunction (0 ms)
[----------] 2 tests from PredicateAssertionTest (0 ms total)

[----------] 2 tests from PredicateFormatAssertionTest
[ RUN      ] PredicateFormatAssertionTest.AcceptsOverloadedFunction
[       OK ] PredicateFormatAssertionTest.AcceptsOverloadedFunction (0 ms)
[ RUN      ] PredicateFormatAssertionTest.AcceptsTemplateFunction
[       OK ] PredicateFormatAssertionTest.AcceptsTemplateFunction (0 ms)
[----------] 2 tests from PredicateFormatAssertionTest (0 ms total)

[----------] 8 tests from StringAssertionTest
[ RUN      ] StringAssertionTest.ASSERT_STREQ
[       OK ] StringAssertionTest.ASSERT_STREQ (0 ms)
[ RUN      ] StringAssertionTest.ASSERT_STREQ_Null
[       OK ] StringAssertionTest.ASSERT_STREQ_Null (0 ms)
[ RUN      ] StringAssertionTest.ASSERT_STREQ_Null2
[       OK ] StringAssertionTest.ASSERT_STREQ_Null2 (0 ms)
[ RUN      ] StringAssertionTest.ASSERT_STRNE
[       OK ] StringAssertionTest.ASSERT_STRNE (0 ms)
[ RUN      ] StringAssertionTest.ASSERT_STRCASEEQ
[       OK ] StringAssertionTest.ASSERT_STRCASEEQ (0 ms)
[ RUN      ] StringAssertionTest.ASSERT_STRCASENE
[       OK ] StringAssertionTest.ASSERT_STRCASENE (0 ms)
[ RUN      ] StringAssertionTest.STREQ_Wide
[       OK ] StringAssertionTest.STREQ_Wide (0 ms)
[ RUN      ] StringAssertionTest.STRNE_Wide
[       OK ] StringAssertionTest.STRNE_Wide (0 ms)
[----------] 8 tests from StringAssertionTest (0 ms total)

[----------] 6 tests from IsSubstringTest
[ RUN      ] IsSubstringTest.ReturnsCorrectResultForCString
[       OK ] IsSubstringTest.ReturnsCorrectResultForCString (0 ms)
[ RUN      ] IsSubstringTest.ReturnsCorrectResultForWideCString
[       OK ] IsSubstringTest.ReturnsCorrectResultForWideCString (0 ms)
[ RUN      ] IsSubstringTest.GeneratesCorrectMessageForCString
[       OK ] IsSubstringTest.GeneratesCorrectMessageForCString (0 ms)
[ RUN      ] IsSubstringTest.ReturnsCorrectResultsForStdString
[       OK ] IsSubstringTest.ReturnsCorrectResultsForStdString (0 ms)
[ RUN      ] IsSubstringTest.ReturnsCorrectResultForStdWstring
[       OK ] IsSubstringTest.ReturnsCorrectResultForStdWstring (0 ms)
[ RUN      ] IsSubstringTest.GeneratesCorrectMessageForWstring
[       OK ] IsSubstringTest.GeneratesCorrectMessageForWstring (0 ms)
[----------] 6 tests from IsSubstringTest (0 ms total)

[----------] 6 tests from IsNotSubstringTest
[ RUN      ] IsNotSubstringTest.ReturnsCorrectResultForCString
[       OK ] IsNotSubstringTest.ReturnsCorrectResultForCString (0 ms)
[ RUN      ] IsNotSubstringTest.ReturnsCorrectResultForWideCString
[       OK ] IsNotSubstringTest.ReturnsCorrectResultForWideCString (0 ms)
[ RUN      ] IsNotSubstringTest.GeneratesCorrectMessageForWideCString
[       OK ] IsNotSubstringTest.GeneratesCorrectMessageForWideCString (0 ms)
[ RUN      ] IsNotSubstringTest.ReturnsCorrectResultsForStdString
[       OK ] IsNotSubstringTest.ReturnsCorrectResultsForStdString (0 ms)
[ RUN      ] IsNotSubstringTest.GeneratesCorrectMessageForStdString
[       OK ] IsNotSubstringTest.GeneratesCorrectMessageForStdString (0 ms)
[ RUN      ] IsNotSubstringTest.ReturnsCorrectResultForStdWstring
[       OK ] IsNotSubstringTest.ReturnsCorrectResultForStdWstring (1 ms)
[----------] 6 tests from IsNotSubstringTest (1 ms total)

[----------] 13 tests from FloatTest
[ RUN      ] FloatTest.Size
[       OK ] FloatTest.Size (0 ms)
[ RUN      ] FloatTest.Zeros
[       OK ] FloatTest.Zeros (0 ms)
[ RUN      ] FloatTest.AlmostZeros
[       OK ] FloatTest.AlmostZeros (0 ms)
[ RUN      ] FloatTest.SmallDiff
[       OK ] FloatTest.SmallDiff (0 ms)
[ RUN      ] FloatTest.LargeDiff
[       OK ] FloatTest.LargeDiff (0 ms)
[ RUN      ] FloatTest.Infinity
[       OK ] FloatTest.Infinity (0 ms)
[ RUN      ] FloatTest.NaN
[       OK ] FloatTest.NaN (0 ms)
[ RUN      ] FloatTest.Reflexive
[       OK ] FloatTest.Reflexive (0 ms)
[ RUN      ] FloatTest.Commutative
[       OK ] FloatTest.Commutative (0 ms)
[ RUN      ] FloatTest.EXPECT_NEAR
[       OK ] FloatTest.EXPECT_NEAR (0 ms)
[ RUN      ] FloatTest.ASSERT_NEAR
[       OK ] FloatTest.ASSERT_NEAR (0 ms)
[ RUN      ] FloatTest.FloatLESucceeds
[       OK ] FloatTest.FloatLESucceeds (0 ms)
[ RUN      ] FloatTest.FloatLEFails
[       OK ] FloatTest.FloatLEFails (0 ms)
[----------] 13 tests from FloatTest (0 ms total)

[----------] 13 tests from DoubleTest
[ RUN      ] DoubleTest.Size
[       OK ] DoubleTest.Size (0 ms)
[ RUN      ] DoubleTest.Zeros
[       OK ] DoubleTest.Zeros (0 ms)
[ RUN      ] DoubleTest.AlmostZeros
[       OK ] DoubleTest.AlmostZeros (0 ms)
[ RUN      ] DoubleTest.SmallDiff
[       OK ] DoubleTest.SmallDiff (0 ms)
[ RUN      ] DoubleTest.LargeDiff
[       OK ] DoubleTest.LargeDiff (0 ms)
[ RUN      ] DoubleTest.Infinity
[       OK ] DoubleTest.Infinity (0 ms)
[ RUN      ] DoubleTest.NaN
[       OK ] DoubleTest.NaN (0 ms)
[ RUN      ] DoubleTest.Reflexive
[       OK ] DoubleTest.Reflexive (0 ms)
[ RUN      ] DoubleTest.Commutative
[       OK ] DoubleTest.Commutative (0 ms)
[ RUN      ] DoubleTest.EXPECT_NEAR
[       OK ] DoubleTest.EXPECT_NEAR (0 ms)
[ RUN      ] DoubleTest.ASSERT_NEAR
[       OK ] DoubleTest.ASSERT_NEAR (0 ms)
[ RUN      ] DoubleTest.DoubleLESucceeds
[       OK ] DoubleTest.DoubleLESucceeds (0 ms)
[ RUN      ] DoubleTest.DoubleLEFails
[       OK ] DoubleTest.DoubleLEFails (0 ms)
[----------] 13 tests from DoubleTest (0 ms total)

[----------] 1 test from DisabledTest
[ RUN      ] DisabledTest.NotDISABLED_TestShouldRun
[       OK ] DisabledTest.NotDISABLED_TestShouldRun (0 ms)
[----------] 1 test from DisabledTest (0 ms total)

[----------] 5 tests from SingleEvaluationTest
[ RUN      ] SingleEvaluationTest.FailedASSERT_STREQ
[       OK ] SingleEvaluationTest.FailedASSERT_STREQ (0 ms)
[ RUN      ] SingleEvaluationTest.ASSERT_STR
[       OK ] SingleEvaluationTest.ASSERT_STR (1 ms)
[ RUN      ] SingleEvaluationTest.FailedASSERT_NE
[       OK ] SingleEvaluationTest.FailedASSERT_NE (0 ms)
[ RUN      ] SingleEvaluationTest.OtherCases
[       OK ] SingleEvaluationTest.OtherCases (0 ms)
[ RUN      ] SingleEvaluationTest.ExceptionTests
[       OK ] SingleEvaluationTest.ExceptionTests (0 ms)
[----------] 5 tests from SingleEvaluationTest (1 ms total)

[----------] 5 tests from NoFatalFailureTest
[ RUN      ] NoFatalFailureTest.NoFailure
[       OK ] NoFatalFailureTest.NoFailure (0 ms)
[ RUN      ] NoFatalFailureTest.NonFatalIsNoFailure
[       OK ] NoFatalFailureTest.NonFatalIsNoFailure (0 ms)
[ RUN      ] NoFatalFailureTest.AssertNoFatalFailureOnFatalFailure
[       OK ] NoFatalFailureTest.AssertNoFatalFailureOnFatalFailure (0 ms)
[ RUN      ] NoFatalFailureTest.ExpectNoFatalFailureOnFatalFailure
[       OK ] NoFatalFailureTest.ExpectNoFatalFailureOnFatalFailure (0 ms)
[ RUN      ] NoFatalFailureTest.MessageIsStreamable
[       OK ] NoFatalFailureTest.MessageIsStreamable (0 ms)
[----------] 5 tests from NoFatalFailureTest (0 ms total)

[----------] 1 test from EditDistance
[ RUN      ] EditDistance.TestCases
[       OK ] EditDistance.TestCases (0 ms)
[----------] 1 test from EditDistance (0 ms total)

[----------] 23 tests from AssertionTest
[ RUN      ] AssertionTest.EqFailure
[       OK ] AssertionTest.EqFailure (0 ms)
[ RUN      ] AssertionTest.EqFailureWithDiff
[       OK ] AssertionTest.EqFailureWithDiff (0 ms)
[ RUN      ] AssertionTest.AppendUserMessage
[       OK ] AssertionTest.AppendUserMessage (0 ms)
[ RUN      ] AssertionTest.ASSERT_TRUE
[       OK ] AssertionTest.ASSERT_TRUE (0 ms)
[ RUN      ] AssertionTest.AssertTrueWithAssertionResult
[       OK ] AssertionTest.AssertTrueWithAssertionResult (0 ms)
[ RUN      ] AssertionTest.ASSERT_FALSE
[       OK ] AssertionTest.ASSERT_FALSE (0 ms)
[ RUN      ] AssertionTest.AssertFalseWithAssertionResult
[       OK ] AssertionTest.AssertFalseWithAssertionResult (0 ms)
[ RUN      ] AssertionTest.ASSERT_EQ
[       OK ] AssertionTest.ASSERT_EQ (0 ms)
[ RUN      ] AssertionTest.ASSERT_EQ_NULL
[       OK ] AssertionTest.ASSERT_EQ_NULL (0 ms)
[ RUN      ] AssertionTest.ASSERT_NE
[       OK ] AssertionTest.ASSERT_NE (1 ms)
[ RUN      ] AssertionTest.ASSERT_LE
[       OK ] AssertionTest.ASSERT_LE (0 ms)
[ RUN      ] AssertionTest.ASSERT_LT
[       OK ] AssertionTest.ASSERT_LT (0 ms)
[ RUN      ] AssertionTest.ASSERT_GE
[       OK ] AssertionTest.ASSERT_GE (0 ms)
[ RUN      ] AssertionTest.ASSERT_GT
[       OK ] AssertionTest.ASSERT_GT (0 ms)
[ RUN      ] AssertionTest.ASSERT_THROW
[       OK ] AssertionTest.ASSERT_THROW (0 ms)
[ RUN      ] AssertionTest.ASSERT_NO_THROW
[       OK ] AssertionTest.ASSERT_NO_THROW (0 ms)
[ RUN      ] AssertionTest.ASSERT_ANY_THROW
[       OK ] AssertionTest.ASSERT_ANY_THROW (0 ms)
[ RUN      ] AssertionTest.AssertPrecedence
[       OK ] AssertionTest.AssertPrecedence (0 ms)
[ RUN      ] AssertionTest.NonFixtureSubroutine
[       OK ] AssertionTest.NonFixtureSubroutine (0 ms)
[ RUN      ] AssertionTest.AssertWorksWithUncopyableObject
[       OK ] AssertionTest.AssertWorksWithUncopyableObject (0 ms)
[ RUN      ] AssertionTest.ExpectWorksWithUncopyableObject
[       OK ] AssertionTest.ExpectWorksWithUncopyableObject (0 ms)
[ RUN      ] AssertionTest.NamedEnum
[       OK ] AssertionTest.NamedEnum (0 ms)
[ RUN      ] AssertionTest.AnonymousEnum
[       OK ] AssertionTest.AnonymousEnum (0 ms)
[----------] 23 tests from AssertionTest (1 ms total)

[----------] 19 tests from ExpectTest
[ RUN      ] ExpectTest.ASSERT_EQ_Double
[       OK ] ExpectTest.ASSERT_EQ_Double (0 ms)
[ RUN      ] ExpectTest.ASSERT_EQ_0
[       OK ] ExpectTest.ASSERT_EQ_0 (0 ms)
[ RUN      ] ExpectTest.EXPECT_TRUE
[       OK ] ExpectTest.EXPECT_TRUE (0 ms)
[ RUN      ] ExpectTest.ExpectTrueWithAssertionResult
[       OK ] ExpectTest.ExpectTrueWithAssertionResult (0 ms)
[ RUN      ] ExpectTest.EXPECT_FALSE
[       OK ] ExpectTest.EXPECT_FALSE (0 ms)
[ RUN      ] ExpectTest.ExpectFalseWithAssertionResult
[       OK ] ExpectTest.ExpectFalseWithAssertionResult (0 ms)
[ RUN      ] ExpectTest.EXPECT_EQ
[       OK ] ExpectTest.EXPECT_EQ (0 ms)
[ RUN      ] ExpectTest.EXPECT_EQ_Double
[       OK ] ExpectTest.EXPECT_EQ_Double (0 ms)
[ RUN      ] ExpectTest.EXPECT_EQ_NULL
[       OK ] ExpectTest.EXPECT_EQ_NULL (0 ms)
[ RUN      ] ExpectTest.EXPECT_EQ_0
[       OK ] ExpectTest.EXPECT_EQ_0 (0 ms)
[ RUN      ] ExpectTest.EXPECT_NE
[       OK ] ExpectTest.EXPECT_NE (0 ms)
[ RUN      ] ExpectTest.EXPECT_LE
[       OK ] ExpectTest.EXPECT_LE (1 ms)
[ RUN      ] ExpectTest.EXPECT_LT
[       OK ] ExpectTest.EXPECT_LT (0 ms)
[ RUN      ] ExpectTest.EXPECT_GE
[       OK ] ExpectTest.EXPECT_GE (0 ms)
[ RUN      ] ExpectTest.EXPECT_GT
[       OK ] ExpectTest.EXPECT_GT (0 ms)
[ RUN      ] ExpectTest.EXPECT_THROW
[       OK ] ExpectTest.EXPECT_THROW (0 ms)
[ RUN      ] ExpectTest.EXPECT_NO_THROW
[       OK ] ExpectTest.EXPECT_NO_THROW (0 ms)
[ RUN      ] ExpectTest.EXPECT_ANY_THROW
[       OK ] ExpectTest.EXPECT_ANY_THROW (0 ms)
[ RUN      ] ExpectTest.ExpectPrecedence
[       OK ] ExpectTest.ExpectPrecedence (0 ms)
[----------] 19 tests from ExpectTest (1 ms total)

[----------] 5 tests from AssertionSyntaxTest
[ RUN      ] AssertionSyntaxTest.BasicAssertionsBehavesLikeSingleStatement
[       OK ] AssertionSyntaxTest.BasicAssertionsBehavesLikeSingleStatement (0 ms)
[ RUN      ] AssertionSyntaxTest.ExceptionAssertionsBehavesLikeSingleStatement
[       OK ] AssertionSyntaxTest.ExceptionAssertionsBehavesLikeSingleStatement (0 ms)
[ RUN      ] AssertionSyntaxTest.NoFatalFailureAssertionsBehavesLikeSingleStatement
[       OK ] AssertionSyntaxTest.NoFatalFailureAssertionsBehavesLikeSingleStatement (0 ms)
[ RUN      ] AssertionSyntaxTest.WorksWithSwitch
[       OK ] AssertionSyntaxTest.WorksWithSwitch (0 ms)
[ RUN      ] AssertionSyntaxTest.WorksWithConst
[       OK ] AssertionSyntaxTest.WorksWithConst (0 ms)
[----------] 5 tests from AssertionSyntaxTest (0 ms total)

[----------] 1 test from ExpectThrowTest
[ RUN      ] ExpectThrowTest.DoesNotGenerateUnreachableCodeWarning
[       OK ] ExpectThrowTest.DoesNotGenerateUnreachableCodeWarning (0 ms)
[----------] 1 test from ExpectThrowTest (0 ms total)

[----------] 5 tests from SuccessfulAssertionTest
[ RUN      ] SuccessfulAssertionTest.SUCCEED
[       OK ] SuccessfulAssertionTest.SUCCEED (0 ms)
[ RUN      ] SuccessfulAssertionTest.EXPECT
[       OK ] SuccessfulAssertionTest.EXPECT (0 ms)
[ RUN      ] SuccessfulAssertionTest.EXPECT_STR
[       OK ] SuccessfulAssertionTest.EXPECT_STR (0 ms)
[ RUN      ] SuccessfulAssertionTest.ASSERT
[       OK ] SuccessfulAssertionTest.ASSERT (0 ms)
[ RUN      ] SuccessfulAssertionTest.ASSERT_STR
[       OK ] SuccessfulAssertionTest.ASSERT_STR (0 ms)
[----------] 5 tests from SuccessfulAssertionTest (0 ms total)

[----------] 8 tests from AssertionWithMessageTest
[ RUN      ] AssertionWithMessageTest.EXPECT
[       OK ] AssertionWithMessageTest.EXPECT (0 ms)
[ RUN      ] AssertionWithMessageTest.ASSERT
[       OK ] AssertionWithMessageTest.ASSERT (0 ms)
[ RUN      ] AssertionWithMessageTest.ASSERT_STR
[       OK ] AssertionWithMessageTest.ASSERT_STR (0 ms)
[ RUN      ] AssertionWithMessageTest.ASSERT_FLOATING
[       OK ] AssertionWithMessageTest.ASSERT_FLOATING (0 ms)
[ RUN      ] AssertionWithMessageTest.ASSERT_FALSE
[       OK ] AssertionWithMessageTest.ASSERT_FALSE (0 ms)
[ RUN      ] AssertionWithMessageTest.FAIL
[       OK ] AssertionWithMessageTest.FAIL (0 ms)
[ RUN      ] AssertionWithMessageTest.SUCCEED
[       OK ] AssertionWithMessageTest.SUCCEED (0 ms)
[ RUN      ] AssertionWithMessageTest.ASSERT_TRUE
[       OK ] AssertionWithMessageTest.ASSERT_TRUE (0 ms)
[----------] 8 tests from AssertionWithMessageTest (0 ms total)

[----------] 5 tests from StreamableToStringTest
[ RUN      ] StreamableToStringTest.Scalar
[       OK ] StreamableToStringTest.Scalar (0 ms)
[ RUN      ] StreamableToStringTest.Pointer
[       OK ] StreamableToStringTest.Pointer (0 ms)
[ RUN      ] StreamableToStringTest.NullPointer
[       OK ] StreamableToStringTest.NullPointer (0 ms)
[ RUN      ] StreamableToStringTest.CString
[       OK ] StreamableToStringTest.CString (0 ms)
[ RUN      ] StreamableToStringTest.NullCString
[       OK ] StreamableToStringTest.NullCString (0 ms)
[----------] 5 tests from StreamableToStringTest (0 ms total)

[----------] 6 tests from StreamableTest
[ RUN      ] StreamableTest.string
[       OK ] StreamableTest.string (1 ms)
[ RUN      ] StreamableTest.stringWithEmbeddedNUL
[       OK ] StreamableTest.stringWithEmbeddedNUL (0 ms)
[ RUN      ] StreamableTest.NULChar
[       OK ] StreamableTest.NULChar (0 ms)
[ RUN      ] StreamableTest.int
[       OK ] StreamableTest.int (0 ms)
[ RUN      ] StreamableTest.NullCharPtr
[       OK ] StreamableTest.NullCharPtr (0 ms)
[ RUN      ] StreamableTest.BasicIoManip
[       OK ] StreamableTest.BasicIoManip (0 ms)
[----------] 6 tests from StreamableTest (1 ms total)

[----------] 4 tests from MacroTest
[ RUN      ] MacroTest.ADD_FAILURE
[       OK ] MacroTest.ADD_FAILURE (0 ms)
[ RUN      ] MacroTest.ADD_FAILURE_AT
[       OK ] MacroTest.ADD_FAILURE_AT (0 ms)
[ RUN      ] MacroTest.FAIL
[       OK ] MacroTest.FAIL (0 ms)
[ RUN      ] MacroTest.SUCCEED
[       OK ] MacroTest.SUCCEED (0 ms)
[----------] 4 tests from MacroTest (0 ms total)

[----------] 10 tests from EqAssertionTest
[ RUN      ] EqAssertionTest.Bool
[       OK ] EqAssertionTest.Bool (0 ms)
[ RUN      ] EqAssertionTest.Int
[       OK ] EqAssertionTest.Int (0 ms)
[ RUN      ] EqAssertionTest.Time_T
[       OK ] EqAssertionTest.Time_T (0 ms)
[ RUN      ] EqAssertionTest.Char
[       OK ] EqAssertionTest.Char (0 ms)
[ RUN      ] EqAssertionTest.WideChar
[       OK ] EqAssertionTest.WideChar (0 ms)
[ RUN      ] EqAssertionTest.StdString
[       OK ] EqAssertionTest.StdString (0 ms)
[ RUN      ] EqAssertionTest.StdWideString
[       OK ] EqAssertionTest.StdWideString (0 ms)
[ RUN      ] EqAssertionTest.CharPointer
[       OK ] EqAssertionTest.CharPointer (0 ms)
[ RUN      ] EqAssertionTest.WideCharPointer
[       OK ] EqAssertionTest.WideCharPointer (0 ms)
[ RUN      ] EqAssertionTest.OtherPointer
[       OK ] EqAssertionTest.OtherPointer (0 ms)
[----------] 10 tests from EqAssertionTest (0 ms total)

[----------] 1 test from ComparisonAssertionTest
[ RUN      ] ComparisonAssertionTest.AcceptsUnprintableArgs
[       OK ] ComparisonAssertionTest.AcceptsUnprintableArgs (0 ms)
[----------] 1 test from ComparisonAssertionTest (0 ms total)

[----------] 1 test from FRIEND_TEST_Test
[ RUN      ] FRIEND_TEST_Test.TEST
[       OK ] FRIEND_TEST_Test.TEST (0 ms)
[----------] 1 test from FRIEND_TEST_Test (0 ms total)

[----------] 1 test from FRIEND_TEST_Test2
[ RUN      ] FRIEND_TEST_Test2.TEST_F
[       OK ] FRIEND_TEST_Test2.TEST_F (0 ms)
[----------] 1 test from FRIEND_TEST_Test2 (1 ms total)

[----------] 2 tests from TestLifeCycleTest
[ RUN      ] TestLifeCycleTest.Test1
[       OK ] TestLifeCycleTest.Test1 (0 ms)
[ RUN      ] TestLifeCycleTest.Test2
[       OK ] TestLifeCycleTest.Test2 (0 ms)
[----------] 2 tests from TestLifeCycleTest (0 ms total)

[----------] 6 tests from AssertionResultTest
[ RUN      ] AssertionResultTest.CopyConstructorWorksWhenNotOptimied
[       OK ] AssertionResultTest.CopyConstructorWorksWhenNotOptimied (0 ms)
[ RUN      ] AssertionResultTest.ConstructionWorks
[       OK ] AssertionResultTest.ConstructionWorks (0 ms)
[ RUN      ] AssertionResultTest.NegationWorks
[       OK ] AssertionResultTest.NegationWorks (0 ms)
[ RUN      ] AssertionResultTest.StreamingWorks
[       OK ] AssertionResultTest.StreamingWorks (0 ms)
[ RUN      ] AssertionResultTest.CanStreamOstreamManipulators
[       OK ] AssertionResultTest.CanStreamOstreamManipulators (0 ms)
[ RUN      ] AssertionResultTest.ConstructibleFromImplicitlyConvertible
[       OK ] AssertionResultTest.ConstructibleFromImplicitlyConvertible (0 ms)
[----------] 6 tests from AssertionResultTest (0 ms total)

[----------] 6 tests from MessageTest
[ RUN      ] MessageTest.CanStreamUserTypeInGlobalNameSpace
[       OK ] MessageTest.CanStreamUserTypeInGlobalNameSpace (0 ms)
[ RUN      ] MessageTest.CanStreamUserTypeInUnnamedNameSpace
[       OK ] MessageTest.CanStreamUserTypeInUnnamedNameSpace (0 ms)
[ RUN      ] MessageTest.CanStreamUserTypeInUserNameSpace
[       OK ] MessageTest.CanStreamUserTypeInUserNameSpace (0 ms)
[ RUN      ] MessageTest.CanStreamUserTypeInUserNameSpaceWithStreamOperatorInGlobal
[       OK ] MessageTest.CanStreamUserTypeInUserNameSpaceWithStreamOperatorInGlobal (0 ms)
[ RUN      ] MessageTest.NullPointers
[       OK ] MessageTest.NullPointers (0 ms)
[ RUN      ] MessageTest.WideStrings
[       OK ] MessageTest.WideStrings (0 ms)
[----------] 6 tests from MessageTest (0 ms total)

[----------] 2 tests from TestInfoTest
[ RUN      ] TestInfoTest.Names
[       OK ] TestInfoTest.Names (0 ms)
[ RUN      ] TestInfoTest.result
[       OK ] TestInfoTest.result (0 ms)
[----------] 2 tests from TestInfoTest (0 ms total)

[----------] 1 test from CodeLocationForTEST
[ RUN      ] CodeLocationForTEST.Verify
[       OK ] CodeLocationForTEST.Verify (0 ms)
[----------] 1 test from CodeLocationForTEST (0 ms total)

[----------] 1 test from CodeLocationForTESTF
[ RUN      ] CodeLocationForTESTF.Verify
[       OK ] CodeLocationForTESTF.Verify (0 ms)
[----------] 1 test from CodeLocationForTESTF (0 ms total)

[----------] 1 test from CodeLocationForTYPEDTEST/0, where TypeParam = int
[ RUN      ] CodeLocationForTYPEDTEST/0.Verify
[       OK ] CodeLocationForTYPEDTEST/0.Verify (0 ms)
[----------] 1 test from CodeLocationForTYPEDTEST/0 (0 ms total)

[----------] 1 test from My/CodeLocationForTYPEDTESTP/0, where TypeParam = int
[ RUN      ] My/CodeLocationForTYPEDTESTP/0.Verify
[       OK ] My/CodeLocationForTYPEDTESTP/0.Verify (0 ms)
[----------] 1 test from My/CodeLocationForTYPEDTESTP/0 (0 ms total)

[----------] 2 tests from SetUpTestCaseTest
Setting up the test case . . .
[ RUN      ] SetUpTestCaseTest.Test1
[       OK ] SetUpTestCaseTest.Test1 (0 ms)
[ RUN      ] SetUpTestCaseTest.Test2
[       OK ] SetUpTestCaseTest.Test2 (0 ms)
Tearing down the test case . . .
[----------] 2 tests from SetUpTestCaseTest (0 ms total)

[----------] 41 tests from InitGoogleTestTest
[ RUN      ] InitGoogleTestTest.Empty
[       OK ] InitGoogleTestTest.Empty (0 ms)
[ RUN      ] InitGoogleTestTest.NoFlag
[       OK ] InitGoogleTestTest.NoFlag (0 ms)
[ RUN      ] InitGoogleTestTest.FilterBad
[       OK ] InitGoogleTestTest.FilterBad (0 ms)
[ RUN      ] InitGoogleTestTest.FilterEmpty
[       OK ] InitGoogleTestTest.FilterEmpty (0 ms)
[ RUN      ] InitGoogleTestTest.FilterNonEmpty
[       OK ] InitGoogleTestTest.FilterNonEmpty (0 ms)
[ RUN      ] InitGoogleTestTest.BreakOnFailureWithoutValue
[       OK ] InitGoogleTestTest.BreakOnFailureWithoutValue (0 ms)
[ RUN      ] InitGoogleTestTest.BreakOnFailureFalse_0
[       OK ] InitGoogleTestTest.BreakOnFailureFalse_0 (0 ms)
[ RUN      ] InitGoogleTestTest.BreakOnFailureFalse_f
[       OK ] InitGoogleTestTest.BreakOnFailureFalse_f (0 ms)
[ RUN      ] InitGoogleTestTest.BreakOnFailureFalse_F
[       OK ] InitGoogleTestTest.BreakOnFailureFalse_F (0 ms)
[ RUN      ] InitGoogleTestTest.BreakOnFailureTrue
[       OK ] InitGoogleTestTest.BreakOnFailureTrue (0 ms)
[ RUN      ] InitGoogleTestTest.CatchExceptions
[       OK ] InitGoogleTestTest.CatchExceptions (0 ms)
[ RUN      ] InitGoogleTestTest.DeathTestUseFork
[       OK ] InitGoogleTestTest.DeathTestUseFork (0 ms)
[ RUN      ] InitGoogleTestTest.DuplicatedFlags
[       OK ] InitGoogleTestTest.DuplicatedFlags (0 ms)
[ RUN      ] InitGoogleTestTest.UnrecognizedFlag
[       OK ] InitGoogleTestTest.UnrecognizedFlag (0 ms)
[ RUN      ] InitGoogleTestTest.ListTestsFlag
[       OK ] InitGoogleTestTest.ListTestsFlag (0 ms)
[ RUN      ] InitGoogleTestTest.ListTestsTrue
[       OK ] InitGoogleTestTest.ListTestsTrue (0 ms)
[ RUN      ] InitGoogleTestTest.ListTestsFalse
[       OK ] InitGoogleTestTest.ListTestsFalse (0 ms)
[ RUN      ] InitGoogleTestTest.ListTestsFalse_f
[       OK ] InitGoogleTestTest.ListTestsFalse_f (0 ms)
[ RUN      ] InitGoogleTestTest.ListTestsFalse_F
[       OK ] InitGoogleTestTest.ListTestsFalse_F (0 ms)
[ RUN      ] InitGoogleTestTest.OutputEmpty
[       OK ] InitGoogleTestTest.OutputEmpty (0 ms)
[ RUN      ] InitGoogleTestTest.OutputXml
[       OK ] InitGoogleTestTest.OutputXml (0 ms)
[ RUN      ] InitGoogleTestTest.OutputXmlFile
[       OK ] InitGoogleTestTest.OutputXmlFile (0 ms)
[ RUN      ] InitGoogleTestTest.OutputXmlDirectory
[       OK ] InitGoogleTestTest.OutputXmlDirectory (0 ms)
[ RUN      ] InitGoogleTestTest.PrintTimeFlag
[       OK ] InitGoogleTestTest.PrintTimeFlag (0 ms)
[ RUN      ] InitGoogleTestTest.PrintTimeTrue
[       OK ] InitGoogleTestTest.PrintTimeTrue (0 ms)
[ RUN      ] InitGoogleTestTest.PrintTimeFalse
[       OK ] InitGoogleTestTest.PrintTimeFalse (0 ms)
[ RUN      ] InitGoogleTestTest.PrintTimeFalse_f
[       OK ] InitGoogleTestTest.PrintTimeFalse_f (1 ms)
[ RUN      ] InitGoogleTestTest.PrintTimeFalse_F
[       OK ] InitGoogleTestTest.PrintTimeFalse_F (0 ms)
[ RUN      ] InitGoogleTestTest.RandomSeed
[       OK ] InitGoogleTestTest.RandomSeed (0 ms)
[ RUN      ] InitGoogleTestTest.Repeat
[       OK ] InitGoogleTestTest.Repeat (0 ms)
[ RUN      ] InitGoogleTestTest.AlsoRunDisabledTestsFlag
[       OK ] InitGoogleTestTest.AlsoRunDisabledTestsFlag (0 ms)
[ RUN      ] InitGoogleTestTest.AlsoRunDisabledTestsTrue
[       OK ] InitGoogleTestTest.AlsoRunDisabledTestsTrue (0 ms)
[ RUN      ] InitGoogleTestTest.AlsoRunDisabledTestsFalse
[       OK ] InitGoogleTestTest.AlsoRunDisabledTestsFalse (0 ms)
[ RUN      ] InitGoogleTestTest.ShuffleWithoutValue
[       OK ] InitGoogleTestTest.ShuffleWithoutValue (0 ms)
[ RUN      ] InitGoogleTestTest.ShuffleFalse_0
[       OK ] InitGoogleTestTest.ShuffleFalse_0 (0 ms)
[ RUN      ] InitGoogleTestTest.ShuffleTrue
[       OK ] InitGoogleTestTest.ShuffleTrue (0 ms)
[ RUN      ] InitGoogleTestTest.StackTraceDepth
[       OK ] InitGoogleTestTest.StackTraceDepth (0 ms)
[ RUN      ] InitGoogleTestTest.StreamResultTo
[       OK ] InitGoogleTestTest.StreamResultTo (0 ms)
[ RUN      ] InitGoogleTestTest.ThrowOnFailureWithoutValue
[       OK ] InitGoogleTestTest.ThrowOnFailureWithoutValue (0 ms)
[ RUN      ] InitGoogleTestTest.ThrowOnFailureFalse_0
[       OK ] InitGoogleTestTest.ThrowOnFailureFalse_0 (0 ms)
[ RUN      ] InitGoogleTestTest.ThrowOnFailureTrue
[       OK ] InitGoogleTestTest.ThrowOnFailureTrue (0 ms)
[----------] 41 tests from InitGoogleTestTest (2 ms total)

[----------] 3 tests from FlagfileTest
[ RUN      ] FlagfileTest.Empty
[       OK ] FlagfileTest.Empty (0 ms)
[ RUN      ] FlagfileTest.FilterNonEmpty
[       OK ] FlagfileTest.FilterNonEmpty (1 ms)
[ RUN      ] FlagfileTest.SeveralFlags
[       OK ] FlagfileTest.SeveralFlags (0 ms)
[----------] 3 tests from FlagfileTest (1 ms total)

[----------] 2 tests from CurrentTestInfoTest
[ RUN      ] CurrentTestInfoTest.WorksForFirstTestInATestCase
[       OK ] CurrentTestInfoTest.WorksForFirstTestInATestCase (0 ms)
[ RUN      ] CurrentTestInfoTest.WorksForSecondTestInATestCase
[       OK ] CurrentTestInfoTest.WorksForSecondTestInATestCase (0 ms)
[----------] 2 tests from CurrentTestInfoTest (0 ms total)

[----------] 2 tests from NestedTestingNamespaceTest
[ RUN      ] NestedTestingNamespaceTest.Success
[       OK ] NestedTestingNamespaceTest.Success (0 ms)
[ RUN      ] NestedTestingNamespaceTest.Failure
[       OK ] NestedTestingNamespaceTest.Failure (0 ms)
[----------] 2 tests from NestedTestingNamespaceTest (0 ms total)

[----------] 13 tests from StreamingAssertionsTest
[ RUN      ] StreamingAssertionsTest.Unconditional
[       OK ] StreamingAssertionsTest.Unconditional (0 ms)
[ RUN      ] StreamingAssertionsTest.Truth
[       OK ] StreamingAssertionsTest.Truth (0 ms)
[ RUN      ] StreamingAssertionsTest.Truth2
[       OK ] StreamingAssertionsTest.Truth2 (0 ms)
[ RUN      ] StreamingAssertionsTest.IntegerEquals
[       OK ] StreamingAssertionsTest.IntegerEquals (0 ms)
[ RUN      ] StreamingAssertionsTest.IntegerLessThan
[       OK ] StreamingAssertionsTest.IntegerLessThan (0 ms)
[ RUN      ] StreamingAssertionsTest.StringsEqual
[       OK ] StreamingAssertionsTest.StringsEqual (0 ms)
[ RUN      ] StreamingAssertionsTest.StringsNotEqual
[       OK ] StreamingAssertionsTest.StringsNotEqual (0 ms)
[ RUN      ] StreamingAssertionsTest.StringsEqualIgnoringCase
[       OK ] StreamingAssertionsTest.StringsEqualIgnoringCase (0 ms)
[ RUN      ] StreamingAssertionsTest.StringNotEqualIgnoringCase
[       OK ] StreamingAssertionsTest.StringNotEqualIgnoringCase (0 ms)
[ RUN      ] StreamingAssertionsTest.FloatingPointEquals
[       OK ] StreamingAssertionsTest.FloatingPointEquals (0 ms)
[ RUN      ] StreamingAssertionsTest.Throw
[       OK ] StreamingAssertionsTest.Throw (0 ms)
[ RUN      ] StreamingAssertionsTest.NoThrow
[       OK ] StreamingAssertionsTest.NoThrow (0 ms)
[ RUN      ] StreamingAssertionsTest.AnyThrow
[       OK ] StreamingAssertionsTest.AnyThrow (0 ms)
[----------] 13 tests from StreamingAssertionsTest (0 ms total)

[----------] 6 tests from ColoredOutputTest
[ RUN      ] ColoredOutputTest.UsesColorsWhenGTestColorFlagIsYes
[       OK ] ColoredOutputTest.UsesColorsWhenGTestColorFlagIsYes (0 ms)
[ RUN      ] ColoredOutputTest.UsesColorsWhenGTestColorFlagIsAliasOfYes
[       OK ] ColoredOutputTest.UsesColorsWhenGTestColorFlagIsAliasOfYes (0 ms)
[ RUN      ] ColoredOutputTest.UsesNoColorWhenGTestColorFlagIsNo
[       OK ] ColoredOutputTest.UsesNoColorWhenGTestColorFlagIsNo (0 ms)
[ RUN      ] ColoredOutputTest.UsesNoColorWhenGTestColorFlagIsInvalid
[       OK ] ColoredOutputTest.UsesNoColorWhenGTestColorFlagIsInvalid (0 ms)
[ RUN      ] ColoredOutputTest.UsesColorsWhenStdoutIsTty
[       OK ] ColoredOutputTest.UsesColorsWhenStdoutIsTty (0 ms)
[ RUN      ] ColoredOutputTest.UsesColorsWhenTermSupportsColors
[       OK ] ColoredOutputTest.UsesColorsWhenTermSupportsColors (0 ms)
[----------] 6 tests from ColoredOutputTest (0 ms total)

[----------] 2 tests from StaticAssertTypeEqTest
[ RUN      ] StaticAssertTypeEqTest.WorksInClass
[       OK ] StaticAssertTypeEqTest.WorksInClass (0 ms)
[ RUN      ] StaticAssertTypeEqTest.CompilesForEqualTypes
[       OK ] StaticAssertTypeEqTest.CompilesForEqualTypes (0 ms)
[----------] 2 tests from StaticAssertTypeEqTest (0 ms total)

[----------] 1 test from GetCurrentOsStackTraceExceptTopTest
[ RUN      ] GetCurrentOsStackTraceExceptTopTest.ReturnsTheStackTrace
[       OK ] GetCurrentOsStackTraceExceptTopTest.ReturnsTheStackTrace (0 ms)
[----------] 1 test from GetCurrentOsStackTraceExceptTopTest (0 ms total)

[----------] 6 tests from HasNonfatalFailureTest
[ RUN      ] HasNonfatalFailureTest.ReturnsFalseWhenThereIsNoFailure
[       OK ] HasNonfatalFailureTest.ReturnsFalseWhenThereIsNoFailure (0 ms)
[ RUN      ] HasNonfatalFailureTest.ReturnsFalseWhenThereIsOnlyFatalFailure
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6903: Failure
Failed
[       OK ] HasNonfatalFailureTest.ReturnsFalseWhenThereIsOnlyFatalFailure (0 ms)
[ RUN      ] HasNonfatalFailureTest.ReturnsTrueWhenThereIsNonfatalFailure
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6913: Failure
Failed
[       OK ] HasNonfatalFailureTest.ReturnsTrueWhenThereIsNonfatalFailure (0 ms)
[ RUN      ] HasNonfatalFailureTest.ReturnsTrueWhenThereAreFatalAndNonfatalFailures
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6903: Failure
Failed
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6921: Failure
Failed
[       OK ] HasNonfatalFailureTest.ReturnsTrueWhenThereAreFatalAndNonfatalFailures (0 ms)
[ RUN      ] HasNonfatalFailureTest.WorksOutsideOfTestBody
[       OK ] HasNonfatalFailureTest.WorksOutsideOfTestBody (0 ms)
[ RUN      ] HasNonfatalFailureTest.WorksOutsideOfTestBody2
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6937: Failure
Failed
[       OK ] HasNonfatalFailureTest.WorksOutsideOfTestBody2 (0 ms)
[----------] 6 tests from HasNonfatalFailureTest (0 ms total)

[----------] 6 tests from HasFailureTest
[ RUN      ] HasFailureTest.ReturnsFalseWhenThereIsNoFailure
[       OK ] HasFailureTest.ReturnsFalseWhenThereIsNoFailure (0 ms)
[ RUN      ] HasFailureTest.ReturnsTrueWhenThereIsFatalFailure
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6903: Failure
Failed
[       OK ] HasFailureTest.ReturnsTrueWhenThereIsFatalFailure (0 ms)
[ RUN      ] HasFailureTest.ReturnsTrueWhenThereIsNonfatalFailure
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6955: Failure
Failed
[       OK ] HasFailureTest.ReturnsTrueWhenThereIsNonfatalFailure (0 ms)
[ RUN      ] HasFailureTest.ReturnsTrueWhenThereAreFatalAndNonfatalFailures
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6903: Failure
Failed
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6963: Failure
Failed
[       OK ] HasFailureTest.ReturnsTrueWhenThereAreFatalAndNonfatalFailures (0 ms)
[ RUN      ] HasFailureTest.WorksOutsideOfTestBody
[       OK ] HasFailureTest.WorksOutsideOfTestBody (0 ms)
[ RUN      ] HasFailureTest.WorksOutsideOfTestBody2
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6977: Failure
Failed
[       OK ] HasFailureTest.WorksOutsideOfTestBody2 (0 ms)
[----------] 6 tests from HasFailureTest (0 ms total)

[----------] 4 tests from TestEventListenersTest
[ RUN      ] TestEventListenersTest.ConstructionWorks
[       OK ] TestEventListenersTest.ConstructionWorks (0 ms)
[ RUN      ] TestEventListenersTest.DestructionWorks
[       OK ] TestEventListenersTest.DestructionWorks (0 ms)
[ RUN      ] TestEventListenersTest.Append
[       OK ] TestEventListenersTest.Append (0 ms)
[ RUN      ] TestEventListenersTest.Release
[       OK ] TestEventListenersTest.Release (0 ms)
[----------] 4 tests from TestEventListenersTest (0 ms total)

[----------] 6 tests from EventListenerTest
[ RUN      ] EventListenerTest.AppendKeepsOrder
[       OK ] EventListenerTest.AppendKeepsOrder (0 ms)
[ RUN      ] EventListenerTest.SuppressEventForwarding
[       OK ] EventListenerTest.SuppressEventForwarding (0 ms)
[ RUN      ] EventListenerTest.default_result_printer
[       OK ] EventListenerTest.default_result_printer (0 ms)
[ RUN      ] EventListenerTest.RemovingDefaultResultPrinterWorks
[       OK ] EventListenerTest.RemovingDefaultResultPrinterWorks (0 ms)
[ RUN      ] EventListenerTest.default_xml_generator
[       OK ] EventListenerTest.default_xml_generator (0 ms)
[ RUN      ] EventListenerTest.RemovingDefaultXmlGeneratorWorks
[       OK ] EventListenerTest.RemovingDefaultXmlGeneratorWorks (0 ms)
[----------] 6 tests from EventListenerTest (0 ms total)

[----------] 1 test from AlternativeNameTest
[ RUN      ] AlternativeNameTest.Works
[       OK ] AlternativeNameTest.Works (0 ms)
[----------] 1 test from AlternativeNameTest (0 ms total)

[----------] 3 tests from IsAProtocolMessageTest
[ RUN      ] IsAProtocolMessageTest.ValueIsCompileTimeConstant
[       OK ] IsAProtocolMessageTest.ValueIsCompileTimeConstant (0 ms)
[ RUN      ] IsAProtocolMessageTest.ValueIsTrueWhenTypeIsAProtocolMessage
[       OK ] IsAProtocolMessageTest.ValueIsTrueWhenTypeIsAProtocolMessage (0 ms)
[ RUN      ] IsAProtocolMessageTest.ValueIsFalseWhenTypeIsNotAProtocolMessage
[       OK ] IsAProtocolMessageTest.ValueIsFalseWhenTypeIsNotAProtocolMessage (0 ms)
[----------] 3 tests from IsAProtocolMessageTest (0 ms total)

[----------] 1 test from CompileAssertTypesEqual
[ RUN      ] CompileAssertTypesEqual.CompilesWhenTypesAreEqual
[       OK ] CompileAssertTypesEqual.CompilesWhenTypesAreEqual (0 ms)
[----------] 1 test from CompileAssertTypesEqual (0 ms total)

[----------] 3 tests from RemoveReferenceTest
[ RUN      ] RemoveReferenceTest.DoesNotAffectNonReferenceType
[       OK ] RemoveReferenceTest.DoesNotAffectNonReferenceType (0 ms)
[ RUN      ] RemoveReferenceTest.RemovesReference
[       OK ] RemoveReferenceTest.RemovesReference (0 ms)
[ RUN      ] RemoveReferenceTest.MacroVersion
[       OK ] RemoveReferenceTest.MacroVersion (0 ms)
[----------] 3 tests from RemoveReferenceTest (0 ms total)

[----------] 3 tests from RemoveConstTest
[ RUN      ] RemoveConstTest.DoesNotAffectNonConstType
[       OK ] RemoveConstTest.DoesNotAffectNonConstType (0 ms)
[ RUN      ] RemoveConstTest.RemovesConst
[       OK ] RemoveConstTest.RemovesConst (0 ms)
[ RUN      ] RemoveConstTest.MacroVersion
[       OK ] RemoveConstTest.MacroVersion (0 ms)
[----------] 3 tests from RemoveConstTest (0 ms total)

[----------] 1 test from RemoveReferenceToConstTest
[ RUN      ] RemoveReferenceToConstTest.Works
[       OK ] RemoveReferenceToConstTest.Works (0 ms)
[----------] 1 test from RemoveReferenceToConstTest (0 ms total)

[----------] 3 tests from AddReferenceTest
[ RUN      ] AddReferenceTest.DoesNotAffectReferenceType
[       OK ] AddReferenceTest.DoesNotAffectReferenceType (0 ms)
[ RUN      ] AddReferenceTest.AddsReference
[       OK ] AddReferenceTest.AddsReference (0 ms)
[ RUN      ] AddReferenceTest.MacroVersion
[       OK ] AddReferenceTest.MacroVersion (0 ms)
[----------] 3 tests from AddReferenceTest (0 ms total)

[----------] 1 test from GTestReferenceToConstTest
[ RUN      ] GTestReferenceToConstTest.Works
[       OK ] GTestReferenceToConstTest.Works (0 ms)
[----------] 1 test from GTestReferenceToConstTest (0 ms total)

[----------] 3 tests from ImplicitlyConvertibleTest
[ RUN      ] ImplicitlyConvertibleTest.ValueIsCompileTimeConstant
[       OK ] ImplicitlyConvertibleTest.ValueIsCompileTimeConstant (0 ms)
[ RUN      ] ImplicitlyConvertibleTest.ValueIsTrueWhenConvertible
[       OK ] ImplicitlyConvertibleTest.ValueIsTrueWhenConvertible (0 ms)
[ RUN      ] ImplicitlyConvertibleTest.ValueIsFalseWhenNotConvertible
[       OK ] ImplicitlyConvertibleTest.ValueIsFalseWhenNotConvertible (0 ms)
[----------] 3 tests from ImplicitlyConvertibleTest (0 ms total)

[----------] 2 tests from IsContainerTestTest
[ RUN      ] IsContainerTestTest.WorksForNonContainer
[       OK ] IsContainerTestTest.WorksForNonContainer (0 ms)
[ RUN      ] IsContainerTestTest.WorksForContainer
[       OK ] IsContainerTestTest.WorksForContainer (0 ms)
[----------] 2 tests from IsContainerTestTest (0 ms total)

[----------] 3 tests from ArrayEqTest
[ RUN      ] ArrayEqTest.WorksForDegeneratedArrays
[       OK ] ArrayEqTest.WorksForDegeneratedArrays (0 ms)
[ RUN      ] ArrayEqTest.WorksForOneDimensionalArrays
[       OK ] ArrayEqTest.WorksForOneDimensionalArrays (0 ms)
[ RUN      ] ArrayEqTest.WorksForTwoDimensionalArrays
[       OK ] ArrayEqTest.WorksForTwoDimensionalArrays (0 ms)
[----------] 3 tests from ArrayEqTest (0 ms total)

[----------] 2 tests from ArrayAwareFindTest
[ RUN      ] ArrayAwareFindTest.WorksForOneDimensionalArray
[       OK ] ArrayAwareFindTest.WorksForOneDimensionalArray (0 ms)
[ RUN      ] ArrayAwareFindTest.WorksForTwoDimensionalArray
[       OK ] ArrayAwareFindTest.WorksForTwoDimensionalArray (0 ms)
[----------] 2 tests from ArrayAwareFindTest (0 ms total)

[----------] 3 tests from CopyArrayTest
[ RUN      ] CopyArrayTest.WorksForDegeneratedArrays
[       OK ] CopyArrayTest.WorksForDegeneratedArrays (0 ms)
[ RUN      ] CopyArrayTest.WorksForOneDimensionalArrays
[       OK ] CopyArrayTest.WorksForOneDimensionalArrays (0 ms)
[ RUN      ] CopyArrayTest.WorksForTwoDimensionalArrays
[       OK ] CopyArrayTest.WorksForTwoDimensionalArrays (0 ms)
[----------] 3 tests from CopyArrayTest (0 ms total)

[----------] 5 tests from NativeArrayTest
[ RUN      ] NativeArrayTest.ConstructorFromArrayWorks
[       OK ] NativeArrayTest.ConstructorFromArrayWorks (0 ms)
[ RUN      ] NativeArrayTest.CreatesAndDeletesCopyOfArrayWhenAskedTo
[       OK ] NativeArrayTest.CreatesAndDeletesCopyOfArrayWhenAskedTo (0 ms)
[ RUN      ] NativeArrayTest.TypeMembersAreCorrect
[       OK ] NativeArrayTest.TypeMembersAreCorrect (0 ms)
[ RUN      ] NativeArrayTest.MethodsWork
[       OK ] NativeArrayTest.MethodsWork (0 ms)
[ RUN      ] NativeArrayTest.WorksForTwoDimensionalArray
[       OK ] NativeArrayTest.WorksForTwoDimensionalArray (0 ms)
[----------] 5 tests from NativeArrayTest (0 ms total)

[----------] 2 tests from SkipPrefixTest
[ RUN      ] SkipPrefixTest.SkipsWhenPrefixMatches
[       OK ] SkipPrefixTest.SkipsWhenPrefixMatches (0 ms)
[ RUN      ] SkipPrefixTest.DoesNotSkipWhenPrefixDoesNotMatch
[       OK ] SkipPrefixTest.DoesNotSkipWhenPrefixDoesNotMatch (0 ms)
[----------] 2 tests from SkipPrefixTest (1 ms total)

[----------] 1 test from CodeLocationForTESTP
[ RUN      ] CodeLocationForTESTP.Verify/0
[       OK ] CodeLocationForTESTP.Verify/0 (0 ms)
[----------] 1 test from CodeLocationForTESTP (0 ms total)

[----------] Global test environment tear-down
[==========] 420 tests from 101 test cases ran. (1170 ms total)
[  PASSED  ] 420 tests.

  YOU HAVE 13 DISABLED TESTS

<end of output>
Test time =   1.17 sec
----------------------------------------------------------
Test Passed.
"gtest_unittest" end time: Feb 23 18:43 PST
"gtest_unittest" time elapsed: 00:00:01
----------------------------------------------------------

42/60 Testing: gtest-unittest-api_test
42/60 Test: gtest-unittest-api_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest-unittest-api_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest-unittest-api_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
[==========] Running 4 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 1 test from TestCaseWithCommentTest/0, where TypeParam = int
[ RUN      ] TestCaseWithCommentTest/0.Dummy
[       OK ] TestCaseWithCommentTest/0.Dummy (0 ms)
[----------] 1 test from TestCaseWithCommentTest/0 (0 ms total)

[----------] 3 tests from ApiTest
[ RUN      ] ApiTest.UnitTestImmutableAccessorsWork
[       OK ] ApiTest.UnitTestImmutableAccessorsWork (0 ms)
[ RUN      ] ApiTest.TestCaseImmutableAccessorsWork
[       OK ] ApiTest.TestCaseImmutableAccessorsWork (0 ms)
[ RUN      ] ApiTest.TestCaseDisabledAccessorsWork
[       OK ] ApiTest.TestCaseDisabledAccessorsWork (0 ms)
[----------] 3 tests from ApiTest (0 ms total)

[----------] Global test environment tear-down
[==========] 4 tests from 2 test cases ran. (1 ms total)
[  PASSED  ] 4 tests.

  YOU HAVE 2 DISABLED TESTS

<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest-unittest-api_test" end time: Feb 23 18:43 PST
"gtest-unittest-api_test" time elapsed: 00:00:00
----------------------------------------------------------

43/60 Testing: gtest-death-test_ex_nocatch_test
43/60 Test: gtest-death-test_ex_nocatch_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest-death-test_ex_nocatch_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest-death-test_ex_nocatch_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
[==========] Running 2 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 2 tests from CxxExceptionDeathTest
[ RUN      ] CxxExceptionDeathTest.ExceptionIsFailure
[       OK ] CxxExceptionDeathTest.ExceptionIsFailure (1 ms)
[ RUN      ] CxxExceptionDeathTest.PrintsMessageForStdExceptions
[       OK ] CxxExceptionDeathTest.PrintsMessageForStdExceptions (1 ms)
[----------] 2 tests from CxxExceptionDeathTest (2 ms total)

[----------] Global test environment tear-down
[==========] 2 tests from 1 test case ran. (2 ms total)
[  PASSED  ] 2 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest-death-test_ex_nocatch_test" end time: Feb 23 18:43 PST
"gtest-death-test_ex_nocatch_test" time elapsed: 00:00:00
----------------------------------------------------------

44/60 Testing: gtest-death-test_ex_catch_test
44/60 Test: gtest-death-test_ex_catch_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest-death-test_ex_catch_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest-death-test_ex_catch_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
[==========] Running 2 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 2 tests from CxxExceptionDeathTest
[ RUN      ] CxxExceptionDeathTest.ExceptionIsFailure
[       OK ] CxxExceptionDeathTest.ExceptionIsFailure (0 ms)
[ RUN      ] CxxExceptionDeathTest.PrintsMessageForStdExceptions
[       OK ] CxxExceptionDeathTest.PrintsMessageForStdExceptions (1 ms)
[----------] 2 tests from CxxExceptionDeathTest (1 ms total)

[----------] Global test environment tear-down
[==========] 2 tests from 1 test case ran. (1 ms total)
[  PASSED  ] 2 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest-death-test_ex_catch_test" end time: Feb 23 18:43 PST
"gtest-death-test_ex_catch_test" time elapsed: 00:00:00
----------------------------------------------------------

45/60 Testing: gtest_no_rtti_unittest
45/60 Test: gtest_no_rtti_unittest
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_no_rtti_unittest"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_no_rtti_unittest" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 420 tests from 101 test cases.
[----------] Global test environment set-up.
[----------] 1 test from RandomDeathTest
[ RUN      ] RandomDeathTest.GeneratesCrashesOnInvalidRange
[       OK ] RandomDeathTest.GeneratesCrashesOnInvalidRange (210 ms)
[----------] 1 test from RandomDeathTest (210 ms total)

[----------] 1 test from ContainerUtilityDeathTest
[ RUN      ] ContainerUtilityDeathTest.ShuffleRange
[       OK ] ContainerUtilityDeathTest.ShuffleRange (416 ms)
[----------] 1 test from ContainerUtilityDeathTest (416 ms total)

[----------] 1 test from TestResultDeathTest
[ RUN      ] TestResultDeathTest.GetTestPartResult
[       OK ] TestResultDeathTest.GetTestPartResult (209 ms)
[----------] 1 test from TestResultDeathTest (209 ms total)

[----------] 2 tests from Int32FromEnvOrDieDeathTest
[ RUN      ] Int32FromEnvOrDieDeathTest.AbortsOnFailure
WARNING: The value of environment variable GTEST_VAR is expected to be a 32-bit integer, but actually has value "xxx".
[       OK ] Int32FromEnvOrDieDeathTest.AbortsOnFailure (1 ms)
[ RUN      ] Int32FromEnvOrDieDeathTest.AbortsOnInt32Overflow
WARNING: The value of environment variable GTEST_VAR is expected to be a 32-bit integer, but actually has value 1234567891234567891234, which overflows.
[       OK ] Int32FromEnvOrDieDeathTest.AbortsOnInt32Overflow (0 ms)
[----------] 2 tests from Int32FromEnvOrDieDeathTest (1 ms total)

[----------] 1 test from ShouldShardDeathTest
[ RUN      ] ShouldShardDeathTest.AbortsWhenShardingEnvVarsAreInvalid
Invalid environment variables: we require 0 <= GTEST_SHARD_INDEX < GTEST_TOTAL_SHARDS, but you have GTEST_SHARD_INDEX=4, GTEST_TOTAL_SHARDS=4.
Invalid environment variables: we require 0 <= GTEST_SHARD_INDEX < GTEST_TOTAL_SHARDS, but you have GTEST_SHARD_INDEX=4, GTEST_TOTAL_SHARDS=-2.
Invalid environment variables: you have GTEST_SHARD_INDEX = 5, but have left GTEST_TOTAL_SHARDS unset.
Invalid environment variables: you have GTEST_TOTAL_SHARDS = 5, but have left GTEST_SHARD_INDEX unset.
[       OK ] ShouldShardDeathTest.AbortsWhenShardingEnvVarsAreInvalid (3 ms)
[----------] 1 test from ShouldShardDeathTest (3 ms total)

[----------] 1 test from EventListenerDeathTest
[ RUN      ] EventListenerDeathTest.EventsNotForwardedInDeathTestSubprecesses
[       OK ] EventListenerDeathTest.EventsNotForwardedInDeathTestSubprecesses (103 ms)
[----------] 1 test from EventListenerDeathTest (103 ms total)

[----------] 1 test from CommandLineFlagsTest
[ RUN      ] CommandLineFlagsTest.CanBeAccessedInCodeOnceGTestHIsIncluded
[       OK ] CommandLineFlagsTest.CanBeAccessedInCodeOnceGTestHIsIncluded (0 ms)
[----------] 1 test from CommandLineFlagsTest (0 ms total)

[----------] 7 tests from StreamingListenerTest
[ RUN      ] StreamingListenerTest.OnTestProgramEnd
[       OK ] StreamingListenerTest.OnTestProgramEnd (0 ms)
[ RUN      ] StreamingListenerTest.OnTestIterationEnd
[       OK ] StreamingListenerTest.OnTestIterationEnd (0 ms)
[ RUN      ] StreamingListenerTest.OnTestCaseStart
[       OK ] StreamingListenerTest.OnTestCaseStart (0 ms)
[ RUN      ] StreamingListenerTest.OnTestCaseEnd
[       OK ] StreamingListenerTest.OnTestCaseEnd (0 ms)
[ RUN      ] StreamingListenerTest.OnTestStart
[       OK ] StreamingListenerTest.OnTestStart (0 ms)
[ RUN      ] StreamingListenerTest.OnTestEnd
[       OK ] StreamingListenerTest.OnTestEnd (0 ms)
[ RUN      ] StreamingListenerTest.OnTestPartResult
[       OK ] StreamingListenerTest.OnTestPartResult (0 ms)
[----------] 7 tests from StreamingListenerTest (0 ms total)

[----------] 3 tests from GetRandomSeedFromFlagTest
[ RUN      ] GetRandomSeedFromFlagTest.HandlesZero
[       OK ] GetRandomSeedFromFlagTest.HandlesZero (0 ms)
[ RUN      ] GetRandomSeedFromFlagTest.PreservesValidSeed
[       OK ] GetRandomSeedFromFlagTest.PreservesValidSeed (0 ms)
[ RUN      ] GetRandomSeedFromFlagTest.NormalizesInvalidSeed
[       OK ] GetRandomSeedFromFlagTest.NormalizesInvalidSeed (0 ms)
[----------] 3 tests from GetRandomSeedFromFlagTest (0 ms total)

[----------] 1 test from GetNextRandomSeedTest
[ RUN      ] GetNextRandomSeedTest.WorksForValidInput
[       OK ] GetNextRandomSeedTest.WorksForValidInput (0 ms)
[----------] 1 test from GetNextRandomSeedTest (0 ms total)

[----------] 2 tests from GetTypeIdTest
[ RUN      ] GetTypeIdTest.ReturnsSameValueForSameType
[       OK ] GetTypeIdTest.ReturnsSameValueForSameType (0 ms)
[ RUN      ] GetTypeIdTest.ReturnsDifferentValuesForDifferentTypes
[       OK ] GetTypeIdTest.ReturnsDifferentValuesForDifferentTypes (0 ms)
[----------] 2 tests from GetTypeIdTest (0 ms total)

[----------] 1 test from GetTestTypeIdTest
[ RUN      ] GetTestTypeIdTest.ReturnsTheSameValueInsideOrOutsideOfGoogleTest
[       OK ] GetTestTypeIdTest.ReturnsTheSameValueInsideOrOutsideOfGoogleTest (0 ms)
[----------] 1 test from GetTestTypeIdTest (0 ms total)

[----------] 3 tests from FormatTimeInMillisAsSecondsTest
[ RUN      ] FormatTimeInMillisAsSecondsTest.FormatsZero
[       OK ] FormatTimeInMillisAsSecondsTest.FormatsZero (0 ms)
[ RUN      ] FormatTimeInMillisAsSecondsTest.FormatsPositiveNumber
[       OK ] FormatTimeInMillisAsSecondsTest.FormatsPositiveNumber (0 ms)
[ RUN      ] FormatTimeInMillisAsSecondsTest.FormatsNegativeNumber
[       OK ] FormatTimeInMillisAsSecondsTest.FormatsNegativeNumber (0 ms)
[----------] 3 tests from FormatTimeInMillisAsSecondsTest (0 ms total)

[----------] 5 tests from FormatEpochTimeInMillisAsIso8601Test
[ RUN      ] FormatEpochTimeInMillisAsIso8601Test.PrintsTwoDigitSegments
[       OK ] FormatEpochTimeInMillisAsIso8601Test.PrintsTwoDigitSegments (0 ms)
[ RUN      ] FormatEpochTimeInMillisAsIso8601Test.MillisecondsDoNotAffectResult
[       OK ] FormatEpochTimeInMillisAsIso8601Test.MillisecondsDoNotAffectResult (0 ms)
[ RUN      ] FormatEpochTimeInMillisAsIso8601Test.PrintsLeadingZeroes
[       OK ] FormatEpochTimeInMillisAsIso8601Test.PrintsLeadingZeroes (0 ms)
[ RUN      ] FormatEpochTimeInMillisAsIso8601Test.Prints24HourTime
[       OK ] FormatEpochTimeInMillisAsIso8601Test.Prints24HourTime (0 ms)
[ RUN      ] FormatEpochTimeInMillisAsIso8601Test.PrintsEpochStart
[       OK ] FormatEpochTimeInMillisAsIso8601Test.PrintsEpochStart (0 ms)
[----------] 5 tests from FormatEpochTimeInMillisAsIso8601Test (0 ms total)

[----------] 2 tests from NullLiteralTest
[ RUN      ] NullLiteralTest.IsTrueForNullLiterals
[       OK ] NullLiteralTest.IsTrueForNullLiterals (0 ms)
[ RUN      ] NullLiteralTest.IsFalseForNonNullLiterals
[       OK ] NullLiteralTest.IsFalseForNonNullLiterals (0 ms)
[----------] 2 tests from NullLiteralTest (0 ms total)

[----------] 6 tests from CodePointToUtf8Test
[ RUN      ] CodePointToUtf8Test.CanEncodeNul
[       OK ] CodePointToUtf8Test.CanEncodeNul (0 ms)
[ RUN      ] CodePointToUtf8Test.CanEncodeAscii
[       OK ] CodePointToUtf8Test.CanEncodeAscii (0 ms)
[ RUN      ] CodePointToUtf8Test.CanEncode8To11Bits
[       OK ] CodePointToUtf8Test.CanEncode8To11Bits (0 ms)
[ RUN      ] CodePointToUtf8Test.CanEncode12To16Bits
[       OK ] CodePointToUtf8Test.CanEncode12To16Bits (0 ms)
[ RUN      ] CodePointToUtf8Test.CanEncode17To21Bits
[       OK ] CodePointToUtf8Test.CanEncode17To21Bits (0 ms)
[ RUN      ] CodePointToUtf8Test.CanEncodeInvalidCodePoint
[       OK ] CodePointToUtf8Test.CanEncodeInvalidCodePoint (0 ms)
[----------] 6 tests from CodePointToUtf8Test (0 ms total)

[----------] 9 tests from WideStringToUtf8Test
[ RUN      ] WideStringToUtf8Test.CanEncodeNul
[       OK ] WideStringToUtf8Test.CanEncodeNul (0 ms)
[ RUN      ] WideStringToUtf8Test.CanEncodeAscii
[       OK ] WideStringToUtf8Test.CanEncodeAscii (0 ms)
[ RUN      ] WideStringToUtf8Test.CanEncode8To11Bits
[       OK ] WideStringToUtf8Test.CanEncode8To11Bits (0 ms)
[ RUN      ] WideStringToUtf8Test.CanEncode12To16Bits
[       OK ] WideStringToUtf8Test.CanEncode12To16Bits (0 ms)
[ RUN      ] WideStringToUtf8Test.StopsOnNulCharacter
[       OK ] WideStringToUtf8Test.StopsOnNulCharacter (0 ms)
[ RUN      ] WideStringToUtf8Test.StopsWhenLengthLimitReached
[       OK ] WideStringToUtf8Test.StopsWhenLengthLimitReached (0 ms)
[ RUN      ] WideStringToUtf8Test.CanEncode17To21Bits
[       OK ] WideStringToUtf8Test.CanEncode17To21Bits (0 ms)
[ RUN      ] WideStringToUtf8Test.CanEncodeInvalidCodePoint
[       OK ] WideStringToUtf8Test.CanEncodeInvalidCodePoint (0 ms)
[ RUN      ] WideStringToUtf8Test.ConcatenatesCodepointsCorrectly
[       OK ] WideStringToUtf8Test.ConcatenatesCodepointsCorrectly (0 ms)
[----------] 9 tests from WideStringToUtf8Test (0 ms total)

[----------] 2 tests from RandomTest
[ RUN      ] RandomTest.GeneratesNumbersWithinRange
[       OK ] RandomTest.GeneratesNumbersWithinRange (0 ms)
[ RUN      ] RandomTest.RepeatsWhenReseeded
[       OK ] RandomTest.RepeatsWhenReseeded (0 ms)
[----------] 2 tests from RandomTest (0 ms total)

[----------] 3 tests from ContainerUtilityTest
[ RUN      ] ContainerUtilityTest.CountIf
[       OK ] ContainerUtilityTest.CountIf (0 ms)
[ RUN      ] ContainerUtilityTest.ForEach
[       OK ] ContainerUtilityTest.ForEach (0 ms)
[ RUN      ] ContainerUtilityTest.GetElementOr
[       OK ] ContainerUtilityTest.GetElementOr (0 ms)
[----------] 3 tests from ContainerUtilityTest (0 ms total)

[----------] 7 tests from VectorShuffleTest
[ RUN      ] VectorShuffleTest.HandlesEmptyRange
[       OK ] VectorShuffleTest.HandlesEmptyRange (0 ms)
[ RUN      ] VectorShuffleTest.HandlesRangeOfSizeOne
[       OK ] VectorShuffleTest.HandlesRangeOfSizeOne (0 ms)
[ RUN      ] VectorShuffleTest.ShufflesEntireVector
[       OK ] VectorShuffleTest.ShufflesEntireVector (0 ms)
[ RUN      ] VectorShuffleTest.ShufflesStartOfVector
[       OK ] VectorShuffleTest.ShufflesStartOfVector (0 ms)
[ RUN      ] VectorShuffleTest.ShufflesEndOfVector
[       OK ] VectorShuffleTest.ShufflesEndOfVector (0 ms)
[ RUN      ] VectorShuffleTest.ShufflesMiddleOfVector
[       OK ] VectorShuffleTest.ShufflesMiddleOfVector (0 ms)
[ RUN      ] VectorShuffleTest.ShufflesRepeatably
[       OK ] VectorShuffleTest.ShufflesRepeatably (0 ms)
[----------] 7 tests from VectorShuffleTest (0 ms total)

[----------] 1 test from AssertHelperTest
[ RUN      ] AssertHelperTest.AssertHelperIsSmall
[       OK ] AssertHelperTest.AssertHelperIsSmall (0 ms)
[----------] 1 test from AssertHelperTest (0 ms total)

[----------] 2 tests from StringTest
[ RUN      ] StringTest.EndsWithCaseInsensitive
[       OK ] StringTest.EndsWithCaseInsensitive (0 ms)
[ RUN      ] StringTest.CaseInsensitiveWideCStringEquals
[       OK ] StringTest.CaseInsensitiveWideCStringEquals (0 ms)
[----------] 2 tests from StringTest (0 ms total)

[----------] 4 tests from TestPropertyTest
[ RUN      ] TestPropertyTest.StringValue
[       OK ] TestPropertyTest.StringValue (0 ms)
[ RUN      ] TestPropertyTest.ReplaceStringValue
[       OK ] TestPropertyTest.ReplaceStringValue (0 ms)
[ RUN      ] TestPropertyTest.ConstructorWorks
[       OK ] TestPropertyTest.ConstructorWorks (0 ms)
[ RUN      ] TestPropertyTest.SetValue
[       OK ] TestPropertyTest.SetValue (0 ms)
[----------] 4 tests from TestPropertyTest (0 ms total)

[----------] 2 tests from ScopedFakeTestPartResultReporterTest
[ RUN      ] ScopedFakeTestPartResultReporterTest.InterceptsTestFailures
[       OK ] ScopedFakeTestPartResultReporterTest.InterceptsTestFailures (0 ms)
[ RUN      ] ScopedFakeTestPartResultReporterTest.DeprecatedConstructor
[       OK ] ScopedFakeTestPartResultReporterTest.DeprecatedConstructor (0 ms)
[----------] 2 tests from ScopedFakeTestPartResultReporterTest (0 ms total)

[----------] 1 test from ScopedFakeTestPartResultReporterWithThreadsTest
[ RUN      ] ScopedFakeTestPartResultReporterWithThreadsTest.InterceptsTestFailuresInAllThreads
[       OK ] ScopedFakeTestPartResultReporterWithThreadsTest.InterceptsTestFailuresInAllThreads (0 ms)
[----------] 1 test from ScopedFakeTestPartResultReporterWithThreadsTest (0 ms total)

[----------] 6 tests from ExpectFatalFailureTest
[ RUN      ] ExpectFatalFailureTest.CatchesFatalFaliure
[       OK ] ExpectFatalFailureTest.CatchesFatalFaliure (0 ms)
[ RUN      ] ExpectFatalFailureTest.AcceptsStdStringObject
[       OK ] ExpectFatalFailureTest.AcceptsStdStringObject (0 ms)
[ RUN      ] ExpectFatalFailureTest.CatchesFatalFailureOnAllThreads
[       OK ] ExpectFatalFailureTest.CatchesFatalFailureOnAllThreads (0 ms)
[ RUN      ] ExpectFatalFailureTest.CanBeUsedInNonVoidFunction
[       OK ] ExpectFatalFailureTest.CanBeUsedInNonVoidFunction (0 ms)
[ RUN      ] ExpectFatalFailureTest.DoesNotAbort
[       OK ] ExpectFatalFailureTest.DoesNotAbort (0 ms)
[ RUN      ] ExpectFatalFailureTest.AcceptsMacroThatExpandsToUnprotectedComma
[       OK ] ExpectFatalFailureTest.AcceptsMacroThatExpandsToUnprotectedComma (0 ms)
[----------] 6 tests from ExpectFatalFailureTest (1 ms total)

[----------] 4 tests from ExpectNonfatalFailureTest
[ RUN      ] ExpectNonfatalFailureTest.CatchesNonfatalFailure
[       OK ] ExpectNonfatalFailureTest.CatchesNonfatalFailure (0 ms)
[ RUN      ] ExpectNonfatalFailureTest.AcceptsStdStringObject
[       OK ] ExpectNonfatalFailureTest.AcceptsStdStringObject (0 ms)
[ RUN      ] ExpectNonfatalFailureTest.CatchesNonfatalFailureOnAllThreads
[       OK ] ExpectNonfatalFailureTest.CatchesNonfatalFailureOnAllThreads (0 ms)
[ RUN      ] ExpectNonfatalFailureTest.AcceptsMacroThatExpandsToUnprotectedComma
[       OK ] ExpectNonfatalFailureTest.AcceptsMacroThatExpandsToUnprotectedComma (0 ms)
[----------] 4 tests from ExpectNonfatalFailureTest (0 ms total)

[----------] 2 tests from ExpectFailureWithThreadsTest
[ RUN      ] ExpectFailureWithThreadsTest.ExpectFatalFailureOnAllThreads
[       OK ] ExpectFailureWithThreadsTest.ExpectFatalFailureOnAllThreads (0 ms)
[ RUN      ] ExpectFailureWithThreadsTest.ExpectNonFatalFailureOnAllThreads
[       OK ] ExpectFailureWithThreadsTest.ExpectNonFatalFailureOnAllThreads (0 ms)
[----------] 2 tests from ExpectFailureWithThreadsTest (0 ms total)

[----------] 3 tests from TestResultTest
[ RUN      ] TestResultTest.total_part_count
[       OK ] TestResultTest.total_part_count (0 ms)
[ RUN      ] TestResultTest.Passed
[       OK ] TestResultTest.Passed (0 ms)
[ RUN      ] TestResultTest.Failed
[       OK ] TestResultTest.Failed (0 ms)
[----------] 3 tests from TestResultTest (0 ms total)

[----------] 5 tests from TestResultPropertyTest
[ RUN      ] TestResultPropertyTest.NoPropertiesFoundWhenNoneAreAdded
[       OK ] TestResultPropertyTest.NoPropertiesFoundWhenNoneAreAdded (0 ms)
[ RUN      ] TestResultPropertyTest.OnePropertyFoundWhenAdded
[       OK ] TestResultPropertyTest.OnePropertyFoundWhenAdded (0 ms)
[ RUN      ] TestResultPropertyTest.MultiplePropertiesFoundWhenAdded
[       OK ] TestResultPropertyTest.MultiplePropertiesFoundWhenAdded (0 ms)
[ RUN      ] TestResultPropertyTest.OverridesValuesForDuplicateKeys
[       OK ] TestResultPropertyTest.OverridesValuesForDuplicateKeys (0 ms)
[ RUN      ] TestResultPropertyTest.GetTestProperty
[       OK ] TestResultPropertyTest.GetTestProperty (209 ms)
[----------] 5 tests from TestResultPropertyTest (209 ms total)

[----------] 2 tests from GTestFlagSaverTest
[ RUN      ] GTestFlagSaverTest.ModifyGTestFlags
[       OK ] GTestFlagSaverTest.ModifyGTestFlags (0 ms)
[ RUN      ] GTestFlagSaverTest.VerifyGTestFlags
[       OK ] GTestFlagSaverTest.VerifyGTestFlags (0 ms)
[----------] 2 tests from GTestFlagSaverTest (0 ms total)

[----------] 4 tests from Int32FromGTestEnvTest
[ RUN      ] Int32FromGTestEnvTest.ReturnsDefaultWhenVariableIsNotSet
[       OK ] Int32FromGTestEnvTest.ReturnsDefaultWhenVariableIsNotSet (0 ms)
[ RUN      ] Int32FromGTestEnvTest.ReturnsDefaultWhenValueOverflows
(expecting 2 warnings)
WARNING: Environment variable GTEST_TEMP is expected to be a 32-bit integer, but actually has value 12345678987654321, which overflows.
The default value 20 is used.
WARNING: Environment variable GTEST_TEMP is expected to be a 32-bit integer, but actually has value -12345678987654321, which overflows.
The default value 30 is used.
[       OK ] Int32FromGTestEnvTest.ReturnsDefaultWhenValueOverflows (0 ms)
[ RUN      ] Int32FromGTestEnvTest.ReturnsDefaultWhenValueIsInvalid
(expecting 2 warnings)
WARNING: Environment variable GTEST_TEMP is expected to be a 32-bit integer, but actually has value "A1".
The default value 40 is used.
WARNING: Environment variable GTEST_TEMP is expected to be a 32-bit integer, but actually has value "12X".
The default value 50 is used.
[       OK ] Int32FromGTestEnvTest.ReturnsDefaultWhenValueIsInvalid (0 ms)
[ RUN      ] Int32FromGTestEnvTest.ParsesAndReturnsValidValue
[       OK ] Int32FromGTestEnvTest.ParsesAndReturnsValidValue (0 ms)
[----------] 4 tests from Int32FromGTestEnvTest (0 ms total)

[----------] 4 tests from ParseInt32FlagTest
[ RUN      ] ParseInt32FlagTest.ReturnsFalseForInvalidFlag
[       OK ] ParseInt32FlagTest.ReturnsFalseForInvalidFlag (0 ms)
[ RUN      ] ParseInt32FlagTest.ReturnsDefaultWhenValueOverflows
(expecting 2 warnings)
[       OK ] ParseInt32FlagTest.ReturnsDefaultWhenValueOverflows (0 ms)
[ RUN      ] ParseInt32FlagTest.ReturnsDefaultWhenValueIsInvalid
(expecting 2 warnings)
[       OK ] ParseInt32FlagTest.ReturnsDefaultWhenValueIsInvalid (0 ms)
[ RUN      ] ParseInt32FlagTest.ParsesAndReturnsValidValue
[       OK ] ParseInt32FlagTest.ParsesAndReturnsValidValue (0 ms)
[----------] 4 tests from ParseInt32FlagTest (0 ms total)

[----------] 1 test from Int32FromEnvOrDieTest
[ RUN      ] Int32FromEnvOrDieTest.ParsesAndReturnsValidValue
[       OK ] Int32FromEnvOrDieTest.ParsesAndReturnsValidValue (0 ms)
[----------] 1 test from Int32FromEnvOrDieTest (0 ms total)

[----------] 2 tests from ShouldRunTestOnShardTest
[ RUN      ] ShouldRunTestOnShardTest.IsPartitionWhenThereIsOneShard
[       OK ] ShouldRunTestOnShardTest.IsPartitionWhenThereIsOneShard (0 ms)
[ RUN      ] ShouldRunTestOnShardTest.IsPartitionWhenThereAreFiveShards
[       OK ] ShouldRunTestOnShardTest.IsPartitionWhenThereAreFiveShards (0 ms)
[----------] 2 tests from ShouldRunTestOnShardTest (0 ms total)

[----------] 3 tests from ShouldShardTest
[ RUN      ] ShouldShardTest.ReturnsFalseWhenNeitherEnvVarIsSet
[       OK ] ShouldShardTest.ReturnsFalseWhenNeitherEnvVarIsSet (0 ms)
[ RUN      ] ShouldShardTest.ReturnsFalseWhenTotalShardIsOne
[       OK ] ShouldShardTest.ReturnsFalseWhenTotalShardIsOne (0 ms)
[ RUN      ] ShouldShardTest.WorksWhenShardEnvVarsAreValid
[       OK ] ShouldShardTest.WorksWhenShardEnvVarsAreValid (0 ms)
[----------] 3 tests from ShouldShardTest (0 ms total)

[----------] 2 tests from UnitTestTest
[ RUN      ] UnitTestTest.CanGetOriginalWorkingDir
[       OK ] UnitTestTest.CanGetOriginalWorkingDir (0 ms)
[ RUN      ] UnitTestTest.ReturnsPlausibleTimestamp
[       OK ] UnitTestTest.ReturnsPlausibleTimestamp (0 ms)
[----------] 2 tests from UnitTestTest (0 ms total)

[----------] 5 tests from UnitTestRecordPropertyTest
[ RUN      ] UnitTestRecordPropertyTest.OnePropertyFoundWhenAdded
[       OK ] UnitTestRecordPropertyTest.OnePropertyFoundWhenAdded (0 ms)
[ RUN      ] UnitTestRecordPropertyTest.MultiplePropertiesFoundWhenAdded
[       OK ] UnitTestRecordPropertyTest.MultiplePropertiesFoundWhenAdded (0 ms)
[ RUN      ] UnitTestRecordPropertyTest.OverridesValuesForDuplicateKeys
[       OK ] UnitTestRecordPropertyTest.OverridesValuesForDuplicateKeys (0 ms)
[ RUN      ] UnitTestRecordPropertyTest.AddFailureInsideTestsWhenUsingTestCaseReservedKeys
[       OK ] UnitTestRecordPropertyTest.AddFailureInsideTestsWhenUsingTestCaseReservedKeys (0 ms)
[ RUN      ] UnitTestRecordPropertyTest.AddRecordWithReservedKeysGeneratesCorrectPropertyList
[       OK ] UnitTestRecordPropertyTest.AddRecordWithReservedKeysGeneratesCorrectPropertyList (0 ms)
[----------] 5 tests from UnitTestRecordPropertyTest (0 ms total)

[----------] 3 tests from Pred1Test
[ RUN      ] Pred1Test.WithoutFormat
[       OK ] Pred1Test.WithoutFormat (0 ms)
[ RUN      ] Pred1Test.WithFormat
[       OK ] Pred1Test.WithFormat (0 ms)
[ RUN      ] Pred1Test.SingleEvaluationOnFailure
[       OK ] Pred1Test.SingleEvaluationOnFailure (0 ms)
[----------] 3 tests from Pred1Test (0 ms total)

[----------] 3 tests from PredTest
[ RUN      ] PredTest.WithoutFormat
[       OK ] PredTest.WithoutFormat (0 ms)
[ RUN      ] PredTest.WithFormat
[       OK ] PredTest.WithFormat (0 ms)
[ RUN      ] PredTest.SingleEvaluationOnFailure
[       OK ] PredTest.SingleEvaluationOnFailure (0 ms)
[----------] 3 tests from PredTest (0 ms total)

[----------] 2 tests from PredicateAssertionTest
[ RUN      ] PredicateAssertionTest.AcceptsOverloadedFunction
[       OK ] PredicateAssertionTest.AcceptsOverloadedFunction (0 ms)
[ RUN      ] PredicateAssertionTest.AcceptsTemplateFunction
[       OK ] PredicateAssertionTest.AcceptsTemplateFunction (0 ms)
[----------] 2 tests from PredicateAssertionTest (0 ms total)

[----------] 2 tests from PredicateFormatAssertionTest
[ RUN      ] PredicateFormatAssertionTest.AcceptsOverloadedFunction
[       OK ] PredicateFormatAssertionTest.AcceptsOverloadedFunction (0 ms)
[ RUN      ] PredicateFormatAssertionTest.AcceptsTemplateFunction
[       OK ] PredicateFormatAssertionTest.AcceptsTemplateFunction (0 ms)
[----------] 2 tests from PredicateFormatAssertionTest (0 ms total)

[----------] 8 tests from StringAssertionTest
[ RUN      ] StringAssertionTest.ASSERT_STREQ
[       OK ] StringAssertionTest.ASSERT_STREQ (0 ms)
[ RUN      ] StringAssertionTest.ASSERT_STREQ_Null
[       OK ] StringAssertionTest.ASSERT_STREQ_Null (0 ms)
[ RUN      ] StringAssertionTest.ASSERT_STREQ_Null2
[       OK ] StringAssertionTest.ASSERT_STREQ_Null2 (0 ms)
[ RUN      ] StringAssertionTest.ASSERT_STRNE
[       OK ] StringAssertionTest.ASSERT_STRNE (0 ms)
[ RUN      ] StringAssertionTest.ASSERT_STRCASEEQ
[       OK ] StringAssertionTest.ASSERT_STRCASEEQ (0 ms)
[ RUN      ] StringAssertionTest.ASSERT_STRCASENE
[       OK ] StringAssertionTest.ASSERT_STRCASENE (0 ms)
[ RUN      ] StringAssertionTest.STREQ_Wide
[       OK ] StringAssertionTest.STREQ_Wide (0 ms)
[ RUN      ] StringAssertionTest.STRNE_Wide
[       OK ] StringAssertionTest.STRNE_Wide (0 ms)
[----------] 8 tests from StringAssertionTest (0 ms total)

[----------] 6 tests from IsSubstringTest
[ RUN      ] IsSubstringTest.ReturnsCorrectResultForCString
[       OK ] IsSubstringTest.ReturnsCorrectResultForCString (0 ms)
[ RUN      ] IsSubstringTest.ReturnsCorrectResultForWideCString
[       OK ] IsSubstringTest.ReturnsCorrectResultForWideCString (1 ms)
[ RUN      ] IsSubstringTest.GeneratesCorrectMessageForCString
[       OK ] IsSubstringTest.GeneratesCorrectMessageForCString (0 ms)
[ RUN      ] IsSubstringTest.ReturnsCorrectResultsForStdString
[       OK ] IsSubstringTest.ReturnsCorrectResultsForStdString (0 ms)
[ RUN      ] IsSubstringTest.ReturnsCorrectResultForStdWstring
[       OK ] IsSubstringTest.ReturnsCorrectResultForStdWstring (0 ms)
[ RUN      ] IsSubstringTest.GeneratesCorrectMessageForWstring
[       OK ] IsSubstringTest.GeneratesCorrectMessageForWstring (0 ms)
[----------] 6 tests from IsSubstringTest (1 ms total)

[----------] 6 tests from IsNotSubstringTest
[ RUN      ] IsNotSubstringTest.ReturnsCorrectResultForCString
[       OK ] IsNotSubstringTest.ReturnsCorrectResultForCString (0 ms)
[ RUN      ] IsNotSubstringTest.ReturnsCorrectResultForWideCString
[       OK ] IsNotSubstringTest.ReturnsCorrectResultForWideCString (0 ms)
[ RUN      ] IsNotSubstringTest.GeneratesCorrectMessageForWideCString
[       OK ] IsNotSubstringTest.GeneratesCorrectMessageForWideCString (0 ms)
[ RUN      ] IsNotSubstringTest.ReturnsCorrectResultsForStdString
[       OK ] IsNotSubstringTest.ReturnsCorrectResultsForStdString (0 ms)
[ RUN      ] IsNotSubstringTest.GeneratesCorrectMessageForStdString
[       OK ] IsNotSubstringTest.GeneratesCorrectMessageForStdString (0 ms)
[ RUN      ] IsNotSubstringTest.ReturnsCorrectResultForStdWstring
[       OK ] IsNotSubstringTest.ReturnsCorrectResultForStdWstring (0 ms)
[----------] 6 tests from IsNotSubstringTest (0 ms total)

[----------] 13 tests from FloatTest
[ RUN      ] FloatTest.Size
[       OK ] FloatTest.Size (0 ms)
[ RUN      ] FloatTest.Zeros
[       OK ] FloatTest.Zeros (0 ms)
[ RUN      ] FloatTest.AlmostZeros
[       OK ] FloatTest.AlmostZeros (0 ms)
[ RUN      ] FloatTest.SmallDiff
[       OK ] FloatTest.SmallDiff (0 ms)
[ RUN      ] FloatTest.LargeDiff
[       OK ] FloatTest.LargeDiff (0 ms)
[ RUN      ] FloatTest.Infinity
[       OK ] FloatTest.Infinity (0 ms)
[ RUN      ] FloatTest.NaN
[       OK ] FloatTest.NaN (0 ms)
[ RUN      ] FloatTest.Reflexive
[       OK ] FloatTest.Reflexive (0 ms)
[ RUN      ] FloatTest.Commutative
[       OK ] FloatTest.Commutative (0 ms)
[ RUN      ] FloatTest.EXPECT_NEAR
[       OK ] FloatTest.EXPECT_NEAR (0 ms)
[ RUN      ] FloatTest.ASSERT_NEAR
[       OK ] FloatTest.ASSERT_NEAR (0 ms)
[ RUN      ] FloatTest.FloatLESucceeds
[       OK ] FloatTest.FloatLESucceeds (0 ms)
[ RUN      ] FloatTest.FloatLEFails
[       OK ] FloatTest.FloatLEFails (0 ms)
[----------] 13 tests from FloatTest (0 ms total)

[----------] 13 tests from DoubleTest
[ RUN      ] DoubleTest.Size
[       OK ] DoubleTest.Size (0 ms)
[ RUN      ] DoubleTest.Zeros
[       OK ] DoubleTest.Zeros (0 ms)
[ RUN      ] DoubleTest.AlmostZeros
[       OK ] DoubleTest.AlmostZeros (0 ms)
[ RUN      ] DoubleTest.SmallDiff
[       OK ] DoubleTest.SmallDiff (0 ms)
[ RUN      ] DoubleTest.LargeDiff
[       OK ] DoubleTest.LargeDiff (0 ms)
[ RUN      ] DoubleTest.Infinity
[       OK ] DoubleTest.Infinity (0 ms)
[ RUN      ] DoubleTest.NaN
[       OK ] DoubleTest.NaN (1 ms)
[ RUN      ] DoubleTest.Reflexive
[       OK ] DoubleTest.Reflexive (0 ms)
[ RUN      ] DoubleTest.Commutative
[       OK ] DoubleTest.Commutative (0 ms)
[ RUN      ] DoubleTest.EXPECT_NEAR
[       OK ] DoubleTest.EXPECT_NEAR (0 ms)
[ RUN      ] DoubleTest.ASSERT_NEAR
[       OK ] DoubleTest.ASSERT_NEAR (0 ms)
[ RUN      ] DoubleTest.DoubleLESucceeds
[       OK ] DoubleTest.DoubleLESucceeds (0 ms)
[ RUN      ] DoubleTest.DoubleLEFails
[       OK ] DoubleTest.DoubleLEFails (0 ms)
[----------] 13 tests from DoubleTest (1 ms total)

[----------] 1 test from DisabledTest
[ RUN      ] DisabledTest.NotDISABLED_TestShouldRun
[       OK ] DisabledTest.NotDISABLED_TestShouldRun (0 ms)
[----------] 1 test from DisabledTest (0 ms total)

[----------] 5 tests from SingleEvaluationTest
[ RUN      ] SingleEvaluationTest.FailedASSERT_STREQ
[       OK ] SingleEvaluationTest.FailedASSERT_STREQ (0 ms)
[ RUN      ] SingleEvaluationTest.ASSERT_STR
[       OK ] SingleEvaluationTest.ASSERT_STR (0 ms)
[ RUN      ] SingleEvaluationTest.FailedASSERT_NE
[       OK ] SingleEvaluationTest.FailedASSERT_NE (0 ms)
[ RUN      ] SingleEvaluationTest.OtherCases
[       OK ] SingleEvaluationTest.OtherCases (0 ms)
[ RUN      ] SingleEvaluationTest.ExceptionTests
[       OK ] SingleEvaluationTest.ExceptionTests (0 ms)
[----------] 5 tests from SingleEvaluationTest (0 ms total)

[----------] 5 tests from NoFatalFailureTest
[ RUN      ] NoFatalFailureTest.NoFailure
[       OK ] NoFatalFailureTest.NoFailure (0 ms)
[ RUN      ] NoFatalFailureTest.NonFatalIsNoFailure
[       OK ] NoFatalFailureTest.NonFatalIsNoFailure (0 ms)
[ RUN      ] NoFatalFailureTest.AssertNoFatalFailureOnFatalFailure
[       OK ] NoFatalFailureTest.AssertNoFatalFailureOnFatalFailure (0 ms)
[ RUN      ] NoFatalFailureTest.ExpectNoFatalFailureOnFatalFailure
[       OK ] NoFatalFailureTest.ExpectNoFatalFailureOnFatalFailure (0 ms)
[ RUN      ] NoFatalFailureTest.MessageIsStreamable
[       OK ] NoFatalFailureTest.MessageIsStreamable (0 ms)
[----------] 5 tests from NoFatalFailureTest (0 ms total)

[----------] 1 test from EditDistance
[ RUN      ] EditDistance.TestCases
[       OK ] EditDistance.TestCases (0 ms)
[----------] 1 test from EditDistance (0 ms total)

[----------] 23 tests from AssertionTest
[ RUN      ] AssertionTest.EqFailure
[       OK ] AssertionTest.EqFailure (0 ms)
[ RUN      ] AssertionTest.EqFailureWithDiff
[       OK ] AssertionTest.EqFailureWithDiff (0 ms)
[ RUN      ] AssertionTest.AppendUserMessage
[       OK ] AssertionTest.AppendUserMessage (0 ms)
[ RUN      ] AssertionTest.ASSERT_TRUE
[       OK ] AssertionTest.ASSERT_TRUE (0 ms)
[ RUN      ] AssertionTest.AssertTrueWithAssertionResult
[       OK ] AssertionTest.AssertTrueWithAssertionResult (0 ms)
[ RUN      ] AssertionTest.ASSERT_FALSE
[       OK ] AssertionTest.ASSERT_FALSE (0 ms)
[ RUN      ] AssertionTest.AssertFalseWithAssertionResult
[       OK ] AssertionTest.AssertFalseWithAssertionResult (0 ms)
[ RUN      ] AssertionTest.ASSERT_EQ
[       OK ] AssertionTest.ASSERT_EQ (0 ms)
[ RUN      ] AssertionTest.ASSERT_EQ_NULL
[       OK ] AssertionTest.ASSERT_EQ_NULL (0 ms)
[ RUN      ] AssertionTest.ASSERT_NE
[       OK ] AssertionTest.ASSERT_NE (0 ms)
[ RUN      ] AssertionTest.ASSERT_LE
[       OK ] AssertionTest.ASSERT_LE (0 ms)
[ RUN      ] AssertionTest.ASSERT_LT
[       OK ] AssertionTest.ASSERT_LT (0 ms)
[ RUN      ] AssertionTest.ASSERT_GE
[       OK ] AssertionTest.ASSERT_GE (0 ms)
[ RUN      ] AssertionTest.ASSERT_GT
[       OK ] AssertionTest.ASSERT_GT (0 ms)
[ RUN      ] AssertionTest.ASSERT_THROW
[       OK ] AssertionTest.ASSERT_THROW (0 ms)
[ RUN      ] AssertionTest.ASSERT_NO_THROW
[       OK ] AssertionTest.ASSERT_NO_THROW (0 ms)
[ RUN      ] AssertionTest.ASSERT_ANY_THROW
[       OK ] AssertionTest.ASSERT_ANY_THROW (0 ms)
[ RUN      ] AssertionTest.AssertPrecedence
[       OK ] AssertionTest.AssertPrecedence (0 ms)
[ RUN      ] AssertionTest.NonFixtureSubroutine
[       OK ] AssertionTest.NonFixtureSubroutine (0 ms)
[ RUN      ] AssertionTest.AssertWorksWithUncopyableObject
[       OK ] AssertionTest.AssertWorksWithUncopyableObject (0 ms)
[ RUN      ] AssertionTest.ExpectWorksWithUncopyableObject
[       OK ] AssertionTest.ExpectWorksWithUncopyableObject (0 ms)
[ RUN      ] AssertionTest.NamedEnum
[       OK ] AssertionTest.NamedEnum (0 ms)
[ RUN      ] AssertionTest.AnonymousEnum
[       OK ] AssertionTest.AnonymousEnum (0 ms)
[----------] 23 tests from AssertionTest (0 ms total)

[----------] 19 tests from ExpectTest
[ RUN      ] ExpectTest.ASSERT_EQ_Double
[       OK ] ExpectTest.ASSERT_EQ_Double (0 ms)
[ RUN      ] ExpectTest.ASSERT_EQ_0
[       OK ] ExpectTest.ASSERT_EQ_0 (0 ms)
[ RUN      ] ExpectTest.EXPECT_TRUE
[       OK ] ExpectTest.EXPECT_TRUE (0 ms)
[ RUN      ] ExpectTest.ExpectTrueWithAssertionResult
[       OK ] ExpectTest.ExpectTrueWithAssertionResult (0 ms)
[ RUN      ] ExpectTest.EXPECT_FALSE
[       OK ] ExpectTest.EXPECT_FALSE (0 ms)
[ RUN      ] ExpectTest.ExpectFalseWithAssertionResult
[       OK ] ExpectTest.ExpectFalseWithAssertionResult (0 ms)
[ RUN      ] ExpectTest.EXPECT_EQ
[       OK ] ExpectTest.EXPECT_EQ (0 ms)
[ RUN      ] ExpectTest.EXPECT_EQ_Double
[       OK ] ExpectTest.EXPECT_EQ_Double (0 ms)
[ RUN      ] ExpectTest.EXPECT_EQ_NULL
[       OK ] ExpectTest.EXPECT_EQ_NULL (0 ms)
[ RUN      ] ExpectTest.EXPECT_EQ_0
[       OK ] ExpectTest.EXPECT_EQ_0 (0 ms)
[ RUN      ] ExpectTest.EXPECT_NE
[       OK ] ExpectTest.EXPECT_NE (1 ms)
[ RUN      ] ExpectTest.EXPECT_LE
[       OK ] ExpectTest.EXPECT_LE (0 ms)
[ RUN      ] ExpectTest.EXPECT_LT
[       OK ] ExpectTest.EXPECT_LT (0 ms)
[ RUN      ] ExpectTest.EXPECT_GE
[       OK ] ExpectTest.EXPECT_GE (0 ms)
[ RUN      ] ExpectTest.EXPECT_GT
[       OK ] ExpectTest.EXPECT_GT (0 ms)
[ RUN      ] ExpectTest.EXPECT_THROW
[       OK ] ExpectTest.EXPECT_THROW (0 ms)
[ RUN      ] ExpectTest.EXPECT_NO_THROW
[       OK ] ExpectTest.EXPECT_NO_THROW (0 ms)
[ RUN      ] ExpectTest.EXPECT_ANY_THROW
[       OK ] ExpectTest.EXPECT_ANY_THROW (0 ms)
[ RUN      ] ExpectTest.ExpectPrecedence
[       OK ] ExpectTest.ExpectPrecedence (0 ms)
[----------] 19 tests from ExpectTest (1 ms total)

[----------] 5 tests from AssertionSyntaxTest
[ RUN      ] AssertionSyntaxTest.BasicAssertionsBehavesLikeSingleStatement
[       OK ] AssertionSyntaxTest.BasicAssertionsBehavesLikeSingleStatement (0 ms)
[ RUN      ] AssertionSyntaxTest.ExceptionAssertionsBehavesLikeSingleStatement
[       OK ] AssertionSyntaxTest.ExceptionAssertionsBehavesLikeSingleStatement (0 ms)
[ RUN      ] AssertionSyntaxTest.NoFatalFailureAssertionsBehavesLikeSingleStatement
[       OK ] AssertionSyntaxTest.NoFatalFailureAssertionsBehavesLikeSingleStatement (0 ms)
[ RUN      ] AssertionSyntaxTest.WorksWithSwitch
[       OK ] AssertionSyntaxTest.WorksWithSwitch (0 ms)
[ RUN      ] AssertionSyntaxTest.WorksWithConst
[       OK ] AssertionSyntaxTest.WorksWithConst (0 ms)
[----------] 5 tests from AssertionSyntaxTest (0 ms total)

[----------] 1 test from ExpectThrowTest
[ RUN      ] ExpectThrowTest.DoesNotGenerateUnreachableCodeWarning
[       OK ] ExpectThrowTest.DoesNotGenerateUnreachableCodeWarning (0 ms)
[----------] 1 test from ExpectThrowTest (0 ms total)

[----------] 5 tests from SuccessfulAssertionTest
[ RUN      ] SuccessfulAssertionTest.SUCCEED
[       OK ] SuccessfulAssertionTest.SUCCEED (0 ms)
[ RUN      ] SuccessfulAssertionTest.EXPECT
[       OK ] SuccessfulAssertionTest.EXPECT (0 ms)
[ RUN      ] SuccessfulAssertionTest.EXPECT_STR
[       OK ] SuccessfulAssertionTest.EXPECT_STR (0 ms)
[ RUN      ] SuccessfulAssertionTest.ASSERT
[       OK ] SuccessfulAssertionTest.ASSERT (0 ms)
[ RUN      ] SuccessfulAssertionTest.ASSERT_STR
[       OK ] SuccessfulAssertionTest.ASSERT_STR (0 ms)
[----------] 5 tests from SuccessfulAssertionTest (0 ms total)

[----------] 8 tests from AssertionWithMessageTest
[ RUN      ] AssertionWithMessageTest.EXPECT
[       OK ] AssertionWithMessageTest.EXPECT (0 ms)
[ RUN      ] AssertionWithMessageTest.ASSERT
[       OK ] AssertionWithMessageTest.ASSERT (0 ms)
[ RUN      ] AssertionWithMessageTest.ASSERT_STR
[       OK ] AssertionWithMessageTest.ASSERT_STR (0 ms)
[ RUN      ] AssertionWithMessageTest.ASSERT_FLOATING
[       OK ] AssertionWithMessageTest.ASSERT_FLOATING (0 ms)
[ RUN      ] AssertionWithMessageTest.ASSERT_FALSE
[       OK ] AssertionWithMessageTest.ASSERT_FALSE (0 ms)
[ RUN      ] AssertionWithMessageTest.FAIL
[       OK ] AssertionWithMessageTest.FAIL (0 ms)
[ RUN      ] AssertionWithMessageTest.SUCCEED
[       OK ] AssertionWithMessageTest.SUCCEED (0 ms)
[ RUN      ] AssertionWithMessageTest.ASSERT_TRUE
[       OK ] AssertionWithMessageTest.ASSERT_TRUE (0 ms)
[----------] 8 tests from AssertionWithMessageTest (0 ms total)

[----------] 5 tests from StreamableToStringTest
[ RUN      ] StreamableToStringTest.Scalar
[       OK ] StreamableToStringTest.Scalar (0 ms)
[ RUN      ] StreamableToStringTest.Pointer
[       OK ] StreamableToStringTest.Pointer (0 ms)
[ RUN      ] StreamableToStringTest.NullPointer
[       OK ] StreamableToStringTest.NullPointer (0 ms)
[ RUN      ] StreamableToStringTest.CString
[       OK ] StreamableToStringTest.CString (0 ms)
[ RUN      ] StreamableToStringTest.NullCString
[       OK ] StreamableToStringTest.NullCString (0 ms)
[----------] 5 tests from StreamableToStringTest (0 ms total)

[----------] 6 tests from StreamableTest
[ RUN      ] StreamableTest.string
[       OK ] StreamableTest.string (0 ms)
[ RUN      ] StreamableTest.stringWithEmbeddedNUL
[       OK ] StreamableTest.stringWithEmbeddedNUL (0 ms)
[ RUN      ] StreamableTest.NULChar
[       OK ] StreamableTest.NULChar (0 ms)
[ RUN      ] StreamableTest.int
[       OK ] StreamableTest.int (0 ms)
[ RUN      ] StreamableTest.NullCharPtr
[       OK ] StreamableTest.NullCharPtr (0 ms)
[ RUN      ] StreamableTest.BasicIoManip
[       OK ] StreamableTest.BasicIoManip (0 ms)
[----------] 6 tests from StreamableTest (0 ms total)

[----------] 4 tests from MacroTest
[ RUN      ] MacroTest.ADD_FAILURE
[       OK ] MacroTest.ADD_FAILURE (0 ms)
[ RUN      ] MacroTest.ADD_FAILURE_AT
[       OK ] MacroTest.ADD_FAILURE_AT (0 ms)
[ RUN      ] MacroTest.FAIL
[       OK ] MacroTest.FAIL (0 ms)
[ RUN      ] MacroTest.SUCCEED
[       OK ] MacroTest.SUCCEED (0 ms)
[----------] 4 tests from MacroTest (0 ms total)

[----------] 10 tests from EqAssertionTest
[ RUN      ] EqAssertionTest.Bool
[       OK ] EqAssertionTest.Bool (0 ms)
[ RUN      ] EqAssertionTest.Int
[       OK ] EqAssertionTest.Int (0 ms)
[ RUN      ] EqAssertionTest.Time_T
[       OK ] EqAssertionTest.Time_T (1 ms)
[ RUN      ] EqAssertionTest.Char
[       OK ] EqAssertionTest.Char (0 ms)
[ RUN      ] EqAssertionTest.WideChar
[       OK ] EqAssertionTest.WideChar (0 ms)
[ RUN      ] EqAssertionTest.StdString
[       OK ] EqAssertionTest.StdString (0 ms)
[ RUN      ] EqAssertionTest.StdWideString
[       OK ] EqAssertionTest.StdWideString (0 ms)
[ RUN      ] EqAssertionTest.CharPointer
[       OK ] EqAssertionTest.CharPointer (0 ms)
[ RUN      ] EqAssertionTest.WideCharPointer
[       OK ] EqAssertionTest.WideCharPointer (0 ms)
[ RUN      ] EqAssertionTest.OtherPointer
[       OK ] EqAssertionTest.OtherPointer (0 ms)
[----------] 10 tests from EqAssertionTest (1 ms total)

[----------] 1 test from ComparisonAssertionTest
[ RUN      ] ComparisonAssertionTest.AcceptsUnprintableArgs
[       OK ] ComparisonAssertionTest.AcceptsUnprintableArgs (0 ms)
[----------] 1 test from ComparisonAssertionTest (0 ms total)

[----------] 1 test from FRIEND_TEST_Test
[ RUN      ] FRIEND_TEST_Test.TEST
[       OK ] FRIEND_TEST_Test.TEST (0 ms)
[----------] 1 test from FRIEND_TEST_Test (0 ms total)

[----------] 1 test from FRIEND_TEST_Test2
[ RUN      ] FRIEND_TEST_Test2.TEST_F
[       OK ] FRIEND_TEST_Test2.TEST_F (0 ms)
[----------] 1 test from FRIEND_TEST_Test2 (0 ms total)

[----------] 2 tests from TestLifeCycleTest
[ RUN      ] TestLifeCycleTest.Test1
[       OK ] TestLifeCycleTest.Test1 (0 ms)
[ RUN      ] TestLifeCycleTest.Test2
[       OK ] TestLifeCycleTest.Test2 (0 ms)
[----------] 2 tests from TestLifeCycleTest (0 ms total)

[----------] 6 tests from AssertionResultTest
[ RUN      ] AssertionResultTest.CopyConstructorWorksWhenNotOptimied
[       OK ] AssertionResultTest.CopyConstructorWorksWhenNotOptimied (0 ms)
[ RUN      ] AssertionResultTest.ConstructionWorks
[       OK ] AssertionResultTest.ConstructionWorks (0 ms)
[ RUN      ] AssertionResultTest.NegationWorks
[       OK ] AssertionResultTest.NegationWorks (0 ms)
[ RUN      ] AssertionResultTest.StreamingWorks
[       OK ] AssertionResultTest.StreamingWorks (0 ms)
[ RUN      ] AssertionResultTest.CanStreamOstreamManipulators
[       OK ] AssertionResultTest.CanStreamOstreamManipulators (0 ms)
[ RUN      ] AssertionResultTest.ConstructibleFromImplicitlyConvertible
[       OK ] AssertionResultTest.ConstructibleFromImplicitlyConvertible (0 ms)
[----------] 6 tests from AssertionResultTest (0 ms total)

[----------] 6 tests from MessageTest
[ RUN      ] MessageTest.CanStreamUserTypeInGlobalNameSpace
[       OK ] MessageTest.CanStreamUserTypeInGlobalNameSpace (0 ms)
[ RUN      ] MessageTest.CanStreamUserTypeInUnnamedNameSpace
[       OK ] MessageTest.CanStreamUserTypeInUnnamedNameSpace (0 ms)
[ RUN      ] MessageTest.CanStreamUserTypeInUserNameSpace
[       OK ] MessageTest.CanStreamUserTypeInUserNameSpace (0 ms)
[ RUN      ] MessageTest.CanStreamUserTypeInUserNameSpaceWithStreamOperatorInGlobal
[       OK ] MessageTest.CanStreamUserTypeInUserNameSpaceWithStreamOperatorInGlobal (0 ms)
[ RUN      ] MessageTest.NullPointers
[       OK ] MessageTest.NullPointers (0 ms)
[ RUN      ] MessageTest.WideStrings
[       OK ] MessageTest.WideStrings (0 ms)
[----------] 6 tests from MessageTest (0 ms total)

[----------] 2 tests from TestInfoTest
[ RUN      ] TestInfoTest.Names
[       OK ] TestInfoTest.Names (0 ms)
[ RUN      ] TestInfoTest.result
[       OK ] TestInfoTest.result (0 ms)
[----------] 2 tests from TestInfoTest (0 ms total)

[----------] 1 test from CodeLocationForTEST
[ RUN      ] CodeLocationForTEST.Verify
[       OK ] CodeLocationForTEST.Verify (0 ms)
[----------] 1 test from CodeLocationForTEST (0 ms total)

[----------] 1 test from CodeLocationForTESTF
[ RUN      ] CodeLocationForTESTF.Verify
[       OK ] CodeLocationForTESTF.Verify (0 ms)
[----------] 1 test from CodeLocationForTESTF (0 ms total)

[----------] 1 test from CodeLocationForTYPEDTEST/0, where TypeParam = <type>
[ RUN      ] CodeLocationForTYPEDTEST/0.Verify
[       OK ] CodeLocationForTYPEDTEST/0.Verify (0 ms)
[----------] 1 test from CodeLocationForTYPEDTEST/0 (0 ms total)

[----------] 1 test from My/CodeLocationForTYPEDTESTP/0, where TypeParam = <type>
[ RUN      ] My/CodeLocationForTYPEDTESTP/0.Verify
[       OK ] My/CodeLocationForTYPEDTESTP/0.Verify (0 ms)
[----------] 1 test from My/CodeLocationForTYPEDTESTP/0 (0 ms total)

[----------] 2 tests from SetUpTestCaseTest
Setting up the test case . . .
[ RUN      ] SetUpTestCaseTest.Test1
[       OK ] SetUpTestCaseTest.Test1 (0 ms)
[ RUN      ] SetUpTestCaseTest.Test2
[       OK ] SetUpTestCaseTest.Test2 (0 ms)
Tearing down the test case . . .
[----------] 2 tests from SetUpTestCaseTest (0 ms total)

[----------] 41 tests from InitGoogleTestTest
[ RUN      ] InitGoogleTestTest.Empty
[       OK ] InitGoogleTestTest.Empty (0 ms)
[ RUN      ] InitGoogleTestTest.NoFlag
[       OK ] InitGoogleTestTest.NoFlag (0 ms)
[ RUN      ] InitGoogleTestTest.FilterBad
[       OK ] InitGoogleTestTest.FilterBad (1 ms)
[ RUN      ] InitGoogleTestTest.FilterEmpty
[       OK ] InitGoogleTestTest.FilterEmpty (0 ms)
[ RUN      ] InitGoogleTestTest.FilterNonEmpty
[       OK ] InitGoogleTestTest.FilterNonEmpty (0 ms)
[ RUN      ] InitGoogleTestTest.BreakOnFailureWithoutValue
[       OK ] InitGoogleTestTest.BreakOnFailureWithoutValue (0 ms)
[ RUN      ] InitGoogleTestTest.BreakOnFailureFalse_0
[       OK ] InitGoogleTestTest.BreakOnFailureFalse_0 (0 ms)
[ RUN      ] InitGoogleTestTest.BreakOnFailureFalse_f
[       OK ] InitGoogleTestTest.BreakOnFailureFalse_f (0 ms)
[ RUN      ] InitGoogleTestTest.BreakOnFailureFalse_F
[       OK ] InitGoogleTestTest.BreakOnFailureFalse_F (0 ms)
[ RUN      ] InitGoogleTestTest.BreakOnFailureTrue
[       OK ] InitGoogleTestTest.BreakOnFailureTrue (0 ms)
[ RUN      ] InitGoogleTestTest.CatchExceptions
[       OK ] InitGoogleTestTest.CatchExceptions (0 ms)
[ RUN      ] InitGoogleTestTest.DeathTestUseFork
[       OK ] InitGoogleTestTest.DeathTestUseFork (0 ms)
[ RUN      ] InitGoogleTestTest.DuplicatedFlags
[       OK ] InitGoogleTestTest.DuplicatedFlags (0 ms)
[ RUN      ] InitGoogleTestTest.UnrecognizedFlag
[       OK ] InitGoogleTestTest.UnrecognizedFlag (0 ms)
[ RUN      ] InitGoogleTestTest.ListTestsFlag
[       OK ] InitGoogleTestTest.ListTestsFlag (0 ms)
[ RUN      ] InitGoogleTestTest.ListTestsTrue
[       OK ] InitGoogleTestTest.ListTestsTrue (0 ms)
[ RUN      ] InitGoogleTestTest.ListTestsFalse
[       OK ] InitGoogleTestTest.ListTestsFalse (0 ms)
[ RUN      ] InitGoogleTestTest.ListTestsFalse_f
[       OK ] InitGoogleTestTest.ListTestsFalse_f (0 ms)
[ RUN      ] InitGoogleTestTest.ListTestsFalse_F
[       OK ] InitGoogleTestTest.ListTestsFalse_F (0 ms)
[ RUN      ] InitGoogleTestTest.OutputEmpty
[       OK ] InitGoogleTestTest.OutputEmpty (0 ms)
[ RUN      ] InitGoogleTestTest.OutputXml
[       OK ] InitGoogleTestTest.OutputXml (0 ms)
[ RUN      ] InitGoogleTestTest.OutputXmlFile
[       OK ] InitGoogleTestTest.OutputXmlFile (0 ms)
[ RUN      ] InitGoogleTestTest.OutputXmlDirectory
[       OK ] InitGoogleTestTest.OutputXmlDirectory (1 ms)
[ RUN      ] InitGoogleTestTest.PrintTimeFlag
[       OK ] InitGoogleTestTest.PrintTimeFlag (0 ms)
[ RUN      ] InitGoogleTestTest.PrintTimeTrue
[       OK ] InitGoogleTestTest.PrintTimeTrue (0 ms)
[ RUN      ] InitGoogleTestTest.PrintTimeFalse
[       OK ] InitGoogleTestTest.PrintTimeFalse (0 ms)
[ RUN      ] InitGoogleTestTest.PrintTimeFalse_f
[       OK ] InitGoogleTestTest.PrintTimeFalse_f (0 ms)
[ RUN      ] InitGoogleTestTest.PrintTimeFalse_F
[       OK ] InitGoogleTestTest.PrintTimeFalse_F (0 ms)
[ RUN      ] InitGoogleTestTest.RandomSeed
[       OK ] InitGoogleTestTest.RandomSeed (0 ms)
[ RUN      ] InitGoogleTestTest.Repeat
[       OK ] InitGoogleTestTest.Repeat (0 ms)
[ RUN      ] InitGoogleTestTest.AlsoRunDisabledTestsFlag
[       OK ] InitGoogleTestTest.AlsoRunDisabledTestsFlag (0 ms)
[ RUN      ] InitGoogleTestTest.AlsoRunDisabledTestsTrue
[       OK ] InitGoogleTestTest.AlsoRunDisabledTestsTrue (0 ms)
[ RUN      ] InitGoogleTestTest.AlsoRunDisabledTestsFalse
[       OK ] InitGoogleTestTest.AlsoRunDisabledTestsFalse (0 ms)
[ RUN      ] InitGoogleTestTest.ShuffleWithoutValue
[       OK ] InitGoogleTestTest.ShuffleWithoutValue (0 ms)
[ RUN      ] InitGoogleTestTest.ShuffleFalse_0
[       OK ] InitGoogleTestTest.ShuffleFalse_0 (0 ms)
[ RUN      ] InitGoogleTestTest.ShuffleTrue
[       OK ] InitGoogleTestTest.ShuffleTrue (0 ms)
[ RUN      ] InitGoogleTestTest.StackTraceDepth
[       OK ] InitGoogleTestTest.StackTraceDepth (0 ms)
[ RUN      ] InitGoogleTestTest.StreamResultTo
[       OK ] InitGoogleTestTest.StreamResultTo (0 ms)
[ RUN      ] InitGoogleTestTest.ThrowOnFailureWithoutValue
[       OK ] InitGoogleTestTest.ThrowOnFailureWithoutValue (0 ms)
[ RUN      ] InitGoogleTestTest.ThrowOnFailureFalse_0
[       OK ] InitGoogleTestTest.ThrowOnFailureFalse_0 (0 ms)
[ RUN      ] InitGoogleTestTest.ThrowOnFailureTrue
[       OK ] InitGoogleTestTest.ThrowOnFailureTrue (1 ms)
[----------] 41 tests from InitGoogleTestTest (3 ms total)

[----------] 3 tests from FlagfileTest
[ RUN      ] FlagfileTest.Empty
[       OK ] FlagfileTest.Empty (0 ms)
[ RUN      ] FlagfileTest.FilterNonEmpty
[       OK ] FlagfileTest.FilterNonEmpty (0 ms)
[ RUN      ] FlagfileTest.SeveralFlags
[       OK ] FlagfileTest.SeveralFlags (0 ms)
[----------] 3 tests from FlagfileTest (0 ms total)

[----------] 2 tests from CurrentTestInfoTest
[ RUN      ] CurrentTestInfoTest.WorksForFirstTestInATestCase
[       OK ] CurrentTestInfoTest.WorksForFirstTestInATestCase (0 ms)
[ RUN      ] CurrentTestInfoTest.WorksForSecondTestInATestCase
[       OK ] CurrentTestInfoTest.WorksForSecondTestInATestCase (0 ms)
[----------] 2 tests from CurrentTestInfoTest (0 ms total)

[----------] 2 tests from NestedTestingNamespaceTest
[ RUN      ] NestedTestingNamespaceTest.Success
[       OK ] NestedTestingNamespaceTest.Success (0 ms)
[ RUN      ] NestedTestingNamespaceTest.Failure
[       OK ] NestedTestingNamespaceTest.Failure (0 ms)
[----------] 2 tests from NestedTestingNamespaceTest (0 ms total)

[----------] 13 tests from StreamingAssertionsTest
[ RUN      ] StreamingAssertionsTest.Unconditional
[       OK ] StreamingAssertionsTest.Unconditional (0 ms)
[ RUN      ] StreamingAssertionsTest.Truth
[       OK ] StreamingAssertionsTest.Truth (0 ms)
[ RUN      ] StreamingAssertionsTest.Truth2
[       OK ] StreamingAssertionsTest.Truth2 (0 ms)
[ RUN      ] StreamingAssertionsTest.IntegerEquals
[       OK ] StreamingAssertionsTest.IntegerEquals (0 ms)
[ RUN      ] StreamingAssertionsTest.IntegerLessThan
[       OK ] StreamingAssertionsTest.IntegerLessThan (0 ms)
[ RUN      ] StreamingAssertionsTest.StringsEqual
[       OK ] StreamingAssertionsTest.StringsEqual (0 ms)
[ RUN      ] StreamingAssertionsTest.StringsNotEqual
[       OK ] StreamingAssertionsTest.StringsNotEqual (0 ms)
[ RUN      ] StreamingAssertionsTest.StringsEqualIgnoringCase
[       OK ] StreamingAssertionsTest.StringsEqualIgnoringCase (0 ms)
[ RUN      ] StreamingAssertionsTest.StringNotEqualIgnoringCase
[       OK ] StreamingAssertionsTest.StringNotEqualIgnoringCase (0 ms)
[ RUN      ] StreamingAssertionsTest.FloatingPointEquals
[       OK ] StreamingAssertionsTest.FloatingPointEquals (0 ms)
[ RUN      ] StreamingAssertionsTest.Throw
[       OK ] StreamingAssertionsTest.Throw (0 ms)
[ RUN      ] StreamingAssertionsTest.NoThrow
[       OK ] StreamingAssertionsTest.NoThrow (1 ms)
[ RUN      ] StreamingAssertionsTest.AnyThrow
[       OK ] StreamingAssertionsTest.AnyThrow (0 ms)
[----------] 13 tests from StreamingAssertionsTest (1 ms total)

[----------] 6 tests from ColoredOutputTest
[ RUN      ] ColoredOutputTest.UsesColorsWhenGTestColorFlagIsYes
[       OK ] ColoredOutputTest.UsesColorsWhenGTestColorFlagIsYes (0 ms)
[ RUN      ] ColoredOutputTest.UsesColorsWhenGTestColorFlagIsAliasOfYes
[       OK ] ColoredOutputTest.UsesColorsWhenGTestColorFlagIsAliasOfYes (0 ms)
[ RUN      ] ColoredOutputTest.UsesNoColorWhenGTestColorFlagIsNo
[       OK ] ColoredOutputTest.UsesNoColorWhenGTestColorFlagIsNo (0 ms)
[ RUN      ] ColoredOutputTest.UsesNoColorWhenGTestColorFlagIsInvalid
[       OK ] ColoredOutputTest.UsesNoColorWhenGTestColorFlagIsInvalid (0 ms)
[ RUN      ] ColoredOutputTest.UsesColorsWhenStdoutIsTty
[       OK ] ColoredOutputTest.UsesColorsWhenStdoutIsTty (0 ms)
[ RUN      ] ColoredOutputTest.UsesColorsWhenTermSupportsColors
[       OK ] ColoredOutputTest.UsesColorsWhenTermSupportsColors (0 ms)
[----------] 6 tests from ColoredOutputTest (0 ms total)

[----------] 2 tests from StaticAssertTypeEqTest
[ RUN      ] StaticAssertTypeEqTest.WorksInClass
[       OK ] StaticAssertTypeEqTest.WorksInClass (0 ms)
[ RUN      ] StaticAssertTypeEqTest.CompilesForEqualTypes
[       OK ] StaticAssertTypeEqTest.CompilesForEqualTypes (0 ms)
[----------] 2 tests from StaticAssertTypeEqTest (0 ms total)

[----------] 1 test from GetCurrentOsStackTraceExceptTopTest
[ RUN      ] GetCurrentOsStackTraceExceptTopTest.ReturnsTheStackTrace
[       OK ] GetCurrentOsStackTraceExceptTopTest.ReturnsTheStackTrace (0 ms)
[----------] 1 test from GetCurrentOsStackTraceExceptTopTest (0 ms total)

[----------] 6 tests from HasNonfatalFailureTest
[ RUN      ] HasNonfatalFailureTest.ReturnsFalseWhenThereIsNoFailure
[       OK ] HasNonfatalFailureTest.ReturnsFalseWhenThereIsNoFailure (0 ms)
[ RUN      ] HasNonfatalFailureTest.ReturnsFalseWhenThereIsOnlyFatalFailure
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6903: Failure
Failed
[       OK ] HasNonfatalFailureTest.ReturnsFalseWhenThereIsOnlyFatalFailure (0 ms)
[ RUN      ] HasNonfatalFailureTest.ReturnsTrueWhenThereIsNonfatalFailure
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6913: Failure
Failed
[       OK ] HasNonfatalFailureTest.ReturnsTrueWhenThereIsNonfatalFailure (0 ms)
[ RUN      ] HasNonfatalFailureTest.ReturnsTrueWhenThereAreFatalAndNonfatalFailures
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6903: Failure
Failed
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6921: Failure
Failed
[       OK ] HasNonfatalFailureTest.ReturnsTrueWhenThereAreFatalAndNonfatalFailures (0 ms)
[ RUN      ] HasNonfatalFailureTest.WorksOutsideOfTestBody
[       OK ] HasNonfatalFailureTest.WorksOutsideOfTestBody (0 ms)
[ RUN      ] HasNonfatalFailureTest.WorksOutsideOfTestBody2
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6937: Failure
Failed
[       OK ] HasNonfatalFailureTest.WorksOutsideOfTestBody2 (0 ms)
[----------] 6 tests from HasNonfatalFailureTest (0 ms total)

[----------] 6 tests from HasFailureTest
[ RUN      ] HasFailureTest.ReturnsFalseWhenThereIsNoFailure
[       OK ] HasFailureTest.ReturnsFalseWhenThereIsNoFailure (0 ms)
[ RUN      ] HasFailureTest.ReturnsTrueWhenThereIsFatalFailure
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6903: Failure
Failed
[       OK ] HasFailureTest.ReturnsTrueWhenThereIsFatalFailure (0 ms)
[ RUN      ] HasFailureTest.ReturnsTrueWhenThereIsNonfatalFailure
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6955: Failure
Failed
[       OK ] HasFailureTest.ReturnsTrueWhenThereIsNonfatalFailure (0 ms)
[ RUN      ] HasFailureTest.ReturnsTrueWhenThereAreFatalAndNonfatalFailures
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6903: Failure
Failed
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6963: Failure
Failed
[       OK ] HasFailureTest.ReturnsTrueWhenThereAreFatalAndNonfatalFailures (0 ms)
[ RUN      ] HasFailureTest.WorksOutsideOfTestBody
[       OK ] HasFailureTest.WorksOutsideOfTestBody (0 ms)
[ RUN      ] HasFailureTest.WorksOutsideOfTestBody2
/home/kapil/630/a6/googletest/googletest/test/gtest_unittest.cc:6977: Failure
Failed
[       OK ] HasFailureTest.WorksOutsideOfTestBody2 (0 ms)
[----------] 6 tests from HasFailureTest (0 ms total)

[----------] 4 tests from TestEventListenersTest
[ RUN      ] TestEventListenersTest.ConstructionWorks
[       OK ] TestEventListenersTest.ConstructionWorks (0 ms)
[ RUN      ] TestEventListenersTest.DestructionWorks
[       OK ] TestEventListenersTest.DestructionWorks (0 ms)
[ RUN      ] TestEventListenersTest.Append
[       OK ] TestEventListenersTest.Append (0 ms)
[ RUN      ] TestEventListenersTest.Release
[       OK ] TestEventListenersTest.Release (0 ms)
[----------] 4 tests from TestEventListenersTest (0 ms total)

[----------] 6 tests from EventListenerTest
[ RUN      ] EventListenerTest.AppendKeepsOrder
[       OK ] EventListenerTest.AppendKeepsOrder (0 ms)
[ RUN      ] EventListenerTest.SuppressEventForwarding
[       OK ] EventListenerTest.SuppressEventForwarding (0 ms)
[ RUN      ] EventListenerTest.default_result_printer
[       OK ] EventListenerTest.default_result_printer (0 ms)
[ RUN      ] EventListenerTest.RemovingDefaultResultPrinterWorks
[       OK ] EventListenerTest.RemovingDefaultResultPrinterWorks (0 ms)
[ RUN      ] EventListenerTest.default_xml_generator
[       OK ] EventListenerTest.default_xml_generator (0 ms)
[ RUN      ] EventListenerTest.RemovingDefaultXmlGeneratorWorks
[       OK ] EventListenerTest.RemovingDefaultXmlGeneratorWorks (0 ms)
[----------] 6 tests from EventListenerTest (0 ms total)

[----------] 1 test from AlternativeNameTest
[ RUN      ] AlternativeNameTest.Works
[       OK ] AlternativeNameTest.Works (0 ms)
[----------] 1 test from AlternativeNameTest (0 ms total)

[----------] 3 tests from IsAProtocolMessageTest
[ RUN      ] IsAProtocolMessageTest.ValueIsCompileTimeConstant
[       OK ] IsAProtocolMessageTest.ValueIsCompileTimeConstant (0 ms)
[ RUN      ] IsAProtocolMessageTest.ValueIsTrueWhenTypeIsAProtocolMessage
[       OK ] IsAProtocolMessageTest.ValueIsTrueWhenTypeIsAProtocolMessage (0 ms)
[ RUN      ] IsAProtocolMessageTest.ValueIsFalseWhenTypeIsNotAProtocolMessage
[       OK ] IsAProtocolMessageTest.ValueIsFalseWhenTypeIsNotAProtocolMessage (0 ms)
[----------] 3 tests from IsAProtocolMessageTest (0 ms total)

[----------] 1 test from CompileAssertTypesEqual
[ RUN      ] CompileAssertTypesEqual.CompilesWhenTypesAreEqual
[       OK ] CompileAssertTypesEqual.CompilesWhenTypesAreEqual (0 ms)
[----------] 1 test from CompileAssertTypesEqual (0 ms total)

[----------] 3 tests from RemoveReferenceTest
[ RUN      ] RemoveReferenceTest.DoesNotAffectNonReferenceType
[       OK ] RemoveReferenceTest.DoesNotAffectNonReferenceType (0 ms)
[ RUN      ] RemoveReferenceTest.RemovesReference
[       OK ] RemoveReferenceTest.RemovesReference (0 ms)
[ RUN      ] RemoveReferenceTest.MacroVersion
[       OK ] RemoveReferenceTest.MacroVersion (0 ms)
[----------] 3 tests from RemoveReferenceTest (1 ms total)

[----------] 3 tests from RemoveConstTest
[ RUN      ] RemoveConstTest.DoesNotAffectNonConstType
[       OK ] RemoveConstTest.DoesNotAffectNonConstType (0 ms)
[ RUN      ] RemoveConstTest.RemovesConst
[       OK ] RemoveConstTest.RemovesConst (0 ms)
[ RUN      ] RemoveConstTest.MacroVersion
[       OK ] RemoveConstTest.MacroVersion (0 ms)
[----------] 3 tests from RemoveConstTest (0 ms total)

[----------] 1 test from RemoveReferenceToConstTest
[ RUN      ] RemoveReferenceToConstTest.Works
[       OK ] RemoveReferenceToConstTest.Works (0 ms)
[----------] 1 test from RemoveReferenceToConstTest (0 ms total)

[----------] 3 tests from AddReferenceTest
[ RUN      ] AddReferenceTest.DoesNotAffectReferenceType
[       OK ] AddReferenceTest.DoesNotAffectReferenceType (0 ms)
[ RUN      ] AddReferenceTest.AddsReference
[       OK ] AddReferenceTest.AddsReference (0 ms)
[ RUN      ] AddReferenceTest.MacroVersion
[       OK ] AddReferenceTest.MacroVersion (0 ms)
[----------] 3 tests from AddReferenceTest (0 ms total)

[----------] 1 test from GTestReferenceToConstTest
[ RUN      ] GTestReferenceToConstTest.Works
[       OK ] GTestReferenceToConstTest.Works (0 ms)
[----------] 1 test from GTestReferenceToConstTest (0 ms total)

[----------] 3 tests from ImplicitlyConvertibleTest
[ RUN      ] ImplicitlyConvertibleTest.ValueIsCompileTimeConstant
[       OK ] ImplicitlyConvertibleTest.ValueIsCompileTimeConstant (0 ms)
[ RUN      ] ImplicitlyConvertibleTest.ValueIsTrueWhenConvertible
[       OK ] ImplicitlyConvertibleTest.ValueIsTrueWhenConvertible (0 ms)
[ RUN      ] ImplicitlyConvertibleTest.ValueIsFalseWhenNotConvertible
[       OK ] ImplicitlyConvertibleTest.ValueIsFalseWhenNotConvertible (0 ms)
[----------] 3 tests from ImplicitlyConvertibleTest (0 ms total)

[----------] 2 tests from IsContainerTestTest
[ RUN      ] IsContainerTestTest.WorksForNonContainer
[       OK ] IsContainerTestTest.WorksForNonContainer (0 ms)
[ RUN      ] IsContainerTestTest.WorksForContainer
[       OK ] IsContainerTestTest.WorksForContainer (0 ms)
[----------] 2 tests from IsContainerTestTest (0 ms total)

[----------] 3 tests from ArrayEqTest
[ RUN      ] ArrayEqTest.WorksForDegeneratedArrays
[       OK ] ArrayEqTest.WorksForDegeneratedArrays (0 ms)
[ RUN      ] ArrayEqTest.WorksForOneDimensionalArrays
[       OK ] ArrayEqTest.WorksForOneDimensionalArrays (0 ms)
[ RUN      ] ArrayEqTest.WorksForTwoDimensionalArrays
[       OK ] ArrayEqTest.WorksForTwoDimensionalArrays (0 ms)
[----------] 3 tests from ArrayEqTest (0 ms total)

[----------] 2 tests from ArrayAwareFindTest
[ RUN      ] ArrayAwareFindTest.WorksForOneDimensionalArray
[       OK ] ArrayAwareFindTest.WorksForOneDimensionalArray (0 ms)
[ RUN      ] ArrayAwareFindTest.WorksForTwoDimensionalArray
[       OK ] ArrayAwareFindTest.WorksForTwoDimensionalArray (0 ms)
[----------] 2 tests from ArrayAwareFindTest (0 ms total)

[----------] 3 tests from CopyArrayTest
[ RUN      ] CopyArrayTest.WorksForDegeneratedArrays
[       OK ] CopyArrayTest.WorksForDegeneratedArrays (0 ms)
[ RUN      ] CopyArrayTest.WorksForOneDimensionalArrays
[       OK ] CopyArrayTest.WorksForOneDimensionalArrays (0 ms)
[ RUN      ] CopyArrayTest.WorksForTwoDimensionalArrays
[       OK ] CopyArrayTest.WorksForTwoDimensionalArrays (0 ms)
[----------] 3 tests from CopyArrayTest (0 ms total)

[----------] 5 tests from NativeArrayTest
[ RUN      ] NativeArrayTest.ConstructorFromArrayWorks
[       OK ] NativeArrayTest.ConstructorFromArrayWorks (0 ms)
[ RUN      ] NativeArrayTest.CreatesAndDeletesCopyOfArrayWhenAskedTo
[       OK ] NativeArrayTest.CreatesAndDeletesCopyOfArrayWhenAskedTo (0 ms)
[ RUN      ] NativeArrayTest.TypeMembersAreCorrect
[       OK ] NativeArrayTest.TypeMembersAreCorrect (0 ms)
[ RUN      ] NativeArrayTest.MethodsWork
[       OK ] NativeArrayTest.MethodsWork (0 ms)
[ RUN      ] NativeArrayTest.WorksForTwoDimensionalArray
[       OK ] NativeArrayTest.WorksForTwoDimensionalArray (0 ms)
[----------] 5 tests from NativeArrayTest (0 ms total)

[----------] 2 tests from SkipPrefixTest
[ RUN      ] SkipPrefixTest.SkipsWhenPrefixMatches
[       OK ] SkipPrefixTest.SkipsWhenPrefixMatches (0 ms)
[ RUN      ] SkipPrefixTest.DoesNotSkipWhenPrefixDoesNotMatch
[       OK ] SkipPrefixTest.DoesNotSkipWhenPrefixDoesNotMatch (0 ms)
[----------] 2 tests from SkipPrefixTest (0 ms total)

[----------] 1 test from CodeLocationForTESTP
[ RUN      ] CodeLocationForTESTP.Verify/0
[       OK ] CodeLocationForTESTP.Verify/0 (0 ms)
[----------] 1 test from CodeLocationForTESTP (0 ms total)

[----------] Global test environment tear-down
[==========] 420 tests from 101 test cases ran. (1165 ms total)
[  PASSED  ] 420 tests.

  YOU HAVE 13 DISABLED TESTS

<end of output>
Test time =   1.17 sec
----------------------------------------------------------
Test Passed.
"gtest_no_rtti_unittest" end time: Feb 23 18:43 PST
"gtest_no_rtti_unittest" time elapsed: 00:00:01
----------------------------------------------------------

46/60 Testing: gtest-tuple_test
46/60 Test: gtest-tuple_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest-tuple_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest-tuple_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
[==========] Running 20 tests from 8 test cases.
[----------] Global test environment set-up.
[----------] 1 test from tuple_element_Test
[ RUN      ] tuple_element_Test.ReturnsElementType
[       OK ] tuple_element_Test.ReturnsElementType (0 ms)
[----------] 1 test from tuple_element_Test (0 ms total)

[----------] 1 test from tuple_size_Test
[ RUN      ] tuple_size_Test.ReturnsNumberOfFields
[       OK ] tuple_size_Test.ReturnsNumberOfFields (0 ms)
[----------] 1 test from tuple_size_Test (0 ms total)

[----------] 4 tests from ComparisonTest
[ RUN      ] ComparisonTest.ComparesWithSelf
[       OK ] ComparisonTest.ComparesWithSelf (0 ms)
[ RUN      ] ComparisonTest.ComparesEqualTuples
[       OK ] ComparisonTest.ComparesEqualTuples (0 ms)
[ RUN      ] ComparisonTest.ComparesUnequalTuplesWithoutReferenceFields
[       OK ] ComparisonTest.ComparesUnequalTuplesWithoutReferenceFields (0 ms)
[ RUN      ] ComparisonTest.ComparesUnequalTuplesWithReferenceFields
[       OK ] ComparisonTest.ComparesUnequalTuplesWithReferenceFields (0 ms)
[----------] 4 tests from ComparisonTest (0 ms total)

[----------] 1 test from ReferenceFieldTest
[ RUN      ] ReferenceFieldTest.IsAliasOfReferencedVariable
[       OK ] ReferenceFieldTest.IsAliasOfReferencedVariable (0 ms)
[----------] 1 test from ReferenceFieldTest (0 ms total)

[----------] 5 tests from TupleConstructorTest
[ RUN      ] TupleConstructorTest.DefaultConstructorDefaultInitializesEachField
[       OK ] TupleConstructorTest.DefaultConstructorDefaultInitializesEachField (0 ms)
[ RUN      ] TupleConstructorTest.ConstructsFromFields
[       OK ] TupleConstructorTest.ConstructsFromFields (0 ms)
[ RUN      ] TupleConstructorTest.CopyConstructor
[       OK ] TupleConstructorTest.CopyConstructor (0 ms)
[ RUN      ] TupleConstructorTest.ConstructsFromDifferentTupleType
[       OK ] TupleConstructorTest.ConstructsFromDifferentTupleType (0 ms)
[ RUN      ] TupleConstructorTest.ConstructsFromPair
[       OK ] TupleConstructorTest.ConstructsFromPair (0 ms)
[----------] 5 tests from TupleConstructorTest (0 ms total)

[----------] 3 tests from TupleAssignmentTest
[ RUN      ] TupleAssignmentTest.AssignsToSameTupleType
[       OK ] TupleAssignmentTest.AssignsToSameTupleType (0 ms)
[ RUN      ] TupleAssignmentTest.AssignsToDifferentTupleType
[       OK ] TupleAssignmentTest.AssignsToDifferentTupleType (0 ms)
[ RUN      ] TupleAssignmentTest.AssignsFromPair
[       OK ] TupleAssignmentTest.AssignsFromPair (0 ms)
[----------] 3 tests from TupleAssignmentTest (0 ms total)

[----------] 3 tests from BigTupleTest
[ RUN      ] BigTupleTest.Construction
[       OK ] BigTupleTest.Construction (0 ms)
[ RUN      ] BigTupleTest.get
[       OK ] BigTupleTest.get (0 ms)
[ RUN      ] BigTupleTest.Comparisons
[       OK ] BigTupleTest.Comparisons (0 ms)
[----------] 3 tests from BigTupleTest (0 ms total)

[----------] 2 tests from MakeTupleTest
[ RUN      ] MakeTupleTest.WorksForScalarTypes
[       OK ] MakeTupleTest.WorksForScalarTypes (0 ms)
[ RUN      ] MakeTupleTest.WorksForPointers
[       OK ] MakeTupleTest.WorksForPointers (0 ms)
[----------] 2 tests from MakeTupleTest (0 ms total)

[----------] Global test environment tear-down
[==========] 20 tests from 8 test cases ran. (0 ms total)
[  PASSED  ] 20 tests.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"gtest-tuple_test" end time: Feb 23 18:43 PST
"gtest-tuple_test" time elapsed: 00:00:00
----------------------------------------------------------

47/60 Testing: gtest_use_own_tuple_test
47/60 Test: gtest_use_own_tuple_test
Command: "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_use_own_tuple_test"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_use_own_tuple_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
[==========] Running 79 tests from 29 test cases.
[----------] Global test environment set-up.
[----------] 1 test from ParameterizedDeathTest
[ RUN      ] ParameterizedDeathTest.GetParamDiesFromTestF
[       OK ] ParameterizedDeathTest.GetParamDiesFromTestF (107 ms)
[----------] 1 test from ParameterizedDeathTest (107 ms total)

[----------] 1 test from IteratorTest
[ RUN      ] IteratorTest.ParamIteratorConformsToForwardIteratorConcept
[       OK ] IteratorTest.ParamIteratorConformsToForwardIteratorConcept (0 ms)
[----------] 1 test from IteratorTest (0 ms total)

[----------] 7 tests from RangeTest
[ RUN      ] RangeTest.IntRangeWithDefaultStep
[       OK ] RangeTest.IntRangeWithDefaultStep (0 ms)
[ RUN      ] RangeTest.IntRangeSingleValue
[       OK ] RangeTest.IntRangeSingleValue (0 ms)
[ RUN      ] RangeTest.IntRangeEmpty
[       OK ] RangeTest.IntRangeEmpty (0 ms)
[ RUN      ] RangeTest.IntRangeWithCustomStep
[       OK ] RangeTest.IntRangeWithCustomStep (0 ms)
[ RUN      ] RangeTest.IntRangeWithCustomStepOverUpperBound
[       OK ] RangeTest.IntRangeWithCustomStepOverUpperBound (0 ms)
[ RUN      ] RangeTest.WorksWithACustomType
[       OK ] RangeTest.WorksWithACustomType (0 ms)
[ RUN      ] RangeTest.WorksWithACustomTypeWithDifferentIncrementType
[       OK ] RangeTest.WorksWithACustomTypeWithDifferentIncrementType (0 ms)
[----------] 7 tests from RangeTest (0 ms total)

[----------] 7 tests from ValuesInTest
[ RUN      ] ValuesInTest.ValuesInArray
[       OK ] ValuesInTest.ValuesInArray (0 ms)
[ RUN      ] ValuesInTest.ValuesInConstArray
[       OK ] ValuesInTest.ValuesInConstArray (0 ms)
[ RUN      ] ValuesInTest.ValuesInSingleElementArray
[       OK ] ValuesInTest.ValuesInSingleElementArray (0 ms)
[ RUN      ] ValuesInTest.ValuesInVector
[       OK ] ValuesInTest.ValuesInVector (0 ms)
[ RUN      ] ValuesInTest.ValuesInIteratorRange
[       OK ] ValuesInTest.ValuesInIteratorRange (0 ms)
[ RUN      ] ValuesInTest.ValuesInSingleElementIteratorRange
[       OK ] ValuesInTest.ValuesInSingleElementIteratorRange (0 ms)
[ RUN      ] ValuesInTest.ValuesInEmptyIteratorRange
[       OK ] ValuesInTest.ValuesInEmptyIteratorRange (0 ms)
[----------] 7 tests from ValuesInTest (0 ms total)

[----------] 4 tests from ValuesTest
[ RUN      ] ValuesTest.ValuesWorks
[       OK ] ValuesTest.ValuesWorks (0 ms)
[ RUN      ] ValuesTest.ValuesWorksForValuesOfCompatibleTypes
[       OK ] ValuesTest.ValuesWorksForValuesOfCompatibleTypes (0 ms)
[ RUN      ] ValuesTest.ValuesWorksForMaxLengthList
[       OK ] ValuesTest.ValuesWorksForMaxLengthList (0 ms)
[ RUN      ] ValuesTest.ValuesWithSingleParameter
[       OK ] ValuesTest.ValuesWithSingleParameter (0 ms)
[----------] 4 tests from ValuesTest (0 ms total)

[----------] 1 test from BoolTest
[ RUN      ] BoolTest.BoolWorks
[       OK ] BoolTest.BoolWorks (0 ms)
[----------] 1 test from BoolTest (0 ms total)

[----------] 7 tests from CombineTest
[ RUN      ] CombineTest.CombineWithTwoParameters
[       OK ] CombineTest.CombineWithTwoParameters (0 ms)
[ RUN      ] CombineTest.CombineWithThreeParameters
[       OK ] CombineTest.CombineWithThreeParameters (0 ms)
[ RUN      ] CombineTest.CombineWithFirstParameterSingleValue
[       OK ] CombineTest.CombineWithFirstParameterSingleValue (0 ms)
[ RUN      ] CombineTest.CombineWithSecondParameterSingleValue
[       OK ] CombineTest.CombineWithSecondParameterSingleValue (0 ms)
[ RUN      ] CombineTest.CombineWithFirstParameterEmptyRange
[       OK ] CombineTest.CombineWithFirstParameterEmptyRange (0 ms)
[ RUN      ] CombineTest.CombineWithSecondParameterEmptyRange
[       OK ] CombineTest.CombineWithSecondParameterEmptyRange (0 ms)
[ RUN      ] CombineTest.CombineWithMaxNumberOfParameters
[       OK ] CombineTest.CombineWithMaxNumberOfParameters (0 ms)
[----------] 7 tests from CombineTest (1 ms total)

[----------] 1 test from ParamGeneratorTest
[ RUN      ] ParamGeneratorTest.AssignmentWorks
[       OK ] ParamGeneratorTest.AssignmentWorks (0 ms)
[----------] 1 test from ParamGeneratorTest (0 ms total)

[----------] 1 test from CustomNamingTest
[ RUN      ] CustomNamingTest.CheckNameRegistry
[       OK ] CustomNamingTest.CheckNameRegistry (0 ms)
[----------] 1 test from CustomNamingTest (0 ms total)

[----------] 1 test from NonParameterizedBaseTest
[ RUN      ] NonParameterizedBaseTest.FixtureIsInitialized
[       OK ] NonParameterizedBaseTest.FixtureIsInitialized (0 ms)
[----------] 1 test from NonParameterizedBaseTest (0 ms total)

[----------] 1 test from CompileTest
[ RUN      ] CompileTest.CombineIsDefinedOnlyWhenGtestHasParamTestIsDefined
[       OK ] CompileTest.CombineIsDefinedOnlyWhenGtestHasParamTestIsDefined (0 ms)
[----------] 1 test from CompileTest (0 ms total)

[----------] 3 tests from TestExpansionModule/TestGenerationTest
[ RUN      ] TestExpansionModule/TestGenerationTest.TestsExpandedAndRun/0
[       OK ] TestExpansionModule/TestGenerationTest.TestsExpandedAndRun/0 (0 ms)
[ RUN      ] TestExpansionModule/TestGenerationTest.TestsExpandedAndRun/1
[       OK ] TestExpansionModule/TestGenerationTest.TestsExpandedAndRun/1 (0 ms)
[ RUN      ] TestExpansionModule/TestGenerationTest.TestsExpandedAndRun/2
[       OK ] TestExpansionModule/TestGenerationTest.TestsExpandedAndRun/2 (0 ms)
[----------] 3 tests from TestExpansionModule/TestGenerationTest (0 ms total)

[----------] 1 test from GenEvalModule/GeneratorEvaluationTest
[ RUN      ] GenEvalModule/GeneratorEvaluationTest.GeneratorsEvaluatedInMain/0
[       OK ] GenEvalModule/GeneratorEvaluationTest.GeneratorsEvaluatedInMain/0 (0 ms)
[----------] 1 test from GenEvalModule/GeneratorEvaluationTest (0 ms total)

[----------] 1 test from ExternalGeneratorModule/ExternalGeneratorTest
[ RUN      ] ExternalGeneratorModule/ExternalGeneratorTest.ExternalGenerator/0
[       OK ] ExternalGeneratorModule/ExternalGeneratorTest.ExternalGenerator/0 (0 ms)
[----------] 1 test from ExternalGeneratorModule/ExternalGeneratorTest (0 ms total)

[----------] 2 tests from MultiplesOf33/ExternalInstantiationTest
[ RUN      ] MultiplesOf33/ExternalInstantiationTest.IsMultipleOf33/0
[       OK ] MultiplesOf33/ExternalInstantiationTest.IsMultipleOf33/0 (0 ms)
[ RUN      ] MultiplesOf33/ExternalInstantiationTest.IsMultipleOf33/1
[       OK ] MultiplesOf33/ExternalInstantiationTest.IsMultipleOf33/1 (0 ms)
[----------] 2 tests from MultiplesOf33/ExternalInstantiationTest (0 ms total)

[----------] 2 tests from Sequence1/MultipleInstantiationTest
[ RUN      ] Sequence1/MultipleInstantiationTest.AllowsMultipleInstances/0
[       OK ] Sequence1/MultipleInstantiationTest.AllowsMultipleInstances/0 (0 ms)
[ RUN      ] Sequence1/MultipleInstantiationTest.AllowsMultipleInstances/1
[       OK ] Sequence1/MultipleInstantiationTest.AllowsMultipleInstances/1 (0 ms)
[----------] 2 tests from Sequence1/MultipleInstantiationTest (0 ms total)

[----------] 2 tests from Sequence2/MultipleInstantiationTest
[ RUN      ] Sequence2/MultipleInstantiationTest.AllowsMultipleInstances/0
[       OK ] Sequence2/MultipleInstantiationTest.AllowsMultipleInstances/0 (0 ms)
[ RUN      ] Sequence2/MultipleInstantiationTest.AllowsMultipleInstances/1
[       OK ] Sequence2/MultipleInstantiationTest.AllowsMultipleInstances/1 (0 ms)
[----------] 2 tests from Sequence2/MultipleInstantiationTest (0 ms total)

[----------] 2 tests from Sequence1/InstantiationInMultipleTranslaionUnitsTest
[ RUN      ] Sequence1/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/0
[       OK ] Sequence1/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/0 (0 ms)
[ RUN      ] Sequence1/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/1
[       OK ] Sequence1/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/1 (0 ms)
[----------] 2 tests from Sequence1/InstantiationInMultipleTranslaionUnitsTest (0 ms total)

[----------] 3 tests from Sequence2/InstantiationInMultipleTranslaionUnitsTest
[ RUN      ] Sequence2/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/0
[       OK ] Sequence2/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/0 (0 ms)
[ RUN      ] Sequence2/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/1
[       OK ] Sequence2/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/1 (0 ms)
[ RUN      ] Sequence2/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/2
[       OK ] Sequence2/InstantiationInMultipleTranslaionUnitsTest.IsMultipleOf42/2 (0 ms)
[----------] 3 tests from Sequence2/InstantiationInMultipleTranslaionUnitsTest (0 ms total)

[----------] 3 tests from FourElemSequence/SeparateInstanceTest
[ RUN      ] FourElemSequence/SeparateInstanceTest.TestsRunInSeparateInstances/0
[       OK ] FourElemSequence/SeparateInstanceTest.TestsRunInSeparateInstances/0 (0 ms)
[ RUN      ] FourElemSequence/SeparateInstanceTest.TestsRunInSeparateInstances/1
[       OK ] FourElemSequence/SeparateInstanceTest.TestsRunInSeparateInstances/1 (0 ms)
[ RUN      ] FourElemSequence/SeparateInstanceTest.TestsRunInSeparateInstances/2
[       OK ] FourElemSequence/SeparateInstanceTest.TestsRunInSeparateInstances/2 (0 ms)
[----------] 3 tests from FourElemSequence/SeparateInstanceTest (0 ms total)

[----------] 5 tests from ZeroToFiveSequence/NamingTest
[ RUN      ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/0
[       OK ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/0 (0 ms)
[ RUN      ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/1
[       OK ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/1 (0 ms)
[ RUN      ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/2
[       OK ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/2 (0 ms)
[ RUN      ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/3
[       OK ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/3 (0 ms)
[ RUN      ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/4
[       OK ] ZeroToFiveSequence/NamingTest.TestsReportCorrectNamesAndParameters/4 (0 ms)
[----------] 5 tests from ZeroToFiveSequence/NamingTest (0 ms total)

[----------] 1 test from CustomParamNameFunctor/CustomFunctorNamingTest
[ RUN      ] CustomParamNameFunctor/CustomFunctorNamingTest.CustomTestNames/FunctorName
[       OK ] CustomParamNameFunctor/CustomFunctorNamingTest.CustomTestNames/FunctorName (0 ms)
[----------] 1 test from CustomParamNameFunctor/CustomFunctorNamingTest (0 ms total)

[----------] 3 tests from AllAllowedCharacters/CustomFunctorNamingTest
[ RUN      ] AllAllowedCharacters/CustomFunctorNamingTest.CustomTestNames/abcdefghijklmnopqrstuvwxyz
[       OK ] AllAllowedCharacters/CustomFunctorNamingTest.CustomTestNames/abcdefghijklmnopqrstuvwxyz (0 ms)
[ RUN      ] AllAllowedCharacters/CustomFunctorNamingTest.CustomTestNames/ABCDEFGHIJKLMNOPQRSTUVWXYZ
[       OK ] AllAllowedCharacters/CustomFunctorNamingTest.CustomTestNames/ABCDEFGHIJKLMNOPQRSTUVWXYZ (0 ms)
[ RUN      ] AllAllowedCharacters/CustomFunctorNamingTest.CustomTestNames/01234567890_
[       OK ] AllAllowedCharacters/CustomFunctorNamingTest.CustomTestNames/01234567890_ (0 ms)
[----------] 3 tests from AllAllowedCharacters/CustomFunctorNamingTest (0 ms total)

[----------] 1 test from CustomParamNameFunction/CustomFunctionNamingTest
[ RUN      ] CustomParamNameFunction/CustomFunctionNamingTest.CustomTestNames/FunctionName
[       OK ] CustomParamNameFunction/CustomFunctionNamingTest.CustomTestNames/FunctionName (0 ms)
[----------] 1 test from CustomParamNameFunction/CustomFunctionNamingTest (0 ms total)

[----------] 5 tests from PrintToString/CustomIntegerNamingTest
[ RUN      ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/0
[       OK ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/0 (0 ms)
[ RUN      ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/1
[       OK ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/1 (0 ms)
[ RUN      ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/2
[       OK ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/2 (0 ms)
[ RUN      ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/3
[       OK ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/3 (0 ms)
[ RUN      ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/4
[       OK ] PrintToString/CustomIntegerNamingTest.TestsReportCorrectNames/4 (0 ms)
[----------] 5 tests from PrintToString/CustomIntegerNamingTest (0 ms total)

[----------] 2 tests from PrintToString/CustomStructNamingTest
[ RUN      ] PrintToString/CustomStructNamingTest.TestsReportCorrectNames/0
[       OK ] PrintToString/CustomStructNamingTest.TestsReportCorrectNames/0 (0 ms)
[ RUN      ] PrintToString/CustomStructNamingTest.TestsReportCorrectNames/1
[       OK ] PrintToString/CustomStructNamingTest.TestsReportCorrectNames/1 (0 ms)
[----------] 2 tests from PrintToString/CustomStructNamingTest (0 ms total)

[----------] 5 tests from StatefulNamingFunctor/StatefulNamingTest
[ RUN      ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/0
[       OK ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/0 (0 ms)
[ RUN      ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/1
[       OK ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/1 (0 ms)
[ RUN      ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/2
[       OK ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/2 (0 ms)
[ RUN      ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/3
[       OK ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/3 (0 ms)
[ RUN      ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/4
[       OK ] StatefulNamingFunctor/StatefulNamingTest.TestsReportCorrectNames/4 (0 ms)
[----------] 5 tests from StatefulNamingFunctor/StatefulNamingTest (0 ms total)

[----------] 1 test from InstantiationWithComments/CommentTest
[ RUN      ] InstantiationWithComments/CommentTest.TestsCorrectlyReportUnstreamableParams/0
[       OK ] InstantiationWithComments/CommentTest.TestsCorrectlyReportUnstreamableParams/0 (0 ms)
[----------] 1 test from InstantiationWithComments/CommentTest (0 ms total)

[----------] 5 tests from RangeZeroToFive/ParameterizedDerivedTest
[ RUN      ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/0
[       OK ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/0 (0 ms)
[ RUN      ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/1
[       OK ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/1 (0 ms)
[ RUN      ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/2
[       OK ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/2 (0 ms)
[ RUN      ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/3
[       OK ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/3 (0 ms)
[ RUN      ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/4
[       OK ] RangeZeroToFive/ParameterizedDerivedTest.SeesSequence/4 (0 ms)
[----------] 5 tests from RangeZeroToFive/ParameterizedDerivedTest (0 ms total)

[----------] Global test environment tear-down
[==========] 79 tests from 29 test cases ran. (108 ms total)
[  PASSED  ] 79 tests.
<end of output>
Test time =   0.11 sec
----------------------------------------------------------
Test Passed.
"gtest_use_own_tuple_test" end time: Feb 23 18:43 PST
"gtest_use_own_tuple_test" time elapsed: 00:00:00
----------------------------------------------------------

48/60 Testing: gtest_break_on_failure_unittest
48/60 Test: gtest_break_on_failure_unittest
Command: "/usr/bin/python" "/home/kapil/630/a6/googletest/googletest/test/gtest_break_on_failure_unittest.py" "--build_dir=/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_break_on_failure_unittest" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
.....
----------------------------------------------------------------------
Ran 5 tests in 0.534s

OK
<end of output>
Test time =   0.66 sec
----------------------------------------------------------
Test Passed.
"gtest_break_on_failure_unittest" end time: Feb 23 18:43 PST
"gtest_break_on_failure_unittest" time elapsed: 00:00:00
----------------------------------------------------------

49/60 Testing: gtest_catch_exceptions_test
49/60 Test: gtest_catch_exceptions_test
Command: "/usr/bin/python" "/home/kapil/630/a6/googletest/googletest/test/gtest_catch_exceptions_test.py" "--build_dir=/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_catch_exceptions_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
.........
----------------------------------------------------------------------
Ran 9 tests in 0.003s

OK
<end of output>
Test time =   0.05 sec
----------------------------------------------------------
Test Passed.
"gtest_catch_exceptions_test" end time: Feb 23 18:43 PST
"gtest_catch_exceptions_test" time elapsed: 00:00:00
----------------------------------------------------------

50/60 Testing: gtest_color_test
50/60 Test: gtest_color_test
Command: "/usr/bin/python" "/home/kapil/630/a6/googletest/googletest/test/gtest_color_test.py" "--build_dir=/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_color_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
.....
----------------------------------------------------------------------
Ran 5 tests in 0.043s

OK
<end of output>
Test time =   0.09 sec
----------------------------------------------------------
Test Passed.
"gtest_color_test" end time: Feb 23 18:43 PST
"gtest_color_test" time elapsed: 00:00:00
----------------------------------------------------------

51/60 Testing: gtest_env_var_test
51/60 Test: gtest_env_var_test
Command: "/usr/bin/python" "/home/kapil/630/a6/googletest/googletest/test/gtest_env_var_test.py" "--build_dir=/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_env_var_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
.
----------------------------------------------------------------------
Ran 1 test in 0.039s

OK
<end of output>
Test time =   0.08 sec
----------------------------------------------------------
Test Passed.
"gtest_env_var_test" end time: Feb 23 18:43 PST
"gtest_env_var_test" time elapsed: 00:00:00
----------------------------------------------------------

52/60 Testing: gtest_filter_unittest
52/60 Test: gtest_filter_unittest
Command: "/usr/bin/python" "/home/kapil/630/a6/googletest/googletest/test/gtest_filter_unittest.py" "--build_dir=/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_filter_unittest" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
...................
----------------------------------------------------------------------
Ran 19 tests in 0.382s

OK
<end of output>
Test time =   0.47 sec
----------------------------------------------------------
Test Passed.
"gtest_filter_unittest" end time: Feb 23 18:43 PST
"gtest_filter_unittest" time elapsed: 00:00:00
----------------------------------------------------------

53/60 Testing: gtest_help_test
53/60 Test: gtest_help_test
Command: "/usr/bin/python" "/home/kapil/630/a6/googletest/googletest/test/gtest_help_test.py" "--build_dir=/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_help_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
........
----------------------------------------------------------------------
Ran 8 tests in 0.019s

OK
<end of output>
Test time =   0.07 sec
----------------------------------------------------------
Test Passed.
"gtest_help_test" end time: Feb 23 18:43 PST
"gtest_help_test" time elapsed: 00:00:00
----------------------------------------------------------

54/60 Testing: gtest_list_tests_unittest
54/60 Test: gtest_list_tests_unittest
Command: "/usr/bin/python" "/home/kapil/630/a6/googletest/googletest/test/gtest_list_tests_unittest.py" "--build_dir=/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_list_tests_unittest" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
....
----------------------------------------------------------------------
Ran 4 tests in 0.011s

OK
<end of output>
Test time =   0.06 sec
----------------------------------------------------------
Test Passed.
"gtest_list_tests_unittest" end time: Feb 23 18:43 PST
"gtest_list_tests_unittest" time elapsed: 00:00:00
----------------------------------------------------------

55/60 Testing: gtest_output_test
55/60 Test: gtest_output_test
Command: "/usr/bin/python" "/home/kapil/630/a6/googletest/googletest/test/gtest_output_test.py" "--build_dir=/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_output_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
.
----------------------------------------------------------------------
Ran 1 test in 0.053s

OK
<end of output>
Test time =   0.10 sec
----------------------------------------------------------
Test Passed.
"gtest_output_test" end time: Feb 23 18:43 PST
"gtest_output_test" time elapsed: 00:00:00
----------------------------------------------------------

56/60 Testing: gtest_shuffle_test
56/60 Test: gtest_shuffle_test
Command: "/usr/bin/python" "/home/kapil/630/a6/googletest/googletest/test/gtest_shuffle_test.py" "--build_dir=/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_shuffle_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
...........
----------------------------------------------------------------------
Ran 11 tests in 0.032s

OK
<end of output>
Test time =   0.08 sec
----------------------------------------------------------
Test Passed.
"gtest_shuffle_test" end time: Feb 23 18:43 PST
"gtest_shuffle_test" time elapsed: 00:00:00
----------------------------------------------------------

57/60 Testing: gtest_throw_on_failure_test
57/60 Test: gtest_throw_on_failure_test
Command: "/usr/bin/python" "/home/kapil/630/a6/googletest/googletest/test/gtest_throw_on_failure_test.py" "--build_dir=/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_throw_on_failure_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
....
----------------------------------------------------------------------
Ran 4 tests in 0.436s

OK
Running "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_throw_on_failure_test_". . .
Running "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_throw_on_failure_test_". . .
Running "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_throw_on_failure_test_". . .
Running "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_throw_on_failure_test_ --gtest_throw_on_failure=0". . .
Running "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_throw_on_failure_test_ --gtest_throw_on_failure". . .
Running "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_throw_on_failure_test_ --gtest_throw_on_failure=0". . .
Running "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_throw_on_failure_test_ --gtest_throw_on_failure". . .
Running "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_throw_on_failure_test_ --gtest_throw_on_failure=0". . .
Running "/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/gtest_throw_on_failure_test_ --gtest_throw_on_failure". . .
<end of output>
Test time =   0.48 sec
----------------------------------------------------------
Test Passed.
"gtest_throw_on_failure_test" end time: Feb 23 18:43 PST
"gtest_throw_on_failure_test" time elapsed: 00:00:00
----------------------------------------------------------

58/60 Testing: gtest_uninitialized_test
58/60 Test: gtest_uninitialized_test
Command: "/usr/bin/python" "/home/kapil/630/a6/googletest/googletest/test/gtest_uninitialized_test.py" "--build_dir=/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_uninitialized_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
.
----------------------------------------------------------------------
Ran 1 test in 0.002s

OK
<end of output>
Test time =   0.05 sec
----------------------------------------------------------
Test Passed.
"gtest_uninitialized_test" end time: Feb 23 18:43 PST
"gtest_uninitialized_test" time elapsed: 00:00:00
----------------------------------------------------------

59/60 Testing: gtest_xml_outfiles_test
59/60 Test: gtest_xml_outfiles_test
Command: "/usr/bin/python" "/home/kapil/630/a6/googletest/googletest/test/gtest_xml_outfiles_test.py" "--build_dir=/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_xml_outfiles_test" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
..
----------------------------------------------------------------------
Ran 2 tests in 0.015s

OK
<end of output>
Test time =   0.07 sec
----------------------------------------------------------
Test Passed.
"gtest_xml_outfiles_test" end time: Feb 23 18:43 PST
"gtest_xml_outfiles_test" time elapsed: 00:00:00
----------------------------------------------------------

60/60 Testing: gtest_xml_output_unittest
60/60 Test: gtest_xml_output_unittest
Command: "/usr/bin/python" "/home/kapil/630/a6/googletest/googletest/test/gtest_xml_output_unittest.py" "--build_dir=/home/kapil/630/a6/googletest/googletest/build/googlemock/gtest/"
Directory: /home/kapil/630/a6/googletest/googletest/build/googlemock/gtest
"gtest_xml_output_unittest" start time: Feb 23 18:43 PST
Output:
----------------------------------------------------------
......
----------------------------------------------------------------------
Ran 6 tests in 0.033s

OK
<end of output>
Test time =   0.10 sec
----------------------------------------------------------
Test Passed.
"gtest_xml_output_unittest" end time: Feb 23 18:43 PST
"gtest_xml_output_unittest" time elapsed: 00:00:00
----------------------------------------------------------

End testing: Feb 23 18:43 PST
